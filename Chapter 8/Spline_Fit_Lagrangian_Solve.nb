(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    362094,       7108]
NotebookOptionsPosition[    357679,       7038]
NotebookOutlinePosition[    358162,       7056]
CellTagsIndexPosition[    358119,       7053]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"ClearAll", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Model", " ", 
    RowBox[{"Parameters", ".", " ", "These"}], " ", "must", " ", "be", " ", 
    "defined", " ", "beforehand"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L1", "=", 
    RowBox[{"44.13", "*", 
     RowBox[{"10", "^", 
      RowBox[{"-", "3"}]}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Proximal", " ", "Segment", " ", "length", " ", "in", " ", "meters"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L2", "=", 
    RowBox[{"28.01", "*", 
     RowBox[{"10", "^", 
      RowBox[{"-", "3"}]}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Middle", " ", "Segment", " ", "length", " ", "in", " ", "meters"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L3", "=", 
    RowBox[{"26.31", "*", 
     RowBox[{"10", "^", 
      RowBox[{"-", "3"}]}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Distal", " ", "Segment", " ", "length", " ", "in", " ", "meters"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rho", "=", 
    RowBox[{"1.16", "*", 
     RowBox[{"10", "^", "3"}]}]}], " ", ";"}], 
  RowBox[{"(*", 
   RowBox[{"Human", " ", "hand", " ", "density", " ", "in", " ", 
    RowBox[{"kg", "/", 
     RowBox[{"m", "^", "3"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R1", "=", 
    RowBox[{"9.86", "*", 
     RowBox[{"10", "^", 
      RowBox[{"-", "3"}]}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Proximal", " ", "Segment", " ", "radius", " ", "in", " ", "meters"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R2", "=", 
    RowBox[{"8.525", "*", 
     RowBox[{"10", "^", 
      RowBox[{"-", "3"}]}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Middle", " ", "Segment", " ", "radius", " ", "in", " ", "meters"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R3", "=", 
    RowBox[{"7.82", "*", 
     RowBox[{"10", "^", 
      RowBox[{"-", "3"}]}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Distal", " ", "Segment", " ", "radius", " ", "in", " ", "meters"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"m1", "=", 
    RowBox[{"Pi", "*", "rho", "*", 
     RowBox[{"R1", "^", "2"}], "*", "L1"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Proximal", " ", "Segment", " ", "mass", " ", "in", " ", "Kg"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"m2", "=", 
    RowBox[{"Pi", "*", "rho", "*", 
     RowBox[{"R2", "^", "2"}], "*", "L2"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Middle", " ", "Segment", " ", "mass", " ", "in", " ", "Kg"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"m3", "=", 
    RowBox[{"Pi", "*", "rho", "*", 
     RowBox[{"R3", "^", "2"}], "*", "L3"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Distal", " ", "Segment", " ", "mass", " ", "in", " ", "Kg"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I1", "=", 
    RowBox[{"m1", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"R1", "^", "2"}], "/", "4"}], "+", 
       RowBox[{
        RowBox[{"L1", "^", "2"}], "/", "12"}]}], ")"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Proximal", " ", "Segment", " ", "moment", " ", "of", " ", "inertia", " ", 
    "about", " ", "its", " ", "COM", " ", "in", " ", "Kg", "*", 
    RowBox[{"m", "^", "2"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I2", "=", 
    RowBox[{"m2", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"R2", "^", "2"}], "/", "4"}], "+", 
       RowBox[{
        RowBox[{"L2", "^", "2"}], "/", "12"}]}], ")"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Middle", " ", "Segment", " ", "moment", " ", "of", " ", "inertia", " ", 
    "about", " ", "its", " ", "COM", " ", "in", " ", "Kg", "*", 
    RowBox[{"m", "^", "2"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"I3", "=", 
    RowBox[{"m3", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"R3", "^", "2"}], "/", "4"}], "+", 
       RowBox[{
        RowBox[{"L3", "^", "2"}], "/", "12"}]}], ")"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Distal", " ", "Segment", " ", "moment", " ", "of", " ", "inertia", " ", 
    "about", " ", "its", " ", "COM", " ", "in", " ", "Kg", "*", 
    RowBox[{"m", "^", "2"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"K1", "=", "9.144692854"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Proximal", " ", "Segment", " ", "torsional", " ", "spring", " ", 
    "constant", " ", "determined", " ", "from", " ", "optimisation", " ", "N",
     "*", 
    RowBox[{"m", "/", "rad"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"K2", "=", "5.124550619"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Middle", " ", "Segment", " ", "torsional", " ", "spring", " ", "constant",
     " ", "determined", " ", "from", " ", "optimisation", " ", "N", "*", 
    RowBox[{"m", "/", "rad"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"K3", "=", "9.908332147"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Distal", " ", "Segment", " ", "torsional", " ", "spring", " ", "constant",
     " ", "determined", " ", "from", " ", "optimisation", " ", "N", "*", 
    RowBox[{"m", "/", "rad"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"b1", "=", "0.277430345"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Proximal", " ", "Segment", " ", "torsional", " ", "spring", " ", 
    "constant", " ", "determined", " ", "from", " ", "optimisation", " ", "N",
     "*", "m", "*", 
    RowBox[{"s", "/", "rad"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"b2", "=", "0.314324434"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Middle", " ", "Segment", " ", "torsional", " ", "spring", " ", "constant",
     " ", "determined", " ", "from", " ", "optimisation", " ", "N", "*", "m", 
    "*", 
    RowBox[{"s", "/", "rad"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"b3", "=", "0.837228995"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Distal", " ", "Segment", " ", "torsional", " ", "damper", " ", "constant",
     " ", "determined", " ", "from", " ", "optimisation", " ", "N", "*", "m", 
    "*", 
    RowBox[{"s", "/", "rad"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Muscle", " ", "moment", " ", "scaling", " ", "parameters", " ", "as", " ",
     "determined", " ", "from", " ", "IBK", " ", "solution"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"redcMCP", "=", "0.137721699"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rfdpMCP", "=", "0.13841923"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rfdsMCP", "=", "0.139049285"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"redcPIP", "=", "0.701845852"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rfdpPIP", "=", "0.690272427"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rfdsPIP", "=", "0.696480248"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"redcDIP", "=", "0.101906797"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rfdpDIP", "=", "0.101906752"}], ";"}], "\[IndentingNewLine]", 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"Import", " ", "MATLAB", " ", "data"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\u1857308\\\\OneDrive - University of \
Warwick\\\\PhD\\\\Hand Trials\\\\Results\\\\Cylindrical \
Grasp\\\\P1\\\\Trial_digit2_Par_1_Thelen_trial3.csv\>\"", ",", 
      "\"\<csv\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Experiment", " ", "time"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tim", "=", 
    RowBox[{"U", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "9"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]",
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Cubic", " ", "spline", " ", "interpolation", " ", "of", " ", "Muscle", 
    " ", "moment", " ", "data"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EDCMCP", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"tim", ",", 
       RowBox[{"U", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "}"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FDPMCP", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"tim", ",", 
       RowBox[{"U", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FDSMCP", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"tim", ",", 
       RowBox[{"U", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "3"}], "]"}], "]"}]}], "}"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EDCPIP", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"tim", ",", 
       RowBox[{"U", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "4"}], "]"}], "]"}]}], "}"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FDPPIP", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"tim", ",", 
       RowBox[{"U", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "5"}], "]"}], "]"}]}], "}"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FDSPIP", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"tim", ",", 
       RowBox[{"U", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "6"}], "]"}], "]"}]}], "}"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EDCDIP", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"tim", ",", 
       RowBox[{"U", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "7"}], "]"}], "]"}]}], "}"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FDPDIP", "=", 
    RowBox[{"Interpolation", "[", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"tim", ",", 
        RowBox[{"U", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "8"}], "]"}], "]"}]}], "}"}], "]"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Filtered", " ", "MoCap", " ", "data"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"th1f", "=", 
   RowBox[{"U", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "10"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"th2f", "=", 
   RowBox[{"U", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "12"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"th3f", "=", 
   RowBox[{"U", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "14"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"th1eq", "=", 
    RowBox[{"Last", "[", "th1f", "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Proximal", " ", "Segment", " ", "equilibrium", " ", "angle", " ", "in", 
    " ", "rad"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"th2eq", "=", 
    RowBox[{"Last", "[", "th2f", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Middle", " ", "Segment", " ", "equilibrium", " ", "angle", " ", "in", " ",
     "rad"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"th3eq", "=", 
    RowBox[{"Last", "[", "th3f", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Distal", " ", "Segment", " ", "equilibrium", " ", "angle", " ", "in", " ",
     "rad"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{"Derived", " ", "Lagrangian"}], "Subsection"], "\n", 
  RowBox[{"(*", 
   RowBox[{
   "Triple", " ", "pendulum", " ", "Lagrangian", " ", "with", " ", "no", " ", 
    "abduction", " ", "movement"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"x1", "[", "t", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "L1"}], "/", "2"}], "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"th1", "[", "t", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"y1", "[", "t", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "L1"}], "/", "2"}], "*", 
    RowBox[{"Sin", "[", 
     RowBox[{"th1", "[", "t", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"x2", "[", "t", "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"L1", "*", 
       RowBox[{"Cos", "[", 
        RowBox[{"th1", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"L2", "/", "2"}], "*", 
       RowBox[{"Cos", "[", 
        RowBox[{"th2", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"y2", "[", "t", "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"L1", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"th1", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"L2", "/", "2"}], "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"th2", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"x3", "[", "t", "]"}], "=", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"L1", "*", 
       RowBox[{"Cos", "[", 
        RowBox[{"th1", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{"L2", "*", 
       RowBox[{"Cos", "[", 
        RowBox[{"th2", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"L3", "/", "2"}], "*", 
       RowBox[{"Cos", "[", 
        RowBox[{"th3", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"y3", "[", "t", "]"}], "=", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"L1", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"th1", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"L2", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"th2", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"L3", "/", "2"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"th3", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", 
   RowBox[{
   "Translational", " ", "part", " ", "for", " ", "Parallel", " ", "axis", 
    " ", "Theorem"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"r1", "[", "t", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"x1", "[", "t", "]"}], ",", "t"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"y1", "[", "t", "]"}], ",", "t"}], "]"}], "^", "2"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{"r1", "[", "t", "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"r2", "[", "t", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"x2", "[", "t", "]"}], ",", "t"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"y2", "[", "t", "]"}], ",", "t"}], "]"}], "^", "2"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{"Expand", "[", 
    RowBox[{"r2", "[", "t", "]"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"r3", "[", "t", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"x3", "[", "t", "]"}], ",", "t"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"y3", "[", "t", "]"}], ",", "t"}], "]"}], "^", "2"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{"Expand", "[", 
    RowBox[{"r3", "[", "t", "]"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"K1a", "=", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"m1", "*", 
        RowBox[{"r1", "[", "t", "]"}]}], "+", 
       RowBox[{"m2", "*", 
        RowBox[{"r2", "[", "t", "]"}]}], "+", 
       RowBox[{"m3", "*", 
        RowBox[{"r3", "[", "t", "]"}]}]}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Rotational", " ", "Kinetic", " ", "Energy"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"T", "=", 
   RowBox[{
    RowBox[{"1", "/", "2"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"I1", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"th1", "'"}], "[", "t", "]"}], "^", "2"}], ")"}]}], "+", 
      RowBox[{"I2", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"th2", "'"}], "[", "t", "]"}], "^", "2"}], ")"}]}], "+", 
      RowBox[{"I3", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"th3", "'"}], "[", "t", "]"}], "^", "2"}], ")"}]}]}], 
     ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Kt", "=", 
    RowBox[{
     RowBox[{"K1a", "+", "T"}], "//", "FullSimplify"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Spring", " ", "Potential", " ", "Energy"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vspr", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"K1", "/", "2"}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"th1", "[", "t", "]"}], "-", "th1eq"}], ")"}], "^", "2"}]}], 
    "+", 
    RowBox[{
     RowBox[{"K2", "/", "2"}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"th2", "[", "t", "]"}], "-", "th2eq"}], ")"}], "^", "2"}]}], 
    "+", 
    RowBox[{
     RowBox[{"K3", "/", "2"}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"th3", "[", "t", "]"}], "-", "th3eq"}], ")"}], "^", 
      "2"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"V", "=", "Vspr"}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Lagrangian", " ", "Function"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L", "=", 
    RowBox[{"Kt", "-", "V"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Euler", "-", 
    RowBox[{"Lagrange", " ", "equations"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{
         RowBox[{"th1", "'"}], "[", "t", "]"}]}], "]"}], ",", "t"}], "]"}], 
    "-", 
    RowBox[{"D", "[", 
     RowBox[{"L", ",", 
      RowBox[{"th1", "[", "t", "]"}]}], "]"}], "+", 
    RowBox[{"b1", "*", 
     RowBox[{
      RowBox[{"th1", "'"}], "[", "t", "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"a", "//", "FullSimplify"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{
         RowBox[{"th2", "'"}], "[", "t", "]"}]}], "]"}], ",", "t"}], "]"}], 
    "-", 
    RowBox[{"D", "[", 
     RowBox[{"L", ",", 
      RowBox[{"th2", "[", "t", "]"}]}], "]"}], "+", 
    RowBox[{"b2", "*", 
     RowBox[{
      RowBox[{"th2", "'"}], "[", "t", "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"b", "//", "FullSimplify"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"c", "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{
         RowBox[{"th3", "'"}], "[", "t", "]"}]}], "]"}], ",", "t"}], "]"}], 
    "-", 
    RowBox[{"D", "[", 
     RowBox[{"L", ",", 
      RowBox[{"th3", "[", "t", "]"}]}], "]"}], "+", 
    RowBox[{"b3", "*", 
     RowBox[{
      RowBox[{"th3", "'"}], "[", "t", "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"c", "//", "FullSimplify"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"IBK", " ", "solution", " ", "data"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y1", "=", 
   RowBox[{"U", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "15"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y2", "=", 
   RowBox[{"U", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "16"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Y3", "=", 
    RowBox[{"U", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "17"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Input", " ", "functions", " ", "generation"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"u1", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{"redcMCP", "*", 
     RowBox[{"EDCMCP", "[", "t", "]"}]}], "+", 
    RowBox[{"rfdpMCP", "*", 
     RowBox[{"FDPMCP", "[", "t", "]"}]}], "+", 
    RowBox[{"rfdsMCP", "*", 
     RowBox[{"FDSMCP", "[", "t", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"u2", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{"redcPIP", "*", 
     RowBox[{"EDCPIP", "[", "t", "]"}]}], "+", 
    RowBox[{"rfdpPIP", "*", 
     RowBox[{"FDPPIP", "[", "t", "]"}]}], "+", 
    RowBox[{"rfdsPIP", "*", 
     RowBox[{"FDSPIP", "[", "t", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"u3", "[", "t_", "]"}], "=", 
    RowBox[{
     RowBox[{"redcDIP", "*", 
      RowBox[{"EDCDIP", "[", "t", "]"}]}], "+", 
     RowBox[{"rfdpDIP", "*", 
      RowBox[{"FDPDIP", "[", "t", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Initial", " ", "conditions"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"init", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"th1", "[", "0", "]"}], "==", 
       RowBox[{"th1f", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"th1", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
      RowBox[{
       RowBox[{"th2", "[", "0", "]"}], "==", 
       RowBox[{"th2f", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"th2", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
      RowBox[{
       RowBox[{"th3", "[", "0", "]"}], "==", 
       RowBox[{"th3f", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"th3", "'"}], "[", "0", "]"}], "==", "0"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Differential", " ", "equations"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eqn", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "==", 
       RowBox[{"u1", "[", "t", "]"}]}], ",", 
      RowBox[{"b", "==", 
       RowBox[{"u2", "[", "t", "]"}]}], ",", 
      RowBox[{"c", "==", 
       RowBox[{"u3", "[", "t", "]"}]}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Solving", " ", "Differential", " ", "Equations"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eqn", ",", "init"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"th1", "[", "t", "]"}], ",", 
        RowBox[{
         RowBox[{"th1", "'"}], "[", "t", "]"}], ",", 
        RowBox[{"th2", "[", "t", "]"}], ",", 
        RowBox[{
         RowBox[{"th2", "'"}], "[", "t", "]"}], ",", 
        RowBox[{"th3", "[", "t", "]"}], ",", 
        RowBox[{
         RowBox[{"th3", "'"}], "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"tim", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"Last", "[", "tim", "]"}]}], "}"}], ",", 
      RowBox[{"Method", "->", "\"\<StiffnessSwitching\>\""}], ",", 
      RowBox[{"MaxStepSize", "\[Rule]", 
       RowBox[{"10", "^", 
        RowBox[{"-", "4"}]}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"timePoints", " ", "=", " ", 
   RowBox[{"N", "[", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"tim", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"Last", "[", "tim", "]"}], ",", 
      RowBox[{"1", "/", "125"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"th1S", "=", 
   RowBox[{
    RowBox[{"th1", "[", "t", "]"}], "/.", "s"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"th1Values", " ", "=", " ", 
    RowBox[{"N", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"th1S", "/.", " ", 
          RowBox[{"t", " ", "->", " ", "tval"}]}], "]"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"tval", ",", " ", "timePoints"}], "}"}]}], "]"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"MCP", " ", "results", " ", "plot"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"tim", ",", "th1f"}], "}"}], "]"}], ",", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"tim", ",", "Y1"}], "}"}], "]"}], ",", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"timePoints", ",", "th1Values"}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<Filtered data\>\"", ",", "\"\<IBK Solution\>\"", ",", 
         "\"\<Lagrangian Solution\>\""}], "}"}], ",", 
       RowBox[{"{", "0.6", "}"}]}], "]"}]}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<Results for MCP movement\>\""}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Times (s)\>\"", ",", "\"\<MCP Angle (rad)\>\""}], "}"}]}], 
    ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", " ", "Dashed", ",", " ", "Circle"}], 
      "}"}]}]}], "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"PIP", " ", "Results", " ", "plot"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"tim", ",", "th2f"}], "}"}], "]"}], ",", 
      RowBox[{"PlotStyle", "->", "Red"}], ",", 
      RowBox[{"PlotRange", "->", "All"}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Data\>\""}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<Filtered data\>\"", "}"}]}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"tim", ",", "Y2"}], "}"}], "]"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"PointSize", "[", "0.01", "]"}]}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", "All"}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Data\>\""}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<IBK Solution\>\"", "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"th2", "[", "t", "]"}], "/.", "s"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"tim", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"Last", "[", "tim", "]"}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Dashed", ",", "Blue"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<Lagrangian Solution\>\"", "}"}]}]}], "]"}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<Results for PIP movement\>\""}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Times (s)\>\"", ",", "\"\<PIP Angle (rad)\>\""}], 
      "}"}]}]}], "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"DIP", " ", "Results", " ", "Plot"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"tim", ",", "th3f"}], "}"}], "]"}], ",", 
      RowBox[{"PlotStyle", "->", "Red"}], ",", 
      RowBox[{"PlotRange", "->", "All"}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Data\>\""}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<Filtered data\>\"", "}"}]}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"tim", ",", "Y3"}], "}"}], "]"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"PointSize", "[", "0.01", "]"}]}], "}"}]}], ",", " ", 
      RowBox[{"PlotRange", "->", "All"}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Data\>\""}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<IBK Solution\>\"", "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"th3", "[", "t", "]"}], "/.", "s"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"tim", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"Last", "[", "tim", "]"}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Dashed", ",", "Blue"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<Lagrangian Solution\>\"", "}"}]}]}], "]"}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<Results for DIP movement\>\""}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Times (s)\>\"", ",", "\"\<DIP Angle (rad)\>\""}], 
      "}"}]}]}], "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"MCP", " ", "Difference", " ", "plot"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"tim", ",", "th3f"}], "}"}], "]"}], ",", 
      RowBox[{"PlotStyle", "->", "Red"}], ",", 
      RowBox[{"PlotRange", "->", "All"}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Data\>\""}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<Filtered data\>\"", "}"}]}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"tim", ",", "Y3"}], "}"}], "]"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"PointSize", "[", "0.01", "]"}]}], "}"}]}], ",", " ", 
      RowBox[{"PlotRange", "->", "All"}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Data\>\""}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<IBK Solution\>\"", "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"th3", "[", "t", "]"}], "/.", "s"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"tim", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"Last", "[", "tim", "]"}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Dashed", ",", "Blue"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<Lagrangian Solution\>\"", "}"}]}]}], "]"}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<Results for DIP movement\>\""}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Times (s)\>\"", ",", "\"\<DIP Angle (rad)\>\""}], 
      "}"}]}]}], "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "2000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datath1s", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"th1", "[", "t", "]"}], "/.", "s"}], "]"}]}], "}"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"tim", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"Last", "[", "tim", "]"}], ",", 
       RowBox[{
        RowBox[{"Last", "[", "tim", "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"n", "-", "1"}], ")"}]}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Th1S.csv\>\"", ",", "datath1s", ",", "\"\<CSV\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datath1s", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"th2", "[", "t", "]"}], "/.", "s"}], "]"}]}], "}"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"tim", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"Last", "[", "tim", "]"}], ",", 
       RowBox[{
        RowBox[{"Last", "[", "tim", "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"n", "-", "1"}], ")"}]}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Th2S.csv\>\"", ",", "datath1s", ",", "\"\<CSV\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datath1s", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"th3", "[", "t", "]"}], "/.", "s"}], "]"}]}], "}"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"tim", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"Last", "[", "tim", "]"}], ",", 
       RowBox[{
        RowBox[{"Last", "[", "tim", "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"n", "-", "1"}], ")"}]}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Th3S.csv\>\"", ",", "datath1s", ",", "\"\<CSV\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8870982331396203`*^9, 3.8870982900619483`*^9}, {
   3.8870983271882267`*^9, 3.887098460713709*^9}, {3.88924427581194*^9, 
   3.889244294523802*^9}, {3.889244334310091*^9, 3.889244352483376*^9}, {
   3.889244425130921*^9, 3.889244452109236*^9}, {3.8892445755004206`*^9, 
   3.889244577599924*^9}, 3.889245845619353*^9, {3.8892462196549835`*^9, 
   3.8892464102351127`*^9}, {3.889246631894479*^9, 3.8892466546044965`*^9}, {
   3.8892469085860605`*^9, 3.889246933513856*^9}, {3.8892472290624175`*^9, 
   3.8892474825018296`*^9}, {3.8892475939827023`*^9, 
   3.8892477241549187`*^9}, {3.88924789845435*^9, 3.8892479059554334`*^9}, {
   3.8892479397615976`*^9, 3.889248016083612*^9}, {3.8892494547748475`*^9, 
   3.889249519819609*^9}, {3.889249588875394*^9, 3.88924967382835*^9}, {
   3.889249718355588*^9, 3.8892497276921062`*^9}, {3.889249785114966*^9, 
   3.889249790913954*^9}, {3.889249821247962*^9, 3.8892498372686987`*^9}, {
   3.889249891272806*^9, 3.8892499483492537`*^9}, {3.8892499990423207`*^9, 
   3.8892503863479366`*^9}, {3.8892504182333994`*^9, 
   3.8892507259198265`*^9}, {3.8892507598787146`*^9, 3.8892510458906*^9}, {
   3.8895107613660955`*^9, 3.8895110801572385`*^9}, {3.889511218776973*^9, 
   3.8895112197149315`*^9}, {3.8895112679195023`*^9, 3.88951126818603*^9}, {
   3.889511476736332*^9, 3.8895115601293116`*^9}, 3.8895115956932654`*^9, {
   3.889511723859084*^9, 3.8895117321021547`*^9}, {3.8895151834120255`*^9, 
   3.8895152417331495`*^9}, {3.8895153709051943`*^9, 
   3.8895154132563915`*^9}, {3.889523676866375*^9, 3.889523739425891*^9}, {
   3.8895242578589373`*^9, 3.8895242778729477`*^9}, {3.8895243216053286`*^9, 
   3.889524327635277*^9}, 3.889524378061449*^9, {3.8895245482227793`*^9, 
   3.8895246152533646`*^9}, {3.8895246523501797`*^9, 3.889524696740816*^9}, {
   3.8895247432208033`*^9, 3.8895248049337716`*^9}, {3.889524920456541*^9, 
   3.8895249220269356`*^9}, {3.889524967184961*^9, 3.8895251162872896`*^9}, 
   3.889525175513318*^9, {3.889525329945923*^9, 3.8895253660200405`*^9}, {
   3.8895254077078114`*^9, 3.8895254128694386`*^9}, {3.8895255279594164`*^9, 
   3.8895255583558455`*^9}, {3.8895256475333796`*^9, 
   3.8895258710250893`*^9}, {3.8895259239158583`*^9, 
   3.8895259534887133`*^9}, {3.889526115917104*^9, 3.889526120034851*^9}, 
   3.8895262525043287`*^9, {3.8895263230063457`*^9, 3.8895263287076964`*^9}, {
   3.8895265114557004`*^9, 3.8895265302872677`*^9}, {3.8895277431362576`*^9, 
   3.8895277849391155`*^9}, {3.8895280977730236`*^9, 
   3.8895281102180986`*^9}, {3.8895281552030754`*^9, 
   3.8895282005090394`*^9}, {3.889528269394616*^9, 3.8895283032753444`*^9}, {
   3.8895284009133453`*^9, 3.889528419424111*^9}, {3.8895285922742143`*^9, 
   3.8895286260275974`*^9}, {3.8915115207911816`*^9, 
   3.8915116310524645`*^9}, {3.891511689612379*^9, 3.8915116899776087`*^9}, {
   3.891669823719941*^9, 3.8916698258142796`*^9}, {3.9270094379316077`*^9, 
   3.9270095936110954`*^9}, {3.9270096784581833`*^9, 3.927009764071628*^9}, {
   3.9270098019238167`*^9, 3.927009816797038*^9}, 3.927009868660678*^9, {
   3.9270098989034195`*^9, 3.9270099560817986`*^9}, {3.927010000051778*^9, 
   3.927010047278661*^9}, {3.9270100906068683`*^9, 3.927010109981144*^9}, {
   3.9270103749557133`*^9, 3.927010380420781*^9}, {3.9270106165056143`*^9, 
   3.9270107522626595`*^9}, {3.9270107857568903`*^9, 
   3.9270108023293877`*^9}, {3.9270109026061344`*^9, 3.927010905550787*^9}, {
   3.9270109678557825`*^9, 3.927010996053338*^9}, {3.927011374659973*^9, 
   3.92701138279753*^9}, {3.9270116265516157`*^9, 3.9270117506238623`*^9}, {
   3.927011886419256*^9, 3.9270120450109353`*^9}, {3.92701210239104*^9, 
   3.927012107290337*^9}, {3.9270121574885526`*^9, 3.927012198332139*^9}, {
   3.9270122477737136`*^9, 3.927012279922134*^9}, {3.9270123366934767`*^9, 
   3.9270123396485853`*^9}, {3.927012377249219*^9, 3.9270123832062597`*^9}, {
   3.927012428509038*^9, 3.92701245826153*^9}, {3.927012574873374*^9, 
   3.927012577709284*^9}, {3.9270126573884583`*^9, 3.9270126979048843`*^9}, {
   3.9270127288953342`*^9, 3.9270127316377397`*^9}, {3.927012772740193*^9, 
   3.9270128126203203`*^9}, {3.9270129185353737`*^9, 3.927012919414427*^9}, {
   3.9270129526420603`*^9, 3.927012954453331*^9}, {3.9270130998974004`*^9, 
   3.927013101993044*^9}, {3.9270131344592223`*^9, 3.9270131634301696`*^9}, {
   3.927013265788251*^9, 3.927013287335357*^9}, {3.9270137212393713`*^9, 
   3.9270137341921206`*^9}, {3.927013856978468*^9, 3.927013931159793*^9}, {
   3.927013973550994*^9, 3.927014047013023*^9}, {3.9270141237750664`*^9, 
   3.9270141523776956`*^9}, {3.927014271456549*^9, 3.9270143695996027`*^9}, {
   3.9270144659383063`*^9, 3.9270144737355795`*^9}, {3.927014534437857*^9, 
   3.9270145368187685`*^9}, {3.9270147503618813`*^9, 
   3.9270147526869698`*^9}, {3.927014933108288*^9, 3.927014934623622*^9}, {
   3.927024637280796*^9, 3.9270247070215583`*^9}, {3.927024752948023*^9, 
   3.927024787186516*^9}, 
   3.9270248721191626`*^9},ExpressionUUID->"4d91963f-1581-4f39-bb10-\
c9410bd3695b"],

Cell[BoxData["ClearAll"], "Output",
 CellChangeTimes->{
  3.9270112093096952`*^9, 3.9270113953644376`*^9, 3.927011767513136*^9, 
   3.9270121156273336`*^9, 3.9270122026960483`*^9, 3.927012282529127*^9, 
   3.9270123415859337`*^9, 3.927012388505848*^9, 3.9270124618585815`*^9, {
   3.9270127129221973`*^9, 3.92701273447782*^9}, {3.9270127918903904`*^9, 
   3.9270128140336657`*^9}, 3.927012921115534*^9, 3.9270129568537645`*^9, 
   3.927013110461376*^9, {3.9270131429613066`*^9, 3.927013164429609*^9}, 
   3.9270132883608007`*^9, 3.9270137352701263`*^9, 3.927013819847864*^9, 
   3.9270139163475738`*^9, 3.9270140177842674`*^9, 3.9270141531432037`*^9, 
   3.9270142954705553`*^9, 3.927014329720498*^9, 3.927014435282415*^9, 
   3.9270144762976255`*^9, 3.927014538734682*^9, 3.927014753424777*^9, 
   3.9270247108580236`*^9, {3.9270247594150295`*^9, 3.9270247877252083`*^9}},
 CellLabel->
  "Out[185]=",ExpressionUUID->"4209acb4-bc4f-4728-a7bb-62322d394a44"],

Cell[BoxData[
 RowBox[{"Derived", " ", "Lagrangian"}]], "Output",
 CellChangeTimes->{
  3.9270112093096952`*^9, 3.9270113953644376`*^9, 3.927011767513136*^9, 
   3.9270121156273336`*^9, 3.9270122026960483`*^9, 3.927012282529127*^9, 
   3.9270123415859337`*^9, 3.927012388505848*^9, 3.9270124618585815`*^9, {
   3.9270127129221973`*^9, 3.92701273447782*^9}, {3.9270127918903904`*^9, 
   3.9270128140336657`*^9}, 3.927012921115534*^9, 3.9270129568537645`*^9, 
   3.927013110461376*^9, {3.9270131429613066`*^9, 3.927013164429609*^9}, 
   3.9270132883608007`*^9, 3.9270137352701263`*^9, 3.927013819847864*^9, 
   3.9270139163475738`*^9, 3.9270140177842674`*^9, 3.9270141531432037`*^9, 
   3.9270142954705553`*^9, 3.927014329720498*^9, 3.927014435282415*^9, 
   3.9270144762976255`*^9, 3.927014538734682*^9, 3.927014753424777*^9, 
   3.9270247108580236`*^9, {3.9270247594150295`*^9, 3.9270247877408333`*^9}},
 CellLabel->
  "Out[229]=",ExpressionUUID->"02eeaccd-95a1-4193-b4dd-529be0e49b6d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.20106445`", "}"}], ",", 
   RowBox[{"{", "0.24705781375282296`", "}"}], ",", 
   RowBox[{"{", "0.28334685281035016`", "}"}], ",", 
   RowBox[{"{", "0.3111553693953519`", "}"}], ",", 
   RowBox[{"{", "0.33247397559387404`", "}"}], ",", 
   RowBox[{"{", "0.348820555469671`", "}"}], ",", 
   RowBox[{"{", "0.3613541894804966`", "}"}], ",", 
   RowBox[{"{", "0.3709664634269946`", "}"}], ",", 
   RowBox[{"{", "0.3783302609298194`", "}"}], ",", 
   RowBox[{"{", "0.38396579237537226`", "}"}], ",", 
   RowBox[{"{", "0.38827392963782037`", "}"}], ",", 
   RowBox[{"{", "0.39155501074209326`", "}"}], ",", 
   RowBox[{"{", "0.3940621237587221`", "}"}], ",", 
   RowBox[{"{", "0.39598649969117566`", "}"}], ",", 
   RowBox[{"{", "0.3974597757482166`", "}"}], ",", 
   RowBox[{"{", "0.3985785820033229`", "}"}], ",", 
   RowBox[{"{", "0.3994254607005885`", "}"}], ",", 
   RowBox[{"{", "0.4000637979112864`", "}"}], ",", 
   RowBox[{"{", "0.4005303756497567`", "}"}], ",", 
   RowBox[{"{", "0.4008573809388773`", "}"}], ",", 
   RowBox[{"{", "0.40109559816449303`", "}"}], ",", 
   RowBox[{"{", "0.40128921092353714`", "}"}], ",", 
   RowBox[{"{", "0.401447672189625`", "}"}], ",", 
   RowBox[{"{", "0.40157584795269247`", "}"}], ",", 
   RowBox[{"{", "0.4016784791187739`", "}"}], ",", 
   RowBox[{"{", "0.4017690895495526`", "}"}], ",", 
   RowBox[{"{", "0.4018492671497224`", "}"}], ",", 
   RowBox[{"{", "0.4019085585669818`", "}"}], ",", 
   RowBox[{"{", "0.4019593935003737`", "}"}], ",", 
   RowBox[{"{", "0.40201334931553406`", "}"}], ",", 
   RowBox[{"{", "0.4020602385883719`", "}"}], ",", 
   RowBox[{"{", "0.4020775549642767`", "}"}], ",", 
   RowBox[{"{", "0.4020567245550588`", "}"}], ",", 
   RowBox[{"{", "0.40196722047836964`", "}"}], ",", 
   RowBox[{"{", "0.40184879124764467`", "}"}], ",", 
   RowBox[{"{", "0.40178174354469776`", "}"}], ",", 
   RowBox[{"{", "0.40176187590974344`", "}"}], ",", 
   RowBox[{"{", "0.40177361093829517`", "}"}], ",", 
   RowBox[{"{", "0.40179762758357934`", "}"}], ",", 
   RowBox[{"{", "0.4018207654354657`", "}"}], ",", 
   RowBox[{"{", "0.4018585355103974`", "}"}], ",", 
   RowBox[{"{", "0.40192017430801763`", "}"}], ",", 
   RowBox[{"{", "0.40198389452570593`", "}"}], ",", 
   RowBox[{"{", "0.4020281194682529`", "}"}], ",", 
   RowBox[{"{", "0.40203515490509956`", "}"}], ",", 
   RowBox[{"{", "0.40199101885044675`", "}"}], ",", 
   RowBox[{"{", "0.4019254420521918`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9270112093096952`*^9, 3.9270113953644376`*^9, 3.927011767513136*^9, 
   3.9270121156273336`*^9, 3.9270122026960483`*^9, 3.927012282529127*^9, 
   3.9270123415859337`*^9, 3.927012388505848*^9, 3.9270124618585815`*^9, {
   3.9270127129221973`*^9, 3.92701273447782*^9}, {3.9270127918903904`*^9, 
   3.9270128140336657`*^9}, 3.927012921115534*^9, 3.9270129568537645`*^9, 
   3.927013110461376*^9, {3.9270131429613066`*^9, 3.927013164429609*^9}, 
   3.9270132883608007`*^9, 3.9270137352701263`*^9, 3.927013819847864*^9, 
   3.9270139163475738`*^9, 3.9270140177842674`*^9, 3.9270141531432037`*^9, 
   3.9270142954705553`*^9, 3.927014329720498*^9, 3.927014435282415*^9, 
   3.9270144762976255`*^9, 3.927014538734682*^9, 3.927014753424777*^9, 
   3.9270247108580236`*^9, 3.9270247594150295`*^9, 3.927024797974181*^9},
 CellLabel->
  "Out[265]=",ExpressionUUID->"5bbfa368-676f-4959-a0f8-96f97b4f878e"],

Cell[BoxData[
 TemplateBox[{
  "Placed", "labpos", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \\\"0.6`\\\", \\\"}\\\"}]\\) is not a valid \
position for the placement of labels.\"", 2, 266, 5, 24365386325363445662, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.927012353839037*^9, 3.9270124007585897`*^9, 3.9270124740901737`*^9, {
   3.9270127137940097`*^9, 3.92701273718668*^9}, {3.927012792792979*^9, 
   3.92701281688446*^9}, 3.9270129239389305`*^9, 3.927012959675683*^9, 
   3.9270131139922285`*^9, {3.927013145118051*^9, 3.9270131745834894`*^9}, 
   3.9270132982260056`*^9, 3.927013745217207*^9, 3.9270138300914593`*^9, 
   3.9270139263615155`*^9, 3.927014027833969*^9, 3.9270141633762074`*^9, 
   3.9270143057767863`*^9, 3.9270143397256713`*^9, 3.9270144452973957`*^9, 
   3.927014486288748*^9, 3.927014548781434*^9, 3.92701476334302*^9, 
   3.927024722193576*^9, {3.9270247695457697`*^9, 3.927024798022601*^9}},
 CellLabel->
  "During evaluation of \
In[185]:=",ExpressionUUID->"104266f4-cc79-4f9f-90fa-083c56d1ef78"],

Cell[BoxData[
 TemplateBox[{
  "Placed", "labpos", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \\\"0.6`\\\", \\\"}\\\"}]\\) is not a valid \
position for the placement of labels.\"", 2, 266, 6, 24365386325363445662, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.927012353839037*^9, 3.9270124007585897`*^9, 3.9270124740901737`*^9, {
   3.9270127137940097`*^9, 3.92701273718668*^9}, {3.927012792792979*^9, 
   3.92701281688446*^9}, 3.9270129239389305`*^9, 3.927012959675683*^9, 
   3.9270131139922285`*^9, {3.927013145118051*^9, 3.9270131745834894`*^9}, 
   3.9270132982260056`*^9, 3.927013745217207*^9, 3.9270138300914593`*^9, 
   3.9270139263615155`*^9, 3.927014027833969*^9, 3.9270141633762074`*^9, 
   3.9270143057767863`*^9, 3.9270143397256713`*^9, 3.9270144452973957`*^9, 
   3.927014486288748*^9, 3.927014548781434*^9, 3.92701476334302*^9, 
   3.927024722193576*^9, {3.9270247695457697`*^9, 3.9270247980650606`*^9}},
 CellLabel->
  "During evaluation of \
In[185]:=",ExpressionUUID->"84a9111e-06a5-4389-9c6f-f1c1eebff73e"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{{}, {{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJw1UnlI01EclyHihZVZTNIOqQgPJFCciXyUkhyzwyS1+iNxrSxNS2WZnRZm
ZpJZlsfURM0lanPZHDJnh85rmpvL+X6WkgeVDiXExKnQFm9feDy+fN/7XO/t
ik85IWBZWVn5mpZ5t1Ry81MmU9GLtTd/tEfi7+IF38DPbR2gfQG8uQ4PPfuH
YLx9SZH+rBh2Ye0xkxVaOn8FrtFl3ZOnww2XpsM/MmsQoRsam1B9pefFcIsO
EDg56nH99979tg0NeFeXKeewR+l9CYTljQ+CDKMImjiW/zJZivT3YX6TeYTi
tcD4d/PlsHWCNq4jyytHhrfD4vZN4QzFl8O/TybpTmcQ2NIjVFa2wXZPx6PV
PIbyKSBMc+OUFjGQb8+ei5QrMRBr5x5azFD+D9ioN7a1m3pR505JasJHbNDG
lveVMFTPJ0j3tUrYIgZjK2bCz5jzuBUqrmCovk7cSWDtEFQy2Ob7fbdNVhds
HJZ9f5UxVK8K0XzRoF8hg9PnzIjdaHa+NhOeZdHfAw5HtMC/yKC0xFy9cBUd
WFjjWfz0wTXE52CqFwMyuBw1VduPs+yaq4/tLf7UmE+bGF+cI3C1jnbykQ5g
lBUyK9MQ6ncQK7yU2iUFQex/wC/YUm/QKhsJ9T8EgTLqvEc1QURAbmjczBDu
1Qc+EZYRmocGR5Xu1p3PCQyRZkQNpibF3w7lE5qPFkuq8S7mPkFe0s9VEyR4
kbMp8RmE5jWM+ZvcOk0igVfOVpOFYUjjxNPsOMv76nB8ycBRxxD0V4XJFtd1
KJjOOFV1ktA8v0IcvNxEzhCY02Jbj0Cl9yiUJVr+wwj8i6q17GwCe331lWB7
PcL9nTsuvCY0bz283ZOm1WqCf2lAhhY=
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], LineBox[CompressedData["
1:eJw1UHtIU1Ec9kWG1rDoNbNUKEtMln/oWGEfkaaRaT6SkIIUkxJRM7NatLIQ
XWIqFTkRfFYuZaw55rxOMbVyPuZ06t3RQlPCbBVNyfCV3cW9PzgcPs75fS/v
pIyYyw52dnYC5thubtLflI6LdXqsyq3DZ5LuI3Np1uubfJDFJRAth7iJ9w9j
WZKqy35Shuzu5qB6i4l9r4JYWHD1Z9go7mxThH0W18G9YC1qa+wY+78eX3kl
lb89adye8wnY2NgInrrG6NtGs/tKPHwts68NNOPoZFTR83QVbvh28qZLzSyf
GuG8Q6NZZjOoU5sc/PI1cJd6nw3kEZZfCz19LyJOSCBS9+S0V1KodOYvWuIJ
q6cD/cNhi3cGgXZvniVa2w7rNJnPyyWsfgce6+RDOcUEFd1eyqwrbyG85hPw
V0ZYP53QWVvppmqCiSWbYBcMjiftPV4R1l83QrsEM24NBLsFn/ZtyH2HxMkQ
ZaSCsH7fQ1Lz1HVBSZCQbGP8ANWRgzv5TZz/HigKVXMGNUG5zDZ6pEo/vozT
cHl68SzhmETRTEAMf2JnXvTheurpEw1aLl8/LrSty/JaCPhO8Tx/1QDGH0x5
pFNcXgNSwilXUSvB+f+EgwiKtJ6TtHL5jZgoLu89zOAIofT4pS9GlJmM/eoW
ro8hyAudqzoY/e/RNsYh/EqbSNNouH6GcSvY2p/C4MK02RWGElMrWmmFhuvL
hKJHNblOzL5f/g4mggmLOlFicjPX3wi6/E2UI5OnrzpUs7A2giBltZtrC9fn
KDyF+rvbmTy2tnY5jWHVHHNzgOL6HcPggfVIC4Nd6NrMYBcayZsX5gUU1zcN
wr84tYfh+wc0K4n3
           "]]}}, {{}, {}}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox["\"MCP Angle (rad)\"", TraditionalForm], None}, {
         FormBox["\"Times (s)\"", TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->None,
      PlotRange->{{0, 0.368}, {0, 0.415978699}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], Scaled[{0.5, 0.5}], Center, 
     Scaled[{1, 1}]], InsetBox[
     TemplateBox[{
      "\"Filtered data\"", "\"IBK Solution\"", "\"Lagrangian Solution\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{1.01, 0.5}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->False,
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->False,
   FrameLabel->{{
      FormBox["\"MCP Angle (rad)\"", TraditionalForm], None}, {
      FormBox["\"Times (s)\"", TraditionalForm], None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   ImagePadding->All,
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotLabel->FormBox["\"Results for MCP movement\"", TraditionalForm],
   PlotRange->Automatic,
   PlotRangeClipping->False,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 60]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1:eJw1UnlI01EclyHihZVZTNIOqQgPJFCciXyUkhyzwyS1+iNxrSxNS2WZnRZm
ZpJZlsfURM0lanPZHDJnh85rmpvL+X6WkgeVDiXExKnQFm9feDy+fN/7XO/t
ik85IWBZWVn5mpZ5t1Ry81MmU9GLtTd/tEfi7+IF38DPbR2gfQG8uQ4PPfuH
YLx9SZH+rBh2Ye0xkxVaOn8FrtFl3ZOnww2XpsM/MmsQoRsam1B9pefFcIsO
EDg56nH99979tg0NeFeXKeewR+l9CYTljQ+CDKMImjiW/zJZivT3YX6TeYTi
tcD4d/PlsHWCNq4jyytHhrfD4vZN4QzFl8O/TybpTmcQ2NIjVFa2wXZPx6PV
PIbyKSBMc+OUFjGQb8+ei5QrMRBr5x5azFD+D9ioN7a1m3pR505JasJHbNDG
lveVMFTPJ0j3tUrYIgZjK2bCz5jzuBUqrmCovk7cSWDtEFQy2Ob7fbdNVhds
HJZ9f5UxVK8K0XzRoF8hg9PnzIjdaHa+NhOeZdHfAw5HtMC/yKC0xFy9cBUd
WFjjWfz0wTXE52CqFwMyuBw1VduPs+yaq4/tLf7UmE+bGF+cI3C1jnbykQ5g
lBUyK9MQ6ncQK7yU2iUFQex/wC/YUm/QKhsJ9T8EgTLqvEc1QURAbmjczBDu
1Qc+EZYRmocGR5Xu1p3PCQyRZkQNpibF3w7lE5qPFkuq8S7mPkFe0s9VEyR4
kbMp8RmE5jWM+ZvcOk0igVfOVpOFYUjjxNPsOMv76nB8ycBRxxD0V4XJFtd1
KJjOOFV1ktA8v0IcvNxEzhCY02Jbj0Cl9yiUJVr+wwj8i6q17GwCe331lWB7
PcL9nTsuvCY0bz283ZOm1WqCf2lAhhY=
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 60]], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}]], 
         Line[CompressedData["
1:eJw1UHtIU1Ec9kWG1rDoNbNUKEtMln/oWGEfkaaRaT6SkIIUkxJRM7NatLIQ
XWIqFTkRfFYuZaw55rxOMbVyPuZ06t3RQlPCbBVNyfCV3cW9PzgcPs75fS/v
pIyYyw52dnYC5thubtLflI6LdXqsyq3DZ5LuI3Np1uubfJDFJRAth7iJ9w9j
WZKqy35Shuzu5qB6i4l9r4JYWHD1Z9go7mxThH0W18G9YC1qa+wY+78eX3kl
lb89adye8wnY2NgInrrG6NtGs/tKPHwts68NNOPoZFTR83QVbvh28qZLzSyf
GuG8Q6NZZjOoU5sc/PI1cJd6nw3kEZZfCz19LyJOSCBS9+S0V1KodOYvWuIJ
q6cD/cNhi3cGgXZvniVa2w7rNJnPyyWsfgce6+RDOcUEFd1eyqwrbyG85hPw
V0ZYP53QWVvppmqCiSWbYBcMjiftPV4R1l83QrsEM24NBLsFn/ZtyH2HxMkQ
ZaSCsH7fQ1Lz1HVBSZCQbGP8ANWRgzv5TZz/HigKVXMGNUG5zDZ6pEo/vozT
cHl68SzhmETRTEAMf2JnXvTheurpEw1aLl8/LrSty/JaCPhO8Tx/1QDGH0x5
pFNcXgNSwilXUSvB+f+EgwiKtJ6TtHL5jZgoLu89zOAIofT4pS9GlJmM/eoW
ro8hyAudqzoY/e/RNsYh/EqbSNNouH6GcSvY2p/C4MK02RWGElMrWmmFhuvL
hKJHNblOzL5f/g4mggmLOlFicjPX3wi6/E2UI5OnrzpUs7A2giBltZtrC9fn
KDyF+rvbmTy2tnY5jWHVHHNzgOL6HcPggfVIC4Nd6NrMYBcayZsX5gUU1zcN
wr84tYfh+wc0K4n3
          "]]}}}, {{}, {}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{"MCP Angle (rad)", None}, {"Times (s)", None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, PlotLabel -> "Results for MCP movement", 
      PlotRange -> {{0, 0.368}, {0, 0.415978699}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         PointSize[
          Rational[1, 60]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         PointSize[
          Rational[1, 60]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        Directive[
         PointSize[
          Rational[1, 60]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
       "Filtered data", "IBK Solution", "Lagrangian Solution"}, 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
         False, Automatic}}, Joined -> {True, True, True}, LabelStyle -> {}, 
       LegendLayout -> "Column"]], {0.6}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.9270112093096952`*^9, 3.9270113953644376`*^9, 3.927011767513136*^9, 
   3.9270121156273336`*^9, 3.9270122026960483`*^9, 3.927012282529127*^9, 
   3.9270123415859337`*^9, 3.927012388505848*^9, 3.9270124618585815`*^9, {
   3.9270127129221973`*^9, 3.92701273447782*^9}, {3.9270127918903904`*^9, 
   3.9270128140336657`*^9}, 3.927012921115534*^9, 3.9270129568537645`*^9, 
   3.927013110461376*^9, {3.9270131429613066`*^9, 3.927013164429609*^9}, 
   3.9270132883608007`*^9, 3.9270137352701263`*^9, 3.927013819847864*^9, 
   3.9270139163475738`*^9, 3.9270140177842674`*^9, 3.9270141531432037`*^9, 
   3.9270142954705553`*^9, 3.927014329720498*^9, 3.927014435282415*^9, 
   3.9270144762976255`*^9, 3.927014538734682*^9, 3.927014753424777*^9, 
   3.9270247108580236`*^9, 3.9270247594150295`*^9, 3.927024798085226*^9},
 CellLabel->
  "Out[266]=",ExpressionUUID->"4adfb04e-c55b-40b2-90ae-0e64ff451dd1"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1:eJw1kA0s1GEcx29m1ihZo5gmNmPd5V2iF9+0CYnQe6YJ1/SyCCNU45adoxfW
QmQub9Omus7bhd2qwwnp3B2nrAxdQl6eP+Z9dVf/+23Pnv32e57v7/v92ETF
hbH1GAyGk+Zob11tyWWZeJqMYP0FkQdFZUCYutt5sWmU7vOQtShO8Ij4gdW7
V1uTHhchxZJStq+p6Tkf+QV5ztmPxpFu+spvJK0SwjSD8PumE/T7GiwFrwp3
cieROmHnsqm2FkbedhzF2BT9XwDDXRLJG/tpHBg+8aDwhhCnpYLvHiEztF49
VhwdrVPCZ9EcsFmPxW3EzGQ6a4ftHK0vwqX4GdbPnDl41Xcmi8ua4U4VKw6O
ztH7WhG5vFHFYxKIrLKmQkViSG5mKx/GEHr/Oyy1+BafzSd41mYtSIh9j4aO
bVeYQkL7+YDAoRCz1E6CoRXtQgnqqg2Zsn5C+2vDwrrgVscQgaXTN1uDzHYo
OTz5tKb/77cDVjKfunYVwYUYraIUwgCHOwIZof13okztWjIlJSh+qq2PYK5V
FuSICZ2nC2z2NXVSA8GX3qWTY1XdKN8fyLj8ktD5elDK3bN3tprAQv+MsYPw
E6T+RwrTynV5exF+0Y8XzCc490/wM4qMPRPz+br8Mngec4wJqiA4vo/nE6mW
4Ym9y73EGh2PPnDsRcHDrwl+h2oV+9DDr605/1bHRw63avloSRtB7vXxNY0k
uiTRLWF9Ol4KnHLKiLMZJmBxt2siKPCnxWyhclrHT4n5sqbklHWC7ue+jfMb
SjgcXT3sbkTRPPvhyi6YT7egoKVlrj+AiCzzwWU7iuY7gK1evwaj3CgYqiri
DxmqcNs0uZTjTdG8VYjO/Brr5k/hL1FbiZQ=
          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          PointSize[0.01]], 
         PointBox[CompressedData["
1:eJw1kHtI01EUx4eomTYTpq6QrFGJNGOkkfbQL6GZkQ+sKC3SUIMltiwi0EjS
GsNkYPlHplJaalorRHTqFPFV06nTqW2oWanpzK3c/Wn42rItbgcul8O593u+
3w8v6caZq3YsFktgPbb7f7Hz+G5BbpMwV5OhqKT74JUIFafTp2mfj3BfeU6l
eAZrWakttwsKMaGLzimL09N5KS4vpFxaJXO46/7+5GRmOfZlcHew4ufp+yoo
xzPnpgsMyPjhc8BJJoNIqIpGlZH+r0GHemrjetFPHP0aI30qqoV7g3e4RPSL
6tUhq+K73M93AYpTW+z4EjmkK785AaoFqt8ImcifxfYz4XBd953WFwpEBbfX
JaSa6L4WFOaHpTmWmdDoLTbENrYidbnPtXvQRPe3YW91e0jWmgklXbtqbgnb
8XppNlLvTaifDkgniSIthGB81bawE4rSMcW9eEL9daH8zVyBw00CL8HEHsfs
D9A7cGXzYkL9foR5RMBJLyS4mGJTVEI6VMzWVhHqvxv9yoO8qAaCome26sEF
o+u7kC5C86iQqzR/0QwQjKqXz05X9KKnpbnJMEpovj70jX3bPTtFsN3+vOv+
2n68XCxd4hgIzauG6nlGaAJDEPdPcACCtsSIhBVC8w8i1D93p5OFIDIw9/iV
mUE0eOWicoNQHho8NEqKLSwGxlibogZhLj3mejuG8hkC70HyoV57Bnlp+nWr
JK4F5Cf6bGIor2FoNcui7M0M+BJPa4Rh+PItTRUuDOU3gk7ukUAjm0Fv2Qn5
omUEysonjx67MZTnJ3yOEUoEHAY2WtvstRDNvA1K9mAoXy3YEcfEak8GzrpX
6cHOOqz/Gav34DKUtw5TtVvPNVvnfwFd0IjY
          "]]}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJwd1Xk8Ff0XB/AsRRtK9lQoZUlUlPUIlaX0FFGkEknKVshOPUoRRdzKUpSo
nrTKEgrhCrmL7gySkKVC3bkkSfmd+f0xr3m9X/OduXc+55zvqBzy33VYeMaM
GXw86PPxDF8L5jJzszthGlIbpXpgSN4zoYyhDMtVTWOGZHtAX3KrWBhjNUQk
cTWtlvaAS0Jp3R6GKbywKLYS1euB4a1UnjVjO/jy7D9t2d0Dz/OT0swZbuCe
uvscZPeAIuF60YThC+UhZ1R/afRC84jFeSNGFPD35z4QGHyCtPc78+rfJcOK
4a2hS2z6Yd3v6oM6gwy4mzPYdeLPABTw5nQdMLsBDmrMbLGwz3Dhse6PY4q3
IYQ3KxL6vwDTI0vzNicf9s8bVX+xYAhOf08uiGq7D1dDNKkAvWGocm93TWx+
CNG93q1KmiNQu+zpUluzJ5DlEuDCHx+BgSkj/WVmz+D1+2wJ3fJv8FbSs3dU
6TksKd4sHLLvO4zLGGq584tB5PmTMbfP38HtPEcuZ7gU+g/OUHbYwIcLenOy
OutfwO+rGwKb/Pgg2DKr9mtDBUTN8dH+epsPN3Y8jE+tfgnWWY4mBRw+nN8a
QSltqwLnc5pFFj/5cFBZKNDZrhquzX9pt0aJggwJ54oUwxoId1MtjdpIwejz
5PYi49dwTWcTV9iRghGnrNrlhrVgZu3yOOQYBTbS4RFXVtSBk9468fFoCmrP
GooOragH//yF8Z9SKLgl/WbPJhkmDN64FpOdS4FKpk5E3zQTblqBsP8jCl61
BfsH/G2Awfdx0swKtF7Smt9DbyDPKqBAtoGCLvNz1X4jjWDV/Ef2N5eCGza7
VdZ8bYJ+E7fFHp0UVPuObfvGawa2QsGETR8FItbBtgzeW4gq8ny/cpiCAtN6
adPaFvhzap38YwEFnu2qvX3MFuDetnvJRKsGxzy+2NQCK5YJOX5EZz3YuL2T
2wKr7eTsJUYpuKz037mInhbYYPEy4hg69NelX2V/W0BJpPqZ6hgFts/3fjQw
ZEHZheO74n5QILazuLDLhAWFnPS26+ja4YWR58xZ0CKvtf0R2mx5szyxFde7
hQt1oNdeMdsV7MQC5wAiXWecAqVAtbpnJ1lg8Wv1kXfoYe2R+7oPWUBs50Yv
nKDgzI6UxaueskDNeKv3SrTcCf3kpcUsMNyiZGKCtiiJCpR4yYKk5oZbh9HX
NklsHH7LggCyMqIEvdlpTV3BCAtO686Mc/5FAetVqf8lWTa8aFyRfH6SAkVO
wqpEeTaoLNH/noH27N3Xc06RDXolksaF6ElRIYfoJWz4cr48lYNWt7Ux8FVn
Q194h5nCbwoi37VP2Rqw4a7JKf889KovkxdmObGhc6+T0b0pCu5neJp3O7OB
My78oAStta1lvGwvG8xugVg9WudRroevGxtqBllhvej1wdam7zzZQPhWWCn+
oWCTEIOfe5INES0PFsWha55O50cEs6HH1aj8MtrK86jb7lNs2JH1yjwbbc00
aRSPYMPXosjPz9H2SZ9u+59hw865jff60S4Kes6mKfh/GyiB2V8KOhsz5std
YcN1pmm8DdotUrSWn8YGIcn8SQf0wY+kbt41NrjqLInxRnvdiZ4zN4cN1oMe
QpfRJ/SaK9sesiGMei3Wjh7r1Q96+pgNo93NmT3o4LSbmhefsqHjr9aCr+jQ
nyeuQjE+735NziQ6ulIhML+SDY2czL2K0xQk2hxZHtTMBvnUbh9HdOjLoAfB
Lfi8BUtqXNFe686sP8XGfNT2Th5CWyhnW4W/Y4P+ukjJQPQkn+sZ28kGyerJ
tkS09zWzOxeH2UAdUsuoQFsNyqjfmceBnUsrtWVmCOBvXO1KYhsHOlSSQivR
qhlHC5/bc0DwozCuBr31kcS69H84UBaxPp2Jvty+x8zRkQO/HknXcuj1OiOO
XFcOnAy0dBug15MyZ1p8OCDiN3ldSgjXaxzprD/PgYnX6uJH0aots1NKajlw
5WTbAW1hARhdsn2cVM+BeaaujWvRu/5JZHk0cOD61DVjQ/Rp7jwJqWYOuN+z
WLsF3U1IJnq3ciArWiXgIPrmR5mzCr0cGFmmpMVAL6ZUwiKmOXD5YrzYLBEB
yC4ycgcjLmzjVwgotKK+a0Z5GRfK6466qcwSAMvD07BEtxV8zszP2ykugDTf
/ZsKnrSCU89xlbNzBKARZPnYVPcdfO+4nHx9ngD8z0uddch/By81HT4xJQRQ
d6qlxk2dB736cVNHFwjghaTbF+NVPHBm32k8iX5YMCSpqMmDIQvH9Cg0gxR3
I1bzIIszY1kK2muD5U97fR6MaVmLl6Jn/SzRMrfiwTmj8YUzFwrAOiQ3TfUQ
DyJzT6ZmopuDgrwGs3lQN/Chr0RaAEWlN9QrbvLgm2KpVRU6c6ph4HIuD1x9
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
D9y7iqk=
           "]]}, Annotation[#, "Charting`Private`Tag$14118#1"]& ]}}, {}}}, {
    PlotLabel -> FormBox["\"Results for PIP movement\"", TraditionalForm], 
     PlotRange -> All, AxesLabel -> {
       FormBox["\"Times (s)\"", TraditionalForm], 
       FormBox["\"PIP Angle (rad)\"", TraditionalForm]}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Data\"", TraditionalForm], 
     PlotRange -> {{0, 0.368}, {0, 1.142627153}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Filtered data\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"IBK Solution\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    PointSize[0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    PointSize[0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Lagrangian Solution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9270112093096952`*^9, 3.9270113953644376`*^9, 3.927011767513136*^9, 
   3.9270121156273336`*^9, 3.9270122026960483`*^9, 3.927012282529127*^9, 
   3.9270123415859337`*^9, 3.927012388505848*^9, 3.9270124618585815`*^9, {
   3.9270127129221973`*^9, 3.92701273447782*^9}, {3.9270127918903904`*^9, 
   3.9270128140336657`*^9}, 3.927012921115534*^9, 3.9270129568537645`*^9, 
   3.927013110461376*^9, {3.9270131429613066`*^9, 3.927013164429609*^9}, 
   3.9270132883608007`*^9, 3.9270137352701263`*^9, 3.927013819847864*^9, 
   3.9270139163475738`*^9, 3.9270140177842674`*^9, 3.9270141531432037`*^9, 
   3.9270142954705553`*^9, 3.927014329720498*^9, 3.927014435282415*^9, 
   3.9270144762976255`*^9, 3.927014538734682*^9, 3.927014753424777*^9, 
   3.9270247108580236`*^9, 3.9270247594150295`*^9, 3.927024798206654*^9},
 CellLabel->
  "Out[267]=",ExpressionUUID->"021efa17-2a7e-4fd4-98ae-28caae8758b9"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1:eJw1kA8sFFAcx+2m0mVtLc6fwyqpDPm72XXpm5rQUAozSSY10R/dmkbtlK1d
kqFErKJ0K0uS3aRLp7uEuLg7x7k47p5x5E81KyEr116/7e3t7b33/fPZmHTu
0AmGmZmZ5/Iy7f9H1lrKn5en43f1d1V40hVU6qvty6Iq6bkQUbZMKU9RiwV+
atOF23eRG63KyJM20PtKOBq9twm9JLhkVRtsyHoM2ZqR6QKNjL5/CpsbLvOq
8lZkTmzxtqipgbvPUtO3ox30fx2G24pf73boAnf4QH7p2XoISpjJ0eMKqidC
jrK/alisgjjUkuEmaMBsUEjnZI6a6jdCmz5x+UFAHzii9gxJhRgxYsMd13EN
9WtCkNDFhmRr0eh0bTKyUQIH27iwaMYA9X+Hk2y58ciZQdxr2VDHS5HCx2nK
6Nqso3lkKDn/KzTu5xAG5k2G7zE6WGO9aKGn+VpQ/EMnfHNdD7anbvPKqx9g
PT7nfHxBT/O2YpO75U37BAPikk2KbQiXDezkigw0fzs+rziYFbpkQHmZaT7C
I+6t3QyH0D4d2NU92fI1lUDbNXd4RNiJVQV9bPciQvvJ4SuIYBU9J7Azj1nr
Uf8JXokhvSwpoX27cCzlGVssJ4j9J9iNXiud4KKS0P4KhD/Jzg9WEIT55wYm
jirw6tS0J7uDUB5K7A3ZGq9tJpiKNCkqkbb9ljK+nlA+Kqy3lmTzHhHknTYu
Lksi5v4Lbn8hobx6EKgOb+PyCdwErOUKPSjwrWPsSCOUnxrOY3pOQixB58Og
htklNfiWFbyN+wjl2QtHD45owo/ARMvWvA98v6GI1S6E8u3Dyy/r9khYBExN
VXoAUwNz3f4ZbyahvDXgjGn8M/8Y8BcbbX/d
          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          PointSize[0.01]], 
         PointBox[CompressedData["
1:eJw1kH0sFGAcxy87rSStJSNDllgzTtoy0b69aGU76RIzb9m5KFlk0rzdiunI
bjM2TqxEWg1l3jpmnPOed8dd4l4ehly63PxRuiTXnn7bs2fPnuf5vnwcuYnX
b5kwGAzWzjLu/0faX8rfHEnC77f6qQDuIySOv39aqK2l50LYncrriWxqwy9+
fEdKsQgLGTHuAx5Sel8J7rHgHLb5ADIs310m6a/gWxK3kfxwmL5/A6lwyIGb
OY60VeeTe+rqIOfZK92LJun/BrDa0hdVPjL4qAOFpfcascW37jzYNU31mtEi
/1ByzkGOdn9zE1dBK7btLqQKbyqovhjrgwmcpexP8G4eTO180Y7ltMA73wpm
qV8H4q+FyU2yPkNsn/uVI+4EW+E7fyV0jvpLsBht4S12mEdF79GG5Nvd4Lx2
WbKdmad5pAjg7nIzT1dibtNo2IOE+IvYPqCi+XrRGPWTESVSwZaldNr9uA+6
bNOgFEs1zdsPQyXPEJ6rRhjPqDgAA0+132pNTfMPwsNtX1WfkwbPyowzBH2L
5Co7UEP7fIQuwq5q+4EGs2M/ghZrhmFVsqL0LNPQfiNYqLfxOtOmgQ0zxMKt
cRStXceLuXIN7TuGzdgT/dp1DUL/CY7DT3t41HQvof0nkLXKU63YE7C98s9H
L03AMTK4s8mTUB6T6K0V5Vf7EaxxjIqTOF3+fOHPDUL5TCGphvlFG0NQkLBi
2JFEKWt5VXCfUF4ydMfpRN+zCFwFVjsVZNC5uE555xPKbxoyYTX/STHB8MtL
rRtb0xjJKY/QVxDKcwbOlUcO5dUQGGlZM+XI8GwKC6knlK8c4RPM4NhmAjNF
ddJZMwWK9JECSTuhvBXw90m/mykh+AvyRoPV
          "]]}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJwVzms0lAkAxnGtqJRVK0IcZlXShZGDg3hSxya3SbOMTUQhe9xrZBfJnsgt
c9JqtrVDN5EuU9M2GyVmGEOacR+vu3klolSkounYfffDc/7n9+2hHYk/EPGN
mpqaD7X/G1Mcu7vJbJerb3dqzoIsAa8NwvOquSYwflvsv0NwAnY6e5f9yt2O
u7TKuEXBSRzMq2oM5LqA/bnBLlCUhjd7Z8o8uD4YuhnAtI3PhLC8oGgXNxjH
Yqsy6M7nYdQTdG4nNxaSpIaIkDU8yKZ35zhxT2EqygA2pytRNOBXJu3mIF5U
sUUjuAq2KnGo1QQXHn0+eifMxahQaA0fdi2FTpo7HP5sRO59+sdoo+vgl5tG
Tmm2oOkob8v1jnJMRjxitLXK8ds7TsWp3lt4dTLaQSVthyisLyhfxkdaS5KA
we6ExOyBqaerAC/JEaZytAvjX53szFz/xsiczWShrwJynfDRD+uFEM7VOSzJ
6sEnPcetYe//gYawJiOIRyA4p2PdlTdV2Oyr7zIi6EWujRZvUPoYp5Kse7pK
+zD7g6ZkqrkG9urPdcS5/Shl8LMviGuR0bH2sN6hAeTsTZ1Z7y2C2rlF09s6
gwg1WZLI8hIj7cz+7CnxIIq/ZdUUOtZDNcBIXHlwCB+EnL6Hzg04f8hIg/9+
CNMBPMkGRwmsLv4ympw8jH26Kam/b2yE9mIkr2hqGJIsx6WvN0qRnVdSLDs0
gmu6zwLd9JpwhzXudKB2BLS/rFLH/m0C51zM/KqVStT1JsUnLDZjXqyVcsOe
sk2Bter1M4Sauy28CFJieNdZcdx0C7rrhWfbMpQo3edPs556jtZ3dTFDV5UQ
x855v1XIMHvNr96wVgl1jyRPrkIOy7Layg39SlS4SHVdJK3Q+enhAf1ZJd5s
m75F57dBP9pLVrKMxObJL7maAe24R79M+2xMIn/fsQ1sWTsYDp7ZxtYkFjMl
Fj3eHVBxb88tdSPxfeuKwkeSDkRFcRKZ+0nor3UKg1MnlG1joeYhJIzsgoqf
VHfi+KVPUS+iSbQdDXd8RO9CzdXPJjeTSRTFhrhVCLrQHOiRyDxDwpK9574L
vRv9HutXPSsgEZ+zOotZ3g3/vpcuIi6JxuTW+uBNClwrpVffu0xCxmZHTpQo
UJjynRmzgkRZnEbiOt0eLAy0S+l86v+e7DHnCz2wby2xn39IwnzTzNOR5QS0
L+3e8eAxCY52QPqMFgHRlfC8Fsrzc49d1bUJrBEG9I5SljVk1m1aQ4D2Suav
+4TEyTADcawhgUz+LHGCcjMPEpUlAVnOhJptDYk4XU7LOi8CCWe2W9x6SqL3
y2yepQ+BGtkKLzHlPaMsL2cGgTj5eEQvZQMBTRbCJDDAkWdo1pIQ+wrlN4II
qBZTvY9QXps32G4bQ8CBpe5uUEciPdGt0D2OwILpqmEryq8Cy/1YCQTs7zTF
uVN+apHQmcImMNGflXyccmSjerc4jYBx088WMsrtd6KKutIJpEczT49Sdi6S
//gyg0CgIaNtnvLqo38olmcRWB57l7VRRCLF8+tFo2wC45WbzztTHrMJC9iW
S+C+yYTIj7KvoVTfNZ9Awc6Pk8coV6ttJRgFBMzzD69Mp/wfqYZy0A==
           "]]}, Annotation[#, "Charting`Private`Tag$14319#1"]& ]}}, {}}}, {
    PlotLabel -> FormBox["\"Results for DIP movement\"", TraditionalForm], 
     PlotRange -> All, AxesLabel -> {
       FormBox["\"Times (s)\"", TraditionalForm], 
       FormBox["\"DIP Angle (rad)\"", TraditionalForm]}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Data\"", TraditionalForm], 
     PlotRange -> {{0, 0.368}, {0, 0.588069692}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Filtered data\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"IBK Solution\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    PointSize[0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    PointSize[0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Lagrangian Solution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9270112093096952`*^9, 3.9270113953644376`*^9, 3.927011767513136*^9, 
   3.9270121156273336`*^9, 3.9270122026960483`*^9, 3.927012282529127*^9, 
   3.9270123415859337`*^9, 3.927012388505848*^9, 3.9270124618585815`*^9, {
   3.9270127129221973`*^9, 3.92701273447782*^9}, {3.9270127918903904`*^9, 
   3.9270128140336657`*^9}, 3.927012921115534*^9, 3.9270129568537645`*^9, 
   3.927013110461376*^9, {3.9270131429613066`*^9, 3.927013164429609*^9}, 
   3.9270132883608007`*^9, 3.9270137352701263`*^9, 3.927013819847864*^9, 
   3.9270139163475738`*^9, 3.9270140177842674`*^9, 3.9270141531432037`*^9, 
   3.9270142954705553`*^9, 3.927014329720498*^9, 3.927014435282415*^9, 
   3.9270144762976255`*^9, 3.927014538734682*^9, 3.927014753424777*^9, 
   3.9270247108580236`*^9, 3.9270247594150295`*^9, 3.9270247983121204`*^9},
 CellLabel->
  "Out[268]=",ExpressionUUID->"e09af0d0-1c25-47cc-9941-f8043574ffff"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1:eJw1kA8sFFAcx+2m0mVtLc6fwyqpDPm72XXpm5rQUAozSSY10R/dmkbtlK1d
kqFErKJ0K0uS3aRLp7uEuLg7x7k47p5x5E81KyEr116/7e3t7b33/fPZmHTu
0AmGmZmZ5/Iy7f9H1lrKn5en43f1d1V40hVU6qvty6Iq6bkQUbZMKU9RiwV+
atOF23eRG63KyJM20PtKOBq9twm9JLhkVRtsyHoM2ZqR6QKNjL5/CpsbLvOq
8lZkTmzxtqipgbvPUtO3ox30fx2G24pf73boAnf4QH7p2XoISpjJ0eMKqidC
jrK/alisgjjUkuEmaMBsUEjnZI6a6jdCmz5x+UFAHzii9gxJhRgxYsMd13EN
9WtCkNDFhmRr0eh0bTKyUQIH27iwaMYA9X+Hk2y58ciZQdxr2VDHS5HCx2nK
6Nqso3lkKDn/KzTu5xAG5k2G7zE6WGO9aKGn+VpQ/EMnfHNdD7anbvPKqx9g
PT7nfHxBT/O2YpO75U37BAPikk2KbQiXDezkigw0fzs+rziYFbpkQHmZaT7C
I+6t3QyH0D4d2NU92fI1lUDbNXd4RNiJVQV9bPciQvvJ4SuIYBU9J7Azj1nr
Uf8JXokhvSwpoX27cCzlGVssJ4j9J9iNXiud4KKS0P4KhD/Jzg9WEIT55wYm
jirw6tS0J7uDUB5K7A3ZGq9tJpiKNCkqkbb9ljK+nlA+Kqy3lmTzHhHknTYu
Lksi5v4Lbn8hobx6EKgOb+PyCdwErOUKPSjwrWPsSCOUnxrOY3pOQixB58Og
htklNfiWFbyN+wjl2QtHD45owo/ARMvWvA98v6GI1S6E8u3Dyy/r9khYBExN
VXoAUwNz3f4ZbyahvDXgjGn8M/8Y8BcbbX/d
          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          PointSize[0.01]], 
         PointBox[CompressedData["
1:eJw1kH0sFGAcxy87rSStJSNDllgzTtoy0b69aGU76RIzb9m5KFlk0rzdiunI
bjM2TqxEWg1l3jpmnPOed8dd4l4ehly63PxRuiTXnn7bs2fPnuf5vnwcuYnX
b5kwGAzWzjLu/0faX8rfHEnC77f6qQDuIySOv39aqK2l50LYncrriWxqwy9+
fEdKsQgLGTHuAx5Sel8J7rHgHLb5ADIs310m6a/gWxK3kfxwmL5/A6lwyIGb
OY60VeeTe+rqIOfZK92LJun/BrDa0hdVPjL4qAOFpfcascW37jzYNU31mtEi
/1ByzkGOdn9zE1dBK7btLqQKbyqovhjrgwmcpexP8G4eTO180Y7ltMA73wpm
qV8H4q+FyU2yPkNsn/uVI+4EW+E7fyV0jvpLsBht4S12mEdF79GG5Nvd4Lx2
WbKdmad5pAjg7nIzT1dibtNo2IOE+IvYPqCi+XrRGPWTESVSwZaldNr9uA+6
bNOgFEs1zdsPQyXPEJ6rRhjPqDgAA0+132pNTfMPwsNtX1WfkwbPyowzBH2L
5Co7UEP7fIQuwq5q+4EGs2M/ghZrhmFVsqL0LNPQfiNYqLfxOtOmgQ0zxMKt
cRStXceLuXIN7TuGzdgT/dp1DUL/CY7DT3t41HQvof0nkLXKU63YE7C98s9H
L03AMTK4s8mTUB6T6K0V5Vf7EaxxjIqTOF3+fOHPDUL5TCGphvlFG0NQkLBi
2JFEKWt5VXCfUF4ydMfpRN+zCFwFVjsVZNC5uE555xPKbxoyYTX/STHB8MtL
rRtb0xjJKY/QVxDKcwbOlUcO5dUQGGlZM+XI8GwKC6knlK8c4RPM4NhmAjNF
ddJZMwWK9JECSTuhvBXw90m/mykh+AvyRoPV
          "]]}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJwVzms0lAkAxnGtqJRVK0IcZlXShZGDg3hSxya3SbOMTUQhe9xrZBfJnsgt
c9JqtrVDN5EuU9M2GyVmGEOacR+vu3klolSkounYfffDc/7n9+2hHYk/EPGN
mpqaD7X/G1Mcu7vJbJerb3dqzoIsAa8NwvOquSYwflvsv0NwAnY6e5f9yt2O
u7TKuEXBSRzMq2oM5LqA/bnBLlCUhjd7Z8o8uD4YuhnAtI3PhLC8oGgXNxjH
Yqsy6M7nYdQTdG4nNxaSpIaIkDU8yKZ35zhxT2EqygA2pytRNOBXJu3mIF5U
sUUjuAq2KnGo1QQXHn0+eifMxahQaA0fdi2FTpo7HP5sRO59+sdoo+vgl5tG
Tmm2oOkob8v1jnJMRjxitLXK8ds7TsWp3lt4dTLaQSVthyisLyhfxkdaS5KA
we6ExOyBqaerAC/JEaZytAvjX53szFz/xsiczWShrwJynfDRD+uFEM7VOSzJ
6sEnPcetYe//gYawJiOIRyA4p2PdlTdV2Oyr7zIi6EWujRZvUPoYp5Kse7pK
+zD7g6ZkqrkG9urPdcS5/Shl8LMviGuR0bH2sN6hAeTsTZ1Z7y2C2rlF09s6
gwg1WZLI8hIj7cz+7CnxIIq/ZdUUOtZDNcBIXHlwCB+EnL6Hzg04f8hIg/9+
CNMBPMkGRwmsLv4ympw8jH26Kam/b2yE9mIkr2hqGJIsx6WvN0qRnVdSLDs0
gmu6zwLd9JpwhzXudKB2BLS/rFLH/m0C51zM/KqVStT1JsUnLDZjXqyVcsOe
sk2Bter1M4Sauy28CFJieNdZcdx0C7rrhWfbMpQo3edPs556jtZ3dTFDV5UQ
x855v1XIMHvNr96wVgl1jyRPrkIOy7Layg39SlS4SHVdJK3Q+enhAf1ZJd5s
m75F57dBP9pLVrKMxObJL7maAe24R79M+2xMIn/fsQ1sWTsYDp7ZxtYkFjMl
Fj3eHVBxb88tdSPxfeuKwkeSDkRFcRKZ+0nor3UKg1MnlG1joeYhJIzsgoqf
VHfi+KVPUS+iSbQdDXd8RO9CzdXPJjeTSRTFhrhVCLrQHOiRyDxDwpK9574L
vRv9HutXPSsgEZ+zOotZ3g3/vpcuIi6JxuTW+uBNClwrpVffu0xCxmZHTpQo
UJjynRmzgkRZnEbiOt0eLAy0S+l86v+e7DHnCz2wby2xn39IwnzTzNOR5QS0
L+3e8eAxCY52QPqMFgHRlfC8Fsrzc49d1bUJrBEG9I5SljVk1m1aQ4D2Suav
+4TEyTADcawhgUz+LHGCcjMPEpUlAVnOhJptDYk4XU7LOi8CCWe2W9x6SqL3
y2yepQ+BGtkKLzHlPaMsL2cGgTj5eEQvZQMBTRbCJDDAkWdo1pIQ+wrlN4II
qBZTvY9QXps32G4bQ8CBpe5uUEciPdGt0D2OwILpqmEryq8Cy/1YCQTs7zTF
uVN+apHQmcImMNGflXyccmSjerc4jYBx088WMsrtd6KKutIJpEczT49Sdi6S
//gyg0CgIaNtnvLqo38olmcRWB57l7VRRCLF8+tFo2wC45WbzztTHrMJC9iW
S+C+yYTIj7KvoVTfNZ9Awc6Pk8coV6ttJRgFBMzzD69Mp/wfqYZy0A==
           "]]}, Annotation[#, "Charting`Private`Tag$14520#1"]& ]}}, {}}}, {
    PlotLabel -> FormBox["\"Results for DIP movement\"", TraditionalForm], 
     PlotRange -> All, AxesLabel -> {
       FormBox["\"Times (s)\"", TraditionalForm], 
       FormBox["\"DIP Angle (rad)\"", TraditionalForm]}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Data\"", TraditionalForm], 
     PlotRange -> {{0, 0.368}, {0, 0.588069692}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Filtered data\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"IBK Solution\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    PointSize[0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    PointSize[0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Lagrangian Solution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9270112093096952`*^9, 3.9270113953644376`*^9, 3.927011767513136*^9, 
   3.9270121156273336`*^9, 3.9270122026960483`*^9, 3.927012282529127*^9, 
   3.9270123415859337`*^9, 3.927012388505848*^9, 3.9270124618585815`*^9, {
   3.9270127129221973`*^9, 3.92701273447782*^9}, {3.9270127918903904`*^9, 
   3.9270128140336657`*^9}, 3.927012921115534*^9, 3.9270129568537645`*^9, 
   3.927013110461376*^9, {3.9270131429613066`*^9, 3.927013164429609*^9}, 
   3.9270132883608007`*^9, 3.9270137352701263`*^9, 3.927013819847864*^9, 
   3.9270139163475738`*^9, 3.9270140177842674`*^9, 3.9270141531432037`*^9, 
   3.9270142954705553`*^9, 3.927014329720498*^9, 3.927014435282415*^9, 
   3.9270144762976255`*^9, 3.927014538734682*^9, 3.927014753424777*^9, 
   3.9270247108580236`*^9, 3.9270247594150295`*^9, 3.927024798428008*^9},
 CellLabel->
  "Out[269]=",ExpressionUUID->"4f249f3b-3488-4f8f-a2a5-82ca2a95fd7d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.927011228082692*^9, 
  3.927011252814087*^9}},ExpressionUUID->"d42272c0-af5f-4238-9992-\
d5996e6d2c1f"],

Cell[BoxData[
 RowBox[{"Derived", " ", "Lagrangian"}]], "Output",
 CellChangeTimes->{{3.927011210377921*^9, 3.927011246999749*^9}},
 CellLabel->
  "Out[1280]=",ExpressionUUID->"bbce83ff-900c-4bef-923e-fca1e9336dc6"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"0.20106445`\\\", \
\\\",\\\", \\\"0.232163595`\\\", \\\",\\\", \\\"0.262400277`\\\", \\\",\\\", \
\\\"0.290947519`\\\", \\\",\\\", \\\"0.317087886`\\\", \\\",\\\", \
\\\"0.340263333`\\\", \\\",\\\", \\\"0.360110854`\\\", \\\",\\\", \
\\\"0.376478367`\\\", \\\",\\\", \\\"0.389418489`\\\", \\\",\\\", \
\\\"0.399162818`\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"37\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) cannot be used as a part \
specification.\"", 2, 1281, 1063, 19550308640578313735, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.9270112100852575`*^9, 3.9270112470051994`*^9}},
 CellLabel->
  "During evaluation of \
In[1280]:=",ExpressionUUID->"e5e7f588-9c84-4a58-a42f-a4badbd5d01c"],

Cell[BoxData[
 RowBox[{"Length", "\[LeftDoubleBracket]", 
  RowBox[{"{", 
   RowBox[{
   "0.20106445`", ",", "0.232163595`", ",", "0.262400277`", ",", 
    "0.290947519`", ",", "0.317087886`", ",", "0.340263333`", ",", 
    "0.360110854`", ",", "0.376478367`", ",", "0.389418489`", ",", 
    "0.399162818`", ",", "0.406083447`", ",", "0.410648761`", ",", 
    "0.413377688`", ",", "0.414793859`", ",", "0.415381007`", ",", 
    "0.415542868`", ",", "0.415572579`", ",", "0.415636686`", ",", 
    "0.415777371`", ",", "0.41593367`", ",", "0.415978699`", ",", 
    "0.415765807`", ",", "0.415173723`", ",", "0.414140915`", ",", 
    "0.412682518`", ",", "0.410887941`", ",", "0.408901754`", ",", 
    "0.406893836`", ",", "0.405026405`", ",", "0.403424958`", ",", 
    "0.402158176`", ",", "0.401229578`", ",", "0.400581932`", ",", 
    "0.400113716`", ",", "0.399704937`", ",", "0.399247375`", ",", 
    "0.398672765`", ",", "0.397972688`", ",", "0.397205747`", ",", 
    "0.39649031`", ",", "0.395983749`", ",", "0.395851457`", ",", 
    "0.396231099`", ",", "0.39719929`", ",", "0.398748594`", ",", 
    "0.400781571`", ",", "0.403125022`"}], "}"}], 
  "\[RightDoubleBracket]"}]], "Output",
 CellChangeTimes->{{3.927011210377921*^9, 3.9270112470161705`*^9}},
 CellLabel->
  "Out[1281]=",ExpressionUUID->"017f2649-5056-4149-9672-f3bf97a40373"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["ClearAll"], "Input",
 CellChangeTimes->{3.9270111906935472`*^9},
 CellLabel->
  "In[1209]:=",ExpressionUUID->"5f7e1c1c-e1d5-4079-b401-a1ba75697335"],

Cell[BoxData["ClearAll"], "Output",
 CellChangeTimes->{
  3.9270100935835295`*^9, 3.927010381673187*^9, 3.927010767254903*^9, 
   3.9270108034800844`*^9, 3.9270108521770945`*^9, 3.927010906652859*^9, {
   3.9270110026761565`*^9, 3.9270110305794606`*^9}, 3.9270111907935643`*^9},
 CellLabel->
  "Out[1209]=",ExpressionUUID->"5c096e85-e4ce-40b0-b124-fd8c60c86c9e"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.927012894322831*^9, 3.927012895665245*^9}, {
  3.9270132323666973`*^9, 3.927013234976048*^9}, {3.927013339116764*^9, 
  3.9270133404443827`*^9}, {3.9270145257508926`*^9, 3.9270145262351294`*^9}, {
  3.9270146792051487`*^9, 
  3.9270146825664415`*^9}},ExpressionUUID->"537e138a-67c3-4c82-b5ce-\
a0dd4aff9706"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"th1", "[", "t", "]"}], "/.", "s"}]], "Input",
 CellChangeTimes->{{3.9270110900203133`*^9, 3.927011091011426*^9}, {
   3.927011141953105*^9, 3.927011194288164*^9}, 3.9270125001019583`*^9, {
   3.9270125381354375`*^9, 3.9270125389883814`*^9}},
 CellLabel->
  "In[369]:=",ExpressionUUID->"76de6ee3-ecef-47b2-a915-748b78998430"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["InterpolatingFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{{}, {}, 
                  TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwV0H1QE3QYB/AdHGkphGHUkUIwBlHy4pAXIfnGjVCBQyYMCOLFDY6bomFC
iomdkDEEgiuy4q3TuHkTZXOMl73wLoIuXsbYy69I4aaShKQgL2ee9OuP5577
/PO97/O48j87mG3FYDCC6fy/pzYMbueXNGKGZx3b9vck1o+9vPWG+hcEq0ey
XrgYcEViLi5duozAHvv6hFUD1h67HJdEi7GbE8T6Q2FEq6kxzqdGgjTXOvV8
lAmn4k7LA5quweNMcpBFY0JOHceSuSJF005l1EFXM2SqXdEbRDeQlxfKiTlq
Bv+0oOF121bE1ecy9l81w4v5qsmrVYFf3zZbP79nRoHDn1ybPe14+HnXg6KN
BMZ5T8XibAfW1/x97HYQzP9kV7WlXIkQVoU4bB9BaQWz+ekWNc4mlac3pxEE
CaUtFqUG4z0vVKI8gtxK4dLFj7vxRHM9QHWWoL221uXTxR6MzXkvO5QTpHT5
8yXaXkw9sq7vryF4h7uTZ1Pdh/Oqc89X6whyPpkLncvqxzes4o9sLxMUnA8Z
kH4wAGUqLz9ZTHC31vzKtwsDkDgnyWokBDp3dthy302IvyzTnbxG+024Oe4p
HYS5aKXoTgvB0LPRGdu0W9ikj7j/REbAZ9wWrvoMQbndg90mJ+jxTfmub3EI
Y6ovPF0UBFf04patQ8P42r6KmdVGwK27cGRf5W1Ue0VpS9oJEmM092sO3IFs
ZOOjsg6CB8cl3MNuWgRNtDke7qT/UHtnvDurxWycU9NWJYFD4dHMDM1vSOVk
B/ZRy1MirL4qGQFPlSTLVRE0s4SZHZGjuPRzcKe9msA3e7/8lNMYhPwT/5RS
Fwz3NjlNj0FwJCT8EjVzvHDQLXUczVZP9TxqpZ/qYsTNcYy8KQzj0Tw/ZmRn
oocOu/3639fSPvNj0vjr1TpUnSvMzKd9y+yy8WxJB91Lc0MvvUcfHl62lzeB
5h2i5DPUAt9/Y+51T8Bm27RARD3ZwjiU46pHQvcP20apL/xlWfCv0KP7hsjN
meY9dlz4ffOyHl2hDaxcaraJ85YxcRLcTZZqI7WGe3LE0jsJHwHbuZL28Uxf
0c8wDQjLsJLy6T9M7vEJ7lUGrN7tm2LT/gHTRvaJNQNi+Y2bh6nzvcWH5ClG
7P0wW7FOvbYr/rXAQSO+rxuuklOnjUZbX33PhB+L0+WrNC/4och8oNKEyGOx
RSzq/wDj1czX
                    "]]}, 
                   Annotation[#, "Charting`Private`Tag$73987#1"]& ]}}, {}}, {
               DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                AxesOrigin -> {0, 0.32688648813686255`}, 
                FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None},
                 DisplayFunction -> Identity, PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                All, DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0.32688648813686255`}, DisplayFunction :> 
                Identity, Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultMeshStyle" -> AbsolutePointSize[6], 
                  "ScalingFunctions" -> None, 
                  "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                PlotRange -> {{0., 0.368}, {0.32688648813686255`, 
                 0.40207702035848153`}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.368`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{{}, {}, 
                  TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwV0H1QE3QYB/AdHGkphGHUkUIwBlHy4pAXIfnGjVCBQyYMCOLFDY6bomFC
iomdkDEEgiuy4q3TuHkTZXOMl73wLoIuXsbYy69I4aaShKQgL2ee9OuP5577
/PO97/O48j87mG3FYDCC6fy/pzYMbueXNGKGZx3b9vck1o+9vPWG+hcEq0ey
XrgYcEViLi5duozAHvv6hFUD1h67HJdEi7GbE8T6Q2FEq6kxzqdGgjTXOvV8
lAmn4k7LA5quweNMcpBFY0JOHceSuSJF005l1EFXM2SqXdEbRDeQlxfKiTlq
Bv+0oOF121bE1ecy9l81w4v5qsmrVYFf3zZbP79nRoHDn1ybPe14+HnXg6KN
BMZ5T8XibAfW1/x97HYQzP9kV7WlXIkQVoU4bB9BaQWz+ekWNc4mlac3pxEE
CaUtFqUG4z0vVKI8gtxK4dLFj7vxRHM9QHWWoL221uXTxR6MzXkvO5QTpHT5
8yXaXkw9sq7vryF4h7uTZ1Pdh/Oqc89X6whyPpkLncvqxzes4o9sLxMUnA8Z
kH4wAGUqLz9ZTHC31vzKtwsDkDgnyWokBDp3dthy302IvyzTnbxG+024Oe4p
HYS5aKXoTgvB0LPRGdu0W9ikj7j/REbAZ9wWrvoMQbndg90mJ+jxTfmub3EI
Y6ovPF0UBFf04patQ8P42r6KmdVGwK27cGRf5W1Ue0VpS9oJEmM092sO3IFs
ZOOjsg6CB8cl3MNuWgRNtDke7qT/UHtnvDurxWycU9NWJYFD4dHMDM1vSOVk
B/ZRy1MirL4qGQFPlSTLVRE0s4SZHZGjuPRzcKe9msA3e7/8lNMYhPwT/5RS
Fwz3NjlNj0FwJCT8EjVzvHDQLXUczVZP9TxqpZ/qYsTNcYy8KQzj0Tw/ZmRn
oocOu/3639fSPvNj0vjr1TpUnSvMzKd9y+yy8WxJB91Lc0MvvUcfHl62lzeB
5h2i5DPUAt9/Y+51T8Bm27RARD3ZwjiU46pHQvcP20apL/xlWfCv0KP7hsjN
meY9dlz4ffOyHl2hDaxcaraJ85YxcRLcTZZqI7WGe3LE0jsJHwHbuZL28Uxf
0c8wDQjLsJLy6T9M7vEJ7lUGrN7tm2LT/gHTRvaJNQNi+Y2bh6nzvcWH5ClG
7P0wW7FOvbYr/rXAQSO+rxuuklOnjUZbX33PhB+L0+WrNC/4och8oNKEyGOx
RSzq/wDj1czX
                    "]]}, 
                   Annotation[#, "Charting`Private`Tag$73987#1"]& ]}}, {}}, {
               DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                AxesOrigin -> {0, 0.32688648813686255`}, 
                FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None},
                 DisplayFunction -> Identity, PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                All, DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0.32688648813686255`}, DisplayFunction :> 
                Identity, Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultMeshStyle" -> AbsolutePointSize[6], 
                  "ScalingFunctions" -> None, 
                  "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                PlotRange -> {{0., 0.368}, {0.32688648813686255`, 
                 0.40207702035848153`}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.368`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    InterpolatingFunction[{{0., 0.368}}, {
     5, 7, 2, {3732}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
      False}, CompressedData["
1:eJw82IdXD/77PnAjRJuKtyIhJRmJKHTRINmSmWgpo0RIaSnR3nvvvffutffL
qERCMjLSRCTj9/k6z/O7z7n/g/tc574eylaXD9tOmzJlytT/bbTklP8/4zuU
k3TueutVxjMfju0J1XsZt6fB+HeinnRwd/oSdrGeUs75BQMl9XpVsx+Hnq1l
6Z1VnBknKdWpl61zCIo5PXo3K6rLDM1f60XlTaWur3uvNyendnpY2mc9Sk96
Fb9gRK+wra1pwvqbXv6k9l5zj196Dtdrlmwo+aXXtkniadGzX3pO9ySups77
rfcnvPs9+/lvvU2uI+zSQ1Mgmv5qSmf/dPiUSFdfExVBxsMYMR01ESgd13eS
OyiCxbdPX3nzXASKWvoWhvdn4uKZl/O4lWJIbH0o8HgvBua6+phLC8Qhd2aD
/a+j4shzZlf/1JIAv/crTZQmhWcbw8y3Ds5Fxe5rPg9Wz4P/6RP5Vo7zsIEh
/bqMMg/j/MQO+zeyWDK2z+Pl4vnoCeg/k9S4AKuWutpMGC+EXJ1k27IOBXRm
mdYdvr8Iy4bemfb0LMF9bfGIV1XL8Ng7x5RCXQFtSviA8gYNZDqucTmQqQm5
68U3VOM2Ijg44q3FuA7cnE7qud3XQ7jS7aJ4BX2sWOno8n6lEYIqHnXSnYwx
qrNxfXrdHhylxYe5/9kPCxXPG8VLDyHi49qchazDYJT0dfifP4LxK1HTvosf
xUptI03b8mMw/zl+psP0BMJa80N3fD8Jms/JlrJEc3zdKf55kZ4FVMVaFwb3
nUHJ+7rlHrSzYHGlt26ItsSrovOmA7ZWmAihXcjcZI15Tgo+J2bbQOPwtQTp
Hhvs3CAsZxfb4oz8Co6n5znc/OHZu/GgHSKfPRn/rGyPouZ1ktlf7MFMDVA5
xTyPl96vt86Nu4DvVluOcO0vQsYo+qK37iWoqw76bBJ3gOHsnYlDLxxweiC1
IqfMETeE3znmty+Dc0xtJGClEx5zOm/ZRjqhT+f2rB2TThgqXB2laHMFkwrP
Fv8QXMGskLuFHRuvQvbPeu2y1KtQvtxLDZzljDWvgvadc3KG7qHN3Tu6nbGL
9tZmkf41HNGKGPlReA1ns7e5d867Dge5T7PK3a/D7W5sVNC767j7XV/Jbv8N
RNkPF+rX3UB6d5L24iUuKDExpk34u6Ch6eu+x6MuYGlkdJefvImOlH22wfSb
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
x/VFeKvPMpmxvQgzH21pXrKvCKpnKlZvPVmE3YMr0o7ZFeHCrWRp52tFCJ49
1yf0dhFK4+59KQgtwgOV3zbMpCKMVl3tepVfhLn6H3b9qinChoenG+bTi3DU
okNd62ERXD4bJ+9/UYQEt1aJC5+K0Ci6wcvvexGexxaMpIsU4/dyJatmmWIo
VUV3PFlcjB075hh9WVUMqwdetZI6xbhz+puq+s5i5AxcSDAyLQbb9dUcy7PF
+DjrqLu7QzHmxPIH49yKobF8x5mqe8XYV1n78H50MS5v19D/lFEMj77OuIHc
YgT6eAx+LipGsfQXC9GGYghT7R8uYxVjWOPlDnQUQ6bJtOrkq2Ks381dfmOw
GEee6MVG/CzGddvqWSWzShD3ZaUrR7YE9bfTPr1RLsEzKTnzv2tK8CslULhw
awkWaUyB9u4SoPF6+aGjJThrPKDsYF0Cn66zUf5OJci26RLJ9igBc2zPjbbA
Erz3pr5/FlcCUalNJ8azS6CeUsyTqSzB3lVLt65uK4FDQ1yJsaAEYbsklGy6
S1D+2Cfcq78E7dY/piZ9KcGXUQfn2imlkPN+8/aRROn/uu2Jo4MLS3E8+T5b
VK0UbuqGOss3liKpvqEQ+qVo2blW8dSBUvR2ZofcMC/FFOuFfyPOl2LpaJhT
yY1SGHjNeM3xLYWtxC3Tt+GluJc0wvibUor8lee0FYpKwavrydOuL8WA0aH/
DjNLIdHJCnRoL8Uaq62//HtLcXCkwiH7cymueqr2tk2UIko85WDPzDLUJM6l
jc8rQ5eav9Zc5TL8qP2dvXpNGRYaOcvv3lKGLR0f7tkYl+G0pcWEl1kZPIc7
LiRZlSHdY/fz2stloIm17Wt3L8ObhA1tgwFlmKFWuG52XBlW1CplLs8ug7Fh
zLztFWU43z7H71RrGYLOeo/f4JehZOibXeTTMtx3v9hd8q4MI3P6TLhjZZBJ
ONr89m8ZEub1y3vPLEfhs/QHEhLlaMo45Z80rxwCe/kdKxeW48XaRxO1S8ox
OB5Uaahajj8tOy+2ry6HlN/U5Wc3lGPJ3ubng7rl0JznEnNrRzl2PNPcP9u4
HIczPs+M218Oa/u8tuVm5bi21upm5aly+I0ram63KkdMy5OPQvty5N6JzDx1
uRx1e/ad+ni9HJy5orIu7uXo7qYJRHzL8THdwy8yoBw/7TbrLQkvh9jaL+Ml
seVQHC8p25JSjtUt9vbcrHJsu7NM+VhhOfbvedn9trwcZ+YmRF6tK4dTt+me
Ka3luJ0uKRLKKEeEHbdZgV+OzDV3rhc8KkfVN701m56Wg9E80c94WY5O3+q0
w+/K8c7k8vFXA+UYl1GXcRwrx6zut9zJH+VYkJ7mE/C3HGp2J7fMn1kBnTVy
X7PFK2Dy7UHx+nkVONUcaEv5rwKXfI0W719SAXeTKU96VlQgRKYp7PzqCqQ+
vW78XasCZWnrpvrpVoBybqBh7o4KPFydezV9VwX6vp5dtWZ/BcaaFN42HanA
dN+u5N2nKiBrEmH2xLICy2X2StraV2Dj05nsMccK7Eyjenlfr8Cxc+6bJd0r
YL9602iSTwVufh0tWBlQgYCmYqu6sAok+tgpGMVWoGj30s725Ao0S78IPptV
AcGTOKOhggq8SD3851Z5BYZsJepm11XgrwbnclxLBaS++qipMCqwpGlbXyWv
Apo+PxK2P6qA/u6qw/efVMBU2lHM/GUFrJ+oMT6+rcC11DfuLgMV8LNN3Thj
rAKxGieGIn9UIO/LvLwlfytQ13j/TOmMSnBuByzYKl6JbmPDR9y5lfgk9Tfg
2H+VmOxq0H+nVAmx1GuTV1dUQtF2bfWU1ZVYrfHpUqhWJfS+ZKso6lbiQOOZ
lwXbK3Hm9sK4Tbsq4WT8+ABzXyVuS4WLmh6pRGSXCfXVyUpkpcxwc7SsRJUN
Zf0vu0owVt0aCHCsxOOxjdnzr1eiv2HEPOdWJb57F8lp+VRilvG5+xT/SiyQ
Ur63P6wSK7t68DymEropsT/OJ1fCxOZQxffMSpxaJX7Br6ASl8ZYS+eVV8Kj
4XZPem0lQr23Rq9pqUTqru97m+mVKJOsnGHCqwTl8aXWJw8r8ShZ1cX2SSVe
W79e++VFJcbUUz54v63E9LFjGZIDlZBtmHsyebQSKt7Cueo/KqG9y59f96cS
OyUN7hjNqMKxx7+3dohVwT65/tvZuVVwtXYuHVpQhUD1NXbuSlVIHP2gNGdF
FYrqs57GaVSh2csiQkWrCsKd/5lU6VThpUTntB3bqzDUGdp0f2cV/ibtvma+
rwrS1iKrP5lWQVm97Z3LySpojrqmzrCsgn79hmNRdlUw9RqWUnasgs3OQk7p
tSpcl7C9vfVWFfw6lXR5t6sQm/Rs7Jh/FfKsYorehVahfuVBG+eYKnBH5iya
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
XTbk875oTgtkI23OIcndIWyoOpZ+Cgtno+yRGLsrio3NG89nLYpjgxLP8rJJ
ZGP3r2XmRSlsPDpze/NYOhsn6C9ldbLZeL1i66hXHhsXAhOErEI2vgyOF0iU
snHr0JG7RyrYmF5TYZVUzUbwAim8rmND1v2SwsomNlJ6ud8vt7KhYqDaWUtl
oyT3TvlvBhvac14HG3LYaHXA+SA+G7seJRu132fjwYafyv+1s3Es/tifM4/Z
eDVZ/Sz3KRv2Z+bWDfawMUq7HLWhlw3XFcLLt16zMTVQfS/tHRuBg/fUZn9k
Y+6hdyIHP7ORVK3fFzvMxrIF6S0vxtgouvU7Yfk4Gxt6T964OMFGs3794cpf
bBjlyq2d+MsmDschDschDschDsfB8D+H4xCH4xCH4xCH4xCH4yDhn8NxiMNx
iMNxiMNxiMNxYPDP4TjE4TjE4TjE4TjE4TgY/OdwHOJwHOJwHOJwHOJwHOJw
HOJwHOJwHOJwHOJwHOJwHOJwHOJwHOJwHOJwHOJwHOJwHOJwHOJwHOJwHOJw
HOJwHOJwHOJwHOJwHOJwHOJwHOJwHOJwHOJwHOJwHOJwHOJwHPj8czgOcTgO
cTgOcTgOcTgONP45HIc4HIc4HIc4HIc4HAdd/xyOQxyOQxyOQxyOQxyOA+9/
DschDschDschDschDseB+j+H4xCH4xCH4xCH4xCH46Dzn8NxiMNxicNxicNx
icNx4fnP4bjE4bjE4bjE4bjE4bjE4bjE4bjE4bjE4bjE4bjE4bjE4bjE4bjE
4bjE4bjE4bjE4bjE4bjE4bjE4bjE4bjE4bjE4bjE4bjE4bjE4bjE4bjE4bjE
4bjE4bjE4bjE4bjE4bjE4bjE4bjE4bjE4bjE4bho+edwXOJwXOJwXOJwXOJw
XNj9czgucTgucTgucTgucTguZP45HJc4HJc4HJc4HJc4HBdN/xyOSxyOSxyO
SxyOSxyOC9t/DsclDsclDsclDsclDseF1D+H4xKH4xKH4xKH4xKH46Lhn8Nx
icNxicNxicNxicNxicNxicPxiMPxiMPxiMPxiMPxiMPxiMPxiMPxiMPxiMPx
iMPxiMPxiMPxiMPxiMPxiMPxiMPxiMPxiMPxiMPxiMPxiMPxiMPxiMPxiMPx
iMPxiMPxsP+fw/GIw/GIw/GIw/GIw/Hw45/D8YjD8YjD8YjD8YjD8ZD5z+F4
xOF4xOF4xOF4xOF42PvP4XjE4XjE4XjE4XjE4XgY/+dwPOJwPOJwPOJwPOJw
PKT/czgecTgecTgecTgecTgeTP45HI84HI84HI84HI84HA9f/zkcjzgcjzgc
jzgcjzgcjzgcjzgcjzgcjzgcjzgcjzgcjzgcjzgcjzgcjzgcjzgcjzgcnzgc
nzgcnzgcnzgcnzgcnzgcnzgcnzgcnzgcnzgcnzgcnzgcnzgcnzgcnzgcnzgc
HwH/HI5PHI5PHI5PHI5PHI4PrX8OxycOxycOxycOxycOx8eLfw7HJw7HJw7H
Jw7HJw7Hx71/DscnDscnDscnDscnDseH5j+H4xOH4xOH4xOH4xOH46Pnn8Px
icPxicPxicPxicPx4ffP4fjE4fjE4fjE4fjE4fjE4fjE4fjE4fjE4fjE4fjE
4fjE4fjE4fjE4fjE4fjE4fjE4fjE4fjE4fjE4fjE4fjE4fjE4fjE4fjE4fjE
4fjE4fjE4fjE4fjE4fjE4fjE4QTE4QTE4QTE4QTE4QTE4QTE4QRg/HM4AXE4
AXE4AXE4AXE4ARz/OZyAOJyAOJyAOJyAOJwAC/45nIA4nIA4nIA4nIA4nAC0
fw4nIA4nIA4nIA4nIA4nwKV/DicgDicgDicgDicgDieA/D+HExCHExCHExCH
ExCHE/zvR/o/hxMQhxMQhxMQhxMQhxMQhxMQhxMQhxMQhxMQhxMQhxMQhxMQ
hxMQhxMQhxMQhxMQhxMQhxMQhxMQhxMQhxMQhxMQhxMQhxMQhxMQhxMQhxMQ
hxMQhxMQhxMQhxMQhxMQhxPA7J/DCYjDCYjDCYjDCYjDCfD3n8MJiMMJiMMJ
iMMJicMJUfDP4YTE4YTE4YTE4YTE4YQw/edwQuJwQuJwQuJwQuJwQvz+53BC
4nBC4nBC4nBC4nBC5P1zOCFxOCFxOCFxOCFxOOH/bvL/HE5IHE5IHE5IHE5I
HE5IHE5IHE5IHE5IHE5IHE5IHE5IHE5IHE5IHE5IHE5IHE5IHE5IHE5IHE5I
HE5IHE5IHE5IHE5IHE5IHE5IHE5IHE5IHE5IHE5IHO7/tWCP3XZsWxSGY9u2
bSc9tp0d27Zt27Ztm6tqqmbF3LF54tx9V+ufxj942+hPgA4XoMMF6HABOlyA
DhegwwXocAE6XABzgg4XoMMF6HABOlyADhdAiaDDBehwATpcgA4XoMMFEBp0
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
3t9Oo+GdIgcad9BINrNjhp8dNe6WWTBnZWeNNR/O/S3bVaPDuo89QrtpZG+Y
7s7kHhpvI9eplrOXxt7DIw87vTUGdt2RuV9fjeIp78xP3F/j743oEY4O0Dg3
qlifFoM0JuXrfP/fYI3qjxfWXD9UI86CC8cqD9fQlT5nezVCY/F/6RfPHKXR
fGvdyPnHaKRtPrq/GavxJNauR4PHa2w5dbdOyokaPfrEPHVqkka+DCVytZui
8UV3WRZ5msaRiYujbZ2uMaLopUE1Z2qUe/kl9P0sjcjLMzaYP0fjas36Z4vM
05j5d0ze2/M16u3ZvXLkQo0k7e7HTL9Y43bC2MMuLNFYdbHki87LNNoN7tY4
5gqNLNmXXti1UuP17csF6q/W2D3j25qvazT6l8kcd+k6jaIfGowstUHj19px
rx9s1DjTYG+z8Zs1JkR+eDnLVo2qh+MUubZNI1bX0ht67tAQKXokiL9LY+GN
ZWMO7NZoNurquyZ7NVLn+97i1z6NR4+yXF91QGPj/EbFyx/S6FZpwuanhzXy
/Lcv8dSjGp+2PBqf67jGoZB4n9wTGsNioU3/Uxo41dNJckYjYp8VpY6d1bic
/vq2luc1pusfycJf1KgzMdvkDZc0EhVt8rXKFY2bLya2f31VY8WyA3LWdY02
NZ+gQEAj09/4uzxH4+XusqmGCo2dbXtPS6U0+iZc9f201ih88Uan9p7Gj0G/
TBRf41S2HBW23dQYd7vp3lq3NSrPmJz24x2NGGUOzVxwT8N5H/qr6AON+WsT
drvzUKNJg/I3Rz3WSBm5b+UMoRoPDq0+cPGpxvouToauz8M6kuLPnFgvNXLd
yPlv9yuNDyNDejZ4o3Eg79Q7395qDHl0uNqy92Edmf/scOmPGuErJc7y6JPG
xW8VFkz4ojF1S78I2b5p1ApZ2+f6f2EdiSXu9/qhYU/+rZngl8ay3rmPH/yt
0Sp9i+zN/mpk0NMW//6n6XCGDmfocIYOZ+hwhg5n6HCGDmfocIYOZ+hwhg5n
6HCGDmfocIYOZ+hwhg5n6HCGDmfocIYOZ+hwhg5n6HAG8YIOZ+hwhg5n6HCG
DmfwNOhwhg5n6HCGDmfocAbHgg5n6HCGDmfocIYOZzA76HCGDmfocIYOZ+hw
Bh2CDmfocIYOZ+hwhg5nUDzocIYOZ+hwhg5n6HAGcYIOZ+hwhg5n6HCGDmfo
cIYOZ+hwhg5n6HCGDmfocIYOZ+hwhg5n6HCGDmfocIYOZ+hwhg5n6HCGDmfo
cIYOZ+hwhg5n6HCGDmfocIYOZ+hwhg5n6HCGDmfocIYOZ+hwhg5n6HCGDmfo
cIYOZ+hwhg5n6HCGDmfocIYOZ+hwhg5n6HCGDmfocIYOZ+hwhg5n6HCGDmfo
cIYOZ+hwhg5n6HCGDmfocIYOZ+hwhg5n6HCGDmfocIYOZ+hwhg5n6HCGDmfo
cIYOZ+hwhg5n6HCGDmfocIYOZ+hwhg5n6HCGDmfocIYOZ+hwhg5n6HCGDmfo
cIYOZ+hwhg5n6HCGDhfWkaDDeXQ4jw7n0eE8OpyHGkGH8+hwHh3Oo8N5dDgP
6YIO59HhPDqcR4fz6HAevgYdzqPDeXQ4jw7n0eE8XAs6nEeH8+hwHh3Oo8N5
WB10OI8O59HhPDqcR4fzMCDocB4dzqPDeXQ4jw7n0eE8OpxHh/PocB4dzqPD
eXQ4jw7n0eE8OpxHh/PocB4dzqPDeXQ4jw7n0eE8OpxHh/PocB4dzqPDeXQ4
jw7n0eE8OpxHh/PocB4dzqPDeXQ4jw7n0eE8OpxHh/PocB4dzqPDeXQ4jw7n
0eE8OpxHh/PocB4dzqPDeXQ4jw7n0eE8OpxHh/PocB4dzqPDeXQ4jw7n0eE8
OpxHh/PocB4dzqPDeXQ4jw7n0eE8OpxHh/PocB4dzqPDeXQ4jw7n0eE8OpxH
h/PocB4dzqPDeXQ4jw7n0eE8OpxHh/PocB4dzqPDeXQ4jw7n0eE8OpxHh/Po
cB4dzqPDeXQ4jw7n4W7Q4Tw6nEeH8+hwHh3Ow96gw3l0OI8O59HhPDpcWEeC
DufR4Tw6nEeH8+hwYR0JOpxHh/PocB4dzqPDhXUk6HAeHc6jw3l0OI8OF9aR
oMNZOpylw1k6nKXDWdwOOpylw1k6nKXDWTqcxe6gw1k6nKXDWTqcpcNZOpyl
w1k6nKXDWTqcpcNZOpylw1k6nKXDWTqcpcNZOpylw1k6nKXDWTqcpcNZOpyl
w1k6nKXDWTqcpcNZOpylw1k6nKXDWTqcpcNZOpylw1k6nKXDWTqcpcNZOpyl
w1k6nKXDWTqcpcNZOpylw1k6nKXDWTqcpcNZOpylw1k6nKXDWTqcpcNZOpyl
w1k6nKXDWTqcpcNZOpylw1k6nKXDWTqcpcNZOpylw1k6nKXDWTqcpcNZOpyl
w1k6nKXDWTqcpcNZOpylw1k6nKXDWTqcpcNZOpylw1k6nKXDWTqcpcNZOpyl
w1k6nKXDWTqcpcNZJA06nKXDWTqcpcNZOpzFm6DDWTqcpcNZOpylw1mcDTqc
pcNZOpylw1k6nMWioMNZOpylw1k6nKXDWXQPOpylw1k6nKXDWTqcRdmgw1k6
nKXDWTqcpcOFdSTocJYOZ+lwlg5n6XCWDmfpcJYOZ+lwlg5n6XCWDmfpcJYO
Z+lwlg7n0+F8OpxPh/PpcD4dzqfD+XQ4nw7n0+F8OpxPh/PpcD4dzqfD+XQ4
nw7n0+F8OpxPh/PpcD4dzqfD+XQ4nw7n0+F8OpxPh/PpcD4dzqfD+XQ4nw7n
0+F8OpxPh/PpcD4dzqfD+XQ4nw7n0+F8OpxPh/PpcD4dzqfD+XQ4nw7n0+F8
OpxPh/PpcD4dzqfD+XQ4nw7n0+F8OpxPh/PpcD4dzqfD+XQ4nw7n0+F8OpxP
h/PpcD4dzqfD+XQ4nw7n0+F8OpxPh/PpcD4dzqfD+XQ4nw7n0+F8OpxPh/Pp
cD4dzsfIoMP5COlQ8kGdsPs/mKYNiQ==
     "], {Developer`PackedArrayForm, CompressedData["
1:eJwl2wPT4FjbqNHp7u9t99O2bdu2bdu2bdu2bdu2bdtnzZlUrT+Q1FVJ9r53
/AZtK7QJ9M8//0wO+Of/X0EISghCE5YIRCYaMYlDfBKRlBSkJh0ZyUJ2cpGX
AhSmGCUpQ3kqUZUa1KYeDWlCc1rRlg50phs96UN/BjGUEYxmHBOZwnRmMZcF
LGYZK1nDejaxlR3sZh8HOcJxTnGWC1zmGje5w30e8ZQXvOYdH/nCd37xl8Bu
8P8ITigCCE8kohKD2MQjIUlITirSkoHMZCMnechPIYpSgtKUoyJVqE4t6tKA
xjSjJf8+8PZ0ois96E0/BjKE4YxiLBOYzDRmMof5LGIpK1jNOjayhe3sYi8H
OMwxTnKG81ziKje4zT0e8oTnvOItH/jMN37yh0CB//nn/whGSMIQjohEITqx
iEsCEpOMlKQhPZnISg5yk4+CFKE4pShLBSpTjZrUoT6NaEoLWtOOjnShO73o
ywAGM4yRjGE8k5jKDGYzj4UsYTmrWMsGNrONnexhP4c4yglOc46LXOE6t7jL
Ax7zjJe84T2f+MoPfgf+L/4gBCUEoQlLBCITjZjEIT6JSEoKUpOOjGQhO7nI
SwEKU4ySlKE8lahKDWpTj4Y0oTmtaEsHOtONnvShP4MYyghGM46JTGE6s5jL
AhazjJWsYT2b2MoOdrOPgxzhOKc4ywUuc42b3OE+j3jKC17zjo984Tu/+Evg
/9M/wQlFAOGJRFRiEJt4JCQJyUlFWjKQmWzkJA/5KURRSlCaclSkCtWpRV0a
0JhmtKQN7elEV3rQm34MZAjDGcVYJjCZacxkDvNZxFJWsJp1bGQL29nFXg5w
mGOc5AznucRVbnCbezzkCc95xVs+8Jlv/OQPgf6nf4IRkjCEIyJRiE4s4pKA
xCQjJWlITyaykoPc5KMgRShOKcpSgcpUoyZ1qE8jmtKC1rSjI13oTi/6MoDB
DGMkYxjPJKYyg9nMYyFLWM4q1rKBzWxjJ3vYzyGOcoLTnOMiV7jOLe7ygMc8
4yVveM8nvvKD3//778UfhKCEIDRhiUBkohGTOMQnEUlJQWrSkZEsZCcXeSlA
YYpRkjKUpxJVqUFt6tGQJjSnFW3pQGe60ZM+9GcQQxnBaMYxkSlMZxZzWcBi
lrGSNaxnE1vZwW72cZAjHOcUZ7nAZa5xkzvc5xFPecFr3vGRL3znF38JHEz/
BCcUAYQnElGJQWzikZAkJCcVaclAZrKRkzzkpxBFKUFpylGRKlSnFnVpQGOa
0ZI2tKcTXelBb/oxkCEMZxRjmcBkpjGTOcxnEUtZwWrWsZEtbGcXeznAYY5x
kjOc5xJXucFt7vGQJzznFW/5wGe+8ZM/BAquf4IRkjCEIyJRiE4s4pKAxCQj
JWlITyaykoPc5KMgRShOKcpSgcpUoyZ1qE8jmtKC1rSjI13oTi/6MoDBDGMk
YxjPJKYyg9nMYyFLWM4q1rKBzWxjJ3vYzyGOcoLTnOMiV7jOLe7ygMc84yVv
eM8nvvKD38H/++gPQlBCEJqwRCAy0YhJHOKTiKSkIDXpyEgWspOLvBSgMMUo
SRnKU4mq1KA29WhIE5rTirZ0oDPd6Ekf+jOIoYxgNOOYyBSmM4u5LGAxy1jJ
Gtazia3sYDf7OMgRjnOKs1zgMte4yR3u84invOA17/jIF77zi78EDql/ghOK
AMITiajEIDbxSEgSkpOKtGQgM9nISR7yU4iilKA05ahIFapTi7o0oDHNaEkb
2tOJrvSgN/0YyBCGM4qxTGAy05jJHOaziKWsYDXr2MgWtrOLvRzgMMc4yRnO
c4mr3OA293jIE57zird84DPf+MkfAoXSP8EISRjCEZEoRCcWcUlAYpKRkjSk
JxNZyUFu8lGQIhSnFGWpQGWqUZM61KcRTWlBa9rRkS50pxd9GcBghjGSMYxn
ElOZwWzmsZAlLGcVa9nAZraxkz3s5xBHOcFpznGRK1znFnd5wGOe8ZI3vOcT
X/nB71D//fAHISghCE1YIhCZaMQkDvFJRFJSkJp0ZCQL2clFXgpQmGKUpAzl
qURValCbejSkCc1pRVs60Jlu9KQP/RnEUEYwmnFMZArTmcVcFrCYZaxkDevZ
xFZ2sJt9HOQIxznFWS5wmWvc5A73ecRTXvCad3zkC9/5xV8Ch9E/wQlFAOGJ
RFRiEJt4JCQJyUlFWjKQmWzkJA/5KURRSlCaclSkCtWpRV0a0JhmtKQN7elE
V3rQm34MZAjDGcVYJjCZacxkDvNZxFJWsJp1bGQL29nFXg5wmGOc5AznucRV
bnCbezzkCc95xVs+8Jlv/OQPgQL0TzBCEoZwRCQK0YlFXBKQmGSkJA3pyURW
cpCbfBSkCMUpRVkqUJlq1KQO9WlEU1rQmnZ0pAvd6UVfBjCYYYxkDOOZxFRm
MJt5LGQJy1nFWjawmW3sZA/7OcRRTnCac1zkCte5xV0e8JhnvOQN7/nEV37w
O+C/xb4gBCUEoQlLBCITjZjEIT6JSEoKUpOOjGQhO7nISwEKU4ySlKE8lahK
DWpTj4Y0oTmtaEsHOtONnvShP4MYyghGM46JTGE6s5jLAhazjJWsYT2b2MoO
drOPgxzhOKc4ywUuc42b3OE+j3jKC17zjo984Tu/+EvgcPonOKEIIDyRiEoM
YhOPhCQhOalISwYyk42c5CE/hShKCUpTjopUoTq1qEsDGtOMlrShPZ3oSg96
04+BDGE4oxjLBCYzjZnMYT6LWMoKVrOOjWxhO7vYywEOc4yTnOE8l7jKDW5z
j4c84TmveMsHPvONn/whUHj9E4yQhCEcEYlCdGIRlwQkJhkpSUN6MpGVHOQm
HwUpQnFKUZYKVKYaNalDfRrRlBa0ph0d6UJ3etGXAQxmGCMZw3gmMZUZzGYe
C1nCclaxlg1sZhs72cN+DnGUE5zmHBe5wnVucZcHPOYZL3nDez7xlR/8Dv/f
Qn8QghKC0IQlApGJRkziEJ9EJCUFqUlHRrKQnVzkpQCFKUZJylCeSlSlBrWp
R0Oa0JxWtKUDnelGT/rQn0EMZQSjGcdEpjCdWcxlAYtZxkrWsJ5NbGUHu9nH
QY5wnFOc5QKXucZN7nCfRzzlBa95x0e+8J1f/CVwRP0TnFAEEJ5IRCUGsYlH
QpKQnFSkJQOZyUZO8pCfQhSlBKUpR0WqUJ1a1KUBjWlGS9rQnk50pQe96cdA
hjCcUYxlApOZxkzmMJ9FLGUFq1nHRrawnV3s5QCHOcZJznCeS1zlBre5x0Oe
8JxXvOUDn/nGT/4QKJL+CUZIwhCOiEQhOrGISwISk4yUpCE9mchKDnKTj4IU
oTilKEsFKlONmtShPo1oSgta046OdKE7vejLAAYzjJGMYTyTmMoMZjOPhSxh
OatYywY2s42d7GE/hzjKCU5zjotc4Tq3uMsDHvOMl7zhPZ/4yg9+R/pvky8I
QQlBaMISgchEIyZxiE8ikpKC1KQjI1nITi7yUoDCFKMkZShPJapSg9rUoyFN
aE4r2tKBznSjJ33ozyCGMoLRjGMiU5jOLOaygMUsYyVrWM8mtrKD3ezjIEc4
zinOcoHLXOMmd7jPI57ygte84yNf+M4v/hI4iv4JTigCCE8kohKD2MQjIUlI
TirSkoHMZCMnechPIYpSgtKUoyJVqE4t6tKAxjSjJW1oTye60oPe9GMgQxjO
KMYygclMYyZzmM8ilrKC1axjI1vYzi72coDDHOMkZzjPJa5yg9vc4yFPeM4r
3vKBz3zjJ38IFFX/BCMkYQhHRKIQnVjEJQGJSUZK0pCeTGQlB7nJR0GKUJxS
lKUClalGTepQn0Y0pQWtaUdHutCdXvRlAIMZxkjGMJ5JTGUGs5nHQpawnFWs
ZQOb2cZO9rCfQxzlBKc5x0WucJ1b3OUBj3nGS97wnk985Qe/o/63wR+EoIQg
NGGJQGSiEZM4xCcRSUlBatKRkSxkJxd5KUBhilGSMpSnElWpQW3q0ZAmNKcV
belAZ7rRkz70ZxBDGcFoxjGRKUxnFnNZwGKWsZI1rGcTW9nBbvZxkCMc5xRn
ucBlrnGTO9znEU95wWve8ZEvfOcXfwkcXf8EJxQBhCcSUYlBbOKRkCQkJxVp
yUBmspGTPOSnEEUpQWnKUZEqVKcWdWlAY5rRkja0pxNd6UFv+jGQIQxnFGOZ
wGSmMZM5zGcRS1nBataxkS1sZxd7OcBhjnGSM5znEle5wW3u8ZAnPOcVb/nA
Z77xkz8EiqF/ghGSMIQjIlGITizikoDEJCMlaUhPJrKSg9zkoyBFKE4pylKB
ylSjJnWoTyOa0oLWtKMjXehOL/oygMEMYyRjGM8kpjKD2cxjIUtYzirWsoHN
bGMne9jPIY5ygtOc4yJXuM4t7vKAxzzjJW94zye+8oPfMf4b7glCUEIQmrBE
IDLRiEkc4pOIpKQgNenISBayk4u8FKAwxShJGcpTiarUoDb1aEgTmtOKtnSg
M93oSR/6M4ihjGA045jIFKYzi7ksYDHLWMka1rOJrexgN/s4yBGOc4qzXOAy
17jJHe7ziKe84DXv+MgXvvOLvwSOpX+CE4oAwhOJqMQgNvFISBKSk4q0ZCAz
2chJHvJTiKKUoDTlqEgVqlOLujSgMc1oSRva04mu9KA3/RjIEIYzirFMYDLT
mMkc5rOIpaxgNevYyBa2s4u9HOAwxzjJGc5ziavc4Db3eMgTnvOKt3zgM9/4
yR8CxdY/wQhJGMIRkShEJxZxSUBikpGSNKQnE1nJQW7yUZAiFKcUZalAZapR
kzrUpxFNaUFr2tGRLnSnF30ZwGCGMZIxjGcSU5nBbOaxkCUsZxVr2cBmtrGT
PeznEEc5wWnOcZErXOcWd3nAY57xkje85xNf+cHv2P8N9gUhKCEITVgiEJlo
xCQO8UlEUlKQmnRkJAvZyUVeClCYYpSkDOWpRFVqUJt6NKQJzWlFWzrQmW70
pA/9GcRQRjCacUxkCtOZxVwWsJhlrGQN69nEVnawm30c5AjHOcVZLnCZa9zk
Dvd5xFNe8Jp3fOQL3/nFXwLH1T/BCUUA4YlEVGIQm3gkJAnJSUVaMpCZbOQk
D/kpRFFKUJpyVKQK1alFXRrQmGa0pA3t6URXetCbfgxkCMMZxVgmMJlpzGQO
81nEUlawmnVsZAvb2cVeDnCYY5zkDOe5xFVucJt7POQJz3nFWz7wmW/85A+B
4umfYIQkDOGISBSiE4u4JCAxyUhJGtKTiazkIDf5KEgRilOKslSgMtWoSR3q
04imtKA17ehIF7rTi74MYDDDGMkYxjOJqcxgNvNYyBKWs4q1bGAz29jJHvZz
iKOc4DTnuMgVrnOLuzzgMc94yRve84mv/OA3/w71BiEoIQhNWCIQmWjEJA7x
SURSUpCadGQkC9nJRV4KUJhilKQM5alEVWpQm3o0pAnNaUVbOtCZbvSkD/0Z
xFBGMJpxTGQK05nFXBawmGWsZA3r2cRWdrCbfRzkCMc5xVkucJlr3OQO93nE
U17wmnd85Avf+cVfAifQP8EJRQDhiURUYhCbeCQkCclJRVoykJls5CQP+SlE
UUpQmnJUpArVqUVdGtCYZrSkDe3pRFd60Jt+DGQIwxnFWCYwmWnMZA7zWcRS
VrCadWxkC9vZxV4OcJhjnOQM57nEVW5wm3s85AnPecVbPvCZb/zkD4ES6p9g
hCQM4YhIFKITi7gkIDHJSEka0pOJrOQgN/koSBGKU4qyVKAy1ahJHerTiKa0
oDXt6EgXutOLvgxgMMMYyRjGM4mpzGA281jIEpazirVsYDPb2Mke9nOIo5zg
NOe4yBWuc4u7POAxz3jJG97zia/84Df/DvQHISghCE1YIhCZaMQkDvFJRFJS
kJp0ZCQL2clFXgpQmGKUpAzlqURValCbejSkCc1pRVs60Jlu9KQP/RnEUEYw
mnFMZArTmcVcFrCYZaxkDevZxFZ2sJt9HOQIxznFWS5wmWvc5A73ecRTXvCa
d3zkC9/5xV8CJ9Y/wQlFAOGJRFRiEJt4JCQJyUlFWjKQmWzkJA/5KURRSlCa
clSkCtWpRV0a0JhmtKQN7elEV3rQm34MZAjDGcVYJjCZacxkDvNZxFJWsJp1
bGQL29nFXg5wmGOc5AznucRVbnCbezzkCc95xVs+8Jlv/OQPgZLon2CEJAzh
iEgUohOLuCQgMclISRrSk4ms5CA3+ShIEYpTirJUoDLVqEkd6tOIprSgNe3o
SBe604u+DGAwwxjJGMYzianMYDbzWMgSlrOKtWxgM9vYyR72c4ijnOA057jI
Fa5zi7s84DHPeMkb3vOJr/zgN/8e5glCUEIQmrBEIDLRiEkc4pOIpKQgNenI
SBayk4u8FKAwxShJGcpTiarUoDb1aEgTmtOKtnSgM93oSR/6M4ihjGA045jI
FKYzi7ksYDHLWMka1rOJrexgN/s4yBGOc4qzXOAy17jJHe7ziKe84DXv+MgX
vvOLvwROpn+CE4oAwhOJqMQgNvFISBKSk4q0ZCAz2chJHvJTiKKUoDTlqEgV
qlOLujSgMc1oSRva04mu9KA3/RjIEIYzirFMYDLTmMkc5rOIpaxgNevYyBa2
s4u9HOAwxzjJGc5ziavc4Db3eMgTnvOKt3zgM9/4yR8CJdc/wQhJGMIRkShE
JxZxSUBikpGSNKQnE1nJQW7yUZAiFKcUZalAZapRkzrUpxFNaUFr2tGRLnSn
F30ZwGCGMZIxjGcSU5nBbOaxkCUsZxVr2cBmtrGTPeznEEc5wWnOcZErXOcW
d3nAY57xkje85xNf+cFv/j3IF4SghCA0YYlAZKIRkzjEJxFJSUFq0pGRLGQn
F3kpQGGKUZIylKcSValBberRkCY0pxVt6UBnutGTPvRnEEMZwWjGMZEpTGcW
c1nAYpaxkjWsZxNb2cFu9nGQIxznFGe5wGWucZM73OcRT3nBa97xkS985xd/
CZxS/wQnFAGEJxJRiUFs4pGQJCQnFWnJQGaykZM85KcQRSlBacpRkSpUpxZ1
aUBjmtGSNrSnE13pQW/6MZAhDGcUY5nAZKYxkznMZxFLWcFq1rGRLWxnF/8P
HNx1qA==
      "], CompressedData["
1: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
7j7O2aa4e9/O+9FiZNC46UZYdNuC9IPPDt2PNsWvn919nC1OhicJb0Bedwuu
V5TJ//M2xX2qDaxlu8mwp8r36nW5LXh/YTDIzNAUL9FNdzXtI0MJ++3ICf4t
MN6I7+g4aorJQrobvw6SYf2iiqT/2iak7til4iNkij2LGJMnpcjgN3Xnv83+
TUhXYcnj3zDBezndotdlySDh3KJY0LgJHQK045QBE/wz9UYv01Ey/L4vfdGr
eBOSpyNY3jWa4NMv3z3nViCDpRGT8Kl7m3D0gubwsyITfL6Xs1dQkQw3xuqZ
9kRuQqcIa0DRXRPc1PX1mqgSGXhKe+QlPDchjP/17dYwE2wMzNlip8nAHNuU
KG+wCVoRa4p0bibYeXv9gCiQwXhGesnh2CZYLv4xM9ExwfosrQcFNciQyv/Y
L1OEmteL2OYSWRM8HPgwl0ubDDIP+trGtjfg0aPOVCl+E3zoXPodRj0ymBS/
5Lf4uwHrOrOpFavGuNKeQLtmQIbiiS7J9vYNwMS9Fc79xvjGu/DpcWMy2CDl
FZf3G1Cdkj0v0miM3Xe9dP5pRgZZGmIww6MNWOB+c3SsyBhnGHzyuW9BBreG
i2Z5tzfA4/jmBkuuMY5+fDPVwooMbK8fPtGK2YADDieUcYox9q3SWXtjQ4aZ
b64hBec2oKLs0C7rSGMMlxVX79uTIfHbWHOC9QYIWk76HfMxxpSMzugrTmQ4
M/TyT4TqBryV2D5aaWKMGWbY77q5kuHoGdmr1w5sQAY8E32iaIyNdCaPqXuQ
If+S6dIjzg2gS3CR1dlljJ3ORrlKeJNBJXQpoH1xHW598drVzWiMG1w7xNd9
yfCptWKWt3cdjh6O2+U0aYR3O4wFEP3J4JO7L+JMwzq8596WmiYa4R8/f1m9
OkcGawszWlLxOrT+NitOrTHCOxTedkUFkcHRX/qS1f11yFP0t9Z8ZoRNUOhf
8xAyVExyt/+NWodG16ozLClGWN1eJnPPRTJ46uct3fJbh0RPloT+ECN8U6V3
eOoyGY6z7xvQN18H2SHXuRZHI3yV6U53ZQQZ7i1VXRFRXofrZ79+bdY0wp9P
GbjFXiVDnEVUzdredRhm72L8LWOEl96wpOnFUPsuMvHmDPs6sBAuvqYTMMJ7
Xrb5cFwnwy2ppf7VhTXwz7hTrLJhiLPr7g+2xZOh1nauQKh3Da4e1d9KGDLE
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
iIY3+XbBiTiTiVVpGWyr+Vr0lvhssY2K9Zku0PGRG/vKJYNx9SG5SkpUkLJ7
Gjx7pAuou86fWl2XxkKBjyZviAfQHYsKN+uCgKB6C5EFaXz/Zt1VXpkK7kJs
hjv1uqCVliv64IA0Wm+Kl3xNPPy+gQetfBeIBrPJP22URh29715SKlQQ3u3D
38PfBU+TGL/9KZTGH5Nuh18QTxw8q5BL3wXSQjUj51Ol8Z3x8U4RVSo8e9H0
8OVKJ2TOXpj4HS2NB9blJ2OILz06avxsinia1OfYO9L477JSBI8a2TezafHU
3k4I5GIZsbgkjdeuY3s4caMhG5mK2k4IfXAjl89RGn0CTdOZ1In/e7h1Mr8T
rFwptt8PSuOf24Kid4hfzYm1EkrthLP3HLInQRpL2SPl/hH3DvOxOxbTCeK1
voVzatIYsoO90UeDnKuLZsZv73VCy6Piw4xi0viieZr+G/ETTzSWGH07Yd/D
0mv6bNK4Ycl30E2TfMcTbk6Xz3QCf7k4/42/Ujh6V+TAGPGqm7oB83adcNP0
JG/vFylcXVA4aq9FBabmz1svm3dCr4WJs8knKfws9+dfB/FrztP+jFs7oW0i
/2dNoxSGFk+DuTYV7pk8hXQlsq5c/2L7Yik83mguisTdg267HRXphNZ/ZxJo
06Wwhdk3SpfUVfF2yvN8rJ3A8cs3tCpOCl/XNKRlEL8Tq1w8/LcDnihW+UUF
k3F6oo9KbaECq6My5s93wOvKndZX/aTwwget1BjiBt7DC/FDHXDwhwzjZTcp
bLRfecSqSwWWs8y6oW0dMF4ffS/gqBSyXtEVDiBeHnL9bgh2wNn6Bkwyl8Lv
mnu2LxPfvom3JTqrA2pNfyb1GUhh9rFbtG56JF/4lv59l9RB8mHsZgklKTSx
1nYdIM5ucZ6263EHyDRslLguTN7LmXfGUp/EGQ/tbtq7HZB+tSTuC7MUOtq7
MlURr/n4i8bMuwOOMr2yzP0jibGqUeY6BlR4EDg5E+HaATO2GozB3ySR87OH
Ygrx+cCJulG7Dig06JPbOimJ46tabwS2UuFsf/tZ470dMHnYWtGzTxIFpDUa
7hOfTXPNTDHsgCT+8bsL9ZLYxpYd/Jv48XGDVWHVDmi5ez1SrFgSJ1UZv7gZ
UmGqLNbnqVgHaESHmqi/lcQ3qYHzVOIDflI6CpwdIEz1yNNPkETrpguPzLdR
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
ZOh1CZKBjEqafSUjs+jEq1cfMfe0P3m8cvo6qM4FlPjPzaLrAba7t7Cfw3os
sAQk4dsLqC9fJb5fIOYy5hPPNzNXz1+FEFv1D8o75hApbb8h5suQpXxh4BJU
MXUdkaOdQ1ySlX6Yz3+lERcmC8AdhT6LROY5ZErKSsD83Cw7g/YdHjioYSD6
8MQcquOk5GN+gD3ly4QQO7jff7fpyTOHVpklyjEXnTr4Ks2LCu6kfL2xV3AO
/fLqL8Pcj7Z07ZslNcq4ujv41+U5lF+ZmIe5CPO9vq03HGirlE5XWmoObarG
xWFu/2PT6avOOXT7280rf2XnkDRViw/mF6gTPwgyCiKH+w8SWW/PIVd04hHm
AZL3yafsRVGGkwLr27tz6GtWgjDmO38GtvEMXUWrouLsAffn0ASPwjbMt1qu
l4XESaJwO75Lo9pzaBwdq8HjfEhRvmBF9QYS9n83FvVwDtFfYHLB3NL1YX8B
9U0k5j0ZXaVPPI8+7znMP79NL6osk0Nsl5fnbhvNoV5/iy783rezcy1RWSkg
RGa4JWcyh3R+tVthnjS0KWB38jYq/Y/78nvTOfTuvNpuzB3ZUqLIC3fQ9JE1
MVezOWT57e9LPA+DvjA8aJdRQfJ7GxuKCH6Dq/Ew5k9U5O4ci1dFKK1MR5vg
mgv5L/A8TxDkG9XduItsNBVJVsT360bUUmEeZnPSI1RNHQXE3UxeNJ5DGu9W
zfE6Wgntz87L1kDUWnFKo4ZzyKhNsRWvu5I7iss5e++j7xI8v8SI/1v07eNJ
zL8P0HT76WmituqhQzuJ8ZE4Ym6L13WG4MdRgQotxONZxXOVGM/kCOEP2A5s
CkVnph7WRqXmO3Im780hptHTq9ieSGjVDXy21EFpz7Q5/qnOod0hN3gwl2P9
uaun6QFyXT+28lRpDvF7P1fDdkll3upxZYgu2nty6x2JmA8yVTsdsR2Lu3D3
6az4Q3SfspY3LzmHRp0yX2C7ZyQglTw98xD9cXsd1ETMN6nDvgnYfrasbJwp
fP0IlSqt5DMT8/MWT3g6trcXNGRtlK7poSAptshBYj5vkmnSsX3mjs6wPDul
h27l5c0LEOuCq646Dtvz60nUX6ZD9dHB2RpDo0fzaC1CMQjbf83dfHZx8gao
vjL098jmPJo45WDzDa/fApOjh3caoivNp9prpRbQouApRbyP8P26WJJbYYiM
+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
G+YTrey8uRkuaDaLOiySag7+B9K2yGg=
      "]}, {Automatic}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], "[", "t", "]"}], "}"}]], "Output",
 CellChangeTimes->{3.9270125006300592`*^9, 3.9270125398678255`*^9, 
  3.927012825205439*^9, 3.927013184632629*^9, 3.927013319897437*^9},
 CellLabel->
  "Out[369]=",ExpressionUUID->"d455aa5c-e4f0-422f-8c62-f6282666dd5b"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.92701008488923*^9, 3.927010086075286*^9}, 
   3.927011200773179*^9, {3.9270125238447514`*^9, 3.9270125342567244`*^9}},
 CellLabel->
  "In[1848]:=",ExpressionUUID->"2d14e61d-972a-4ccd-bfb3-7ca1f1f89ba6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{
   RowBox[{"tim", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"Last", "[", "tim", "]"}], ",", "150"}], "]"}]], "Input",
 CellLabel->
  "In[277]:=",ExpressionUUID->"dc309e5e-6e97-4492-909b-f98b013afb08"],

Cell[BoxData[
 RowBox[{"{", "0", "}"}]], "Output",
 CellChangeTimes->{3.927013256023143*^9},
 CellLabel->
  "Out[277]=",ExpressionUUID->"12871f94-ae2a-4bbf-bd1b-b0f87f68d444"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8895252121841087`*^9, 3.8895252502613215`*^9}, {
   3.8895252841561527`*^9, 3.8895252900333853`*^9}, 
   3.8895263793139052`*^9},ExpressionUUID->"3fd41e4c-33b2-48b4-996b-\
2c35c6b64809"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"timePoints", ",", "th1Values"}], "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9270135992470517`*^9, 3.927013612817928*^9}, {
  3.927013693492511*^9, 3.927013695618271*^9}, {3.9270146865445156`*^9, 
  3.9270147177281303`*^9}},
 CellLabel->
  "In[1299]:=",ExpressionUUID->"61dd27af-8a4d-41c9-b9cb-638f3b38abf8"],

Cell[BoxData[
 RowBox[{"ListLinePot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"{", "0.20106445`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "125"], ",", 
       RowBox[{"{", "0.24705781375282296`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["2", "125"], ",", 
       RowBox[{"{", "0.28334685281035016`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["3", "125"], ",", 
       RowBox[{"{", "0.3111553693953519`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["4", "125"], ",", 
       RowBox[{"{", "0.33247397559387404`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "25"], ",", 
       RowBox[{"{", "0.348820555469671`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["6", "125"], ",", 
       RowBox[{"{", "0.3613541894804966`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["7", "125"], ",", 
       RowBox[{"{", "0.3709664634269946`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["8", "125"], ",", 
       RowBox[{"{", "0.3783302609298194`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["9", "125"], ",", 
       RowBox[{"{", "0.38396579237537226`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["2", "25"], ",", 
       RowBox[{"{", "0.38827392963782037`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["11", "125"], ",", 
       RowBox[{"{", "0.39155501074209326`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["12", "125"], ",", 
       RowBox[{"{", "0.3940621237587221`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["13", "125"], ",", 
       RowBox[{"{", "0.39598649969117566`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["14", "125"], ",", 
       RowBox[{"{", "0.3974597757482166`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["3", "25"], ",", 
       RowBox[{"{", "0.3985785820033229`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["16", "125"], ",", 
       RowBox[{"{", "0.3994254607005885`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["17", "125"], ",", 
       RowBox[{"{", "0.4000637979112864`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["18", "125"], ",", 
       RowBox[{"{", "0.4005303756497567`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["19", "125"], ",", 
       RowBox[{"{", "0.4008573809388773`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["4", "25"], ",", 
       RowBox[{"{", "0.40109559816449303`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["21", "125"], ",", 
       RowBox[{"{", "0.40128921092353714`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["22", "125"], ",", 
       RowBox[{"{", "0.401447672189625`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["23", "125"], ",", 
       RowBox[{"{", "0.40157584795269247`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["24", "125"], ",", 
       RowBox[{"{", "0.4016784791187739`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "5"], ",", 
       RowBox[{"{", "0.4017690895495526`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["26", "125"], ",", 
       RowBox[{"{", "0.4018492671497224`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["27", "125"], ",", 
       RowBox[{"{", "0.4019085585669818`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["28", "125"], ",", 
       RowBox[{"{", "0.4019593935003737`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["29", "125"], ",", 
       RowBox[{"{", "0.40201334931553406`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["6", "25"], ",", 
       RowBox[{"{", "0.4020602385883719`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["31", "125"], ",", 
       RowBox[{"{", "0.4020775549642767`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["32", "125"], ",", 
       RowBox[{"{", "0.4020567245550588`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["33", "125"], ",", 
       RowBox[{"{", "0.40196722047836964`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["34", "125"], ",", 
       RowBox[{"{", "0.40184879124764467`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["7", "25"], ",", 
       RowBox[{"{", "0.40178174354469776`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["36", "125"], ",", 
       RowBox[{"{", "0.40176187590974344`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["37", "125"], ",", 
       RowBox[{"{", "0.40177361093829517`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["38", "125"], ",", 
       RowBox[{"{", "0.40179762758357934`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["39", "125"], ",", 
       RowBox[{"{", "0.4018207654354657`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["8", "25"], ",", 
       RowBox[{"{", "0.4018585355103974`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["41", "125"], ",", 
       RowBox[{"{", "0.40192017430801763`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["42", "125"], ",", 
       RowBox[{"{", "0.40198389452570593`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["43", "125"], ",", 
       RowBox[{"{", "0.4020281194682529`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["44", "125"], ",", 
       RowBox[{"{", "0.40203515490509956`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["9", "25"], ",", 
       RowBox[{"{", "0.40199101885044675`", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["46", "125"], ",", 
       RowBox[{"{", "0.4019254420521918`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.9270136046931047`*^9, 3.9270136133179045`*^9}, 
   3.927013696067506*^9, {3.927014690093229*^9, 3.9270147182961874`*^9}},
 CellLabel->
  "Out[1299]=",ExpressionUUID->"4416e7e2-c3e4-4ca7-9f6f-18f8e6ec6ad3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", "th1Values", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"tim", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"Last", "[", "tim", "]"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Blue"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8895273771304398`*^9, 3.889527417061175*^9}, 
   3.8895274594857635`*^9, {3.8895275910201015`*^9, 3.8895276151907797`*^9}, {
   3.8895276871343613`*^9, 3.8895276874832067`*^9}, {3.9270125114550343`*^9, 
   3.92701251163225*^9}, {3.9270131928365126`*^9, 3.9270132033091826`*^9}, {
   3.9270133898463383`*^9, 3.9270134321098447`*^9}, {3.927013467209465*^9, 
   3.927013582920236*^9}},
 CellLabel->
  "In[1300]:=",ExpressionUUID->"aa503ae2-c5eb-4ae9-8a97-04f8cd2539cb"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goPd++6qYuHga/ZS16J7bKbl2sP4Z946
dVhNq4Xzp9wOXHLsSh+cb/z7YILe82lw/vKrXPfi7ebB+Z0bDL5mSy2G848n
z9FafHEZnN/4vm957Y1VcP6BxJvR3WfWwflHFDbJe9lthPOf/bEyVbDbDOef
5U959Fl6K5z/TdRSO/HDNjg/tuOi+II3OxDuMeSac+fYLjj/kxvbkVcn9sD5
8/zXtU86uA/O73Cv/ijtcwDOT5BlLAz3Pgjnz+IL3zPR8hCc/3lr380t1ofh
/Ldhc46oWB6B8z2Fq6onqx5F+K/VkuW16jE4f5HwyQhH0eNwvuJsveon/xH8
/TdK8wv+nUDwDXv1f78+Ceffc2g7mPf2FMI/nqGK+q9Ow/kHc7/4vLt6Bs5n
9ij1mnb1LCL+bI8J2x45B+e/0Xm7ymDdeThf4+WvTrawC3B+t2e6SskZBP9f
yxH1az4X4Xylc5wTtx9B8MVErBLtrS7B+VKm0bN270TwzyenWG43uIxIb7lx
jss3IviaJc4bbA2uwPn5HQKtwcsQ/KPl5w7Fql1FpN+SkrTncxH8JXmsheLC
1xDud25/Yj0JwVdW+7j3Psd1OD9PuO+UuDeCv5NB+7p/L4IPAMTimIs=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goOdwY3WoFyF6/ZS16J7bKbl2sP4Z946
dVhNq4Xzp9wOXHLsSh+cb/z7YILe82lw/vKrXPfi7ebB+Z0bDL5mSy2G848n
z9FafHEZnN/4vm957Y1VcP6BxJvR3WfWwflHFDbJe9lthPOf/bEyVbDbDOef
5U959Fl6K5z/TdRSO/HDNjg/tuOi+II3OxDuMeSac+fYLjj/kxvbkVcn9sD5
8/zXtU86uA/O73Cv/ijtcwDOT5BlLAz3Pgjnz+IL3zPR8hCc/3lr380t1ofh
/Ldhc46oWB6B8z2Fq6onqx5F+K/VkuW16jE4f5HwyQhH0eNwvuJsveon/xH8
/TdK8wv+nUDwDXv1f78+Ceffc2g7mPf2FMI/nqGK+q9Ow/kHc7/4vLt6Bs5n
9ij1mnb1LCL+bI8J2x45B+e/0Xm7ymDdeThf4+WvTrawC3B+t2e6SskZBP9f
yxH1az4X4Xylc5wTtx9B8MVErBLtrS7B+VKm0bN270TwzyenWG43uIxIb7lx
jss3IviaJc4bbA2uwPn5HQKtwcsQ/KPl5w7Fql1FpN+SkrTncxH8JXmsheLC
1xDud25/Yj0JwVdW+7j3Psd1OD9PuO+UuDeCv5NB+7p/L4IPAPx2hQs=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goPdOytR+Vd7r9tLXYvusZmWaw/jn3nr
1GE1rRbOn3I7cMmxK31wvvHvgwl6z6fB+cuvct2Lt5sH53duMPiaLbUYzj+e
PEdr8cVlcH7j+77ltTdWwfkHEm9Gd59ZB+cfUdgk72W3Ec5/9sfKVMFuM5x/
lj/l0WfprXD+N1FL7cQP2+D82I6L4gve7EC4x5Brzp1ju+D8T25sR16d2APn
z/Nf1z7p4D44v8O9+qO0zwE4P0GWsTDc+yCcP4svfM9Ey0Nw/uetfTe3WB+G
89+GzTmiYnkEzvcUrqqerHoU4b9WS5bXqsfg/EXCJyMcRY/D+Yqz9aqf/Efw
998ozS/4dwLBN+zV//36JJx/z6HtYN7bUwj/eIYq6r86DecfzP3i8+7qGTif
2aPUa9rVs4j4sz0mbHvkHJz/RuftKoN15+F8jZe/OtnCLsD53Z7pKiVnEPx/
LUfUr/lchPOVznFO3H4EwRcTsUq0t7oE50uZRs/avRPBP5+cYrnd4DIiveXG
OS7fiOBrljhvsDW4Aufndwi0Bi9D8I+WnzsUq3YVkX5LStKez0Xwl+SxFooL
X0O437n9ifUkBF9Z7ePe+xzX4fw84b5T4t4I/k4G7ev+vQg+AD6Mo7c=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goNd6PdChQlmN+ylrkX32EzLtYfxz7x1
6rCaVgvnT7kduOTYlT443/j3wQS959Pg/OVXue7F282D8zs3GHzNlloM5x9P
nqO1+OIyOL/xfd/y2hur4PwDiTeju8+sg/OPKGyS97LbCOc/+2NlqmC3Gc4/
y5/y6LP0Vjj/m6ilduKHbXB+bMdF8QVvdiDcY8g1586xXXD+Jze2I69O7IHz
5/mva590cB+c3+Fe/VHa5wCcnyDLWBjufRDOn8UXvmei5SE4//PWvptbrA/D
+W/D5hxRsTwC53sKV1VPVj2K8F+rJctr1WNw/iLhkxGOosfhfMXZetVP/iP4
+2+U5hf8O4HgG/bq/359Es6/59B2MO/tKYR/PEMV9V+dhvMP5n7xeXf1DJzP
7FHqNe3qWUT82R4Ttj1yDs5/o/N2lcG683C+xstfnWxhF+D8bs90lZIzCP6/
liPq13wuwvlK5zgnbj+C4IuJWCXaW12C86VMo2ft3ongn09OsdxucBmR3nLj
HJdvRPA1S5w32BpcgfPzOwRag5ch+EfLzx2KVbuKSL8lJWnP5yL4S/JYC8WF
ryHc79z+xHoSgq+s9nHvfY7rcH6ecN8pcW8EfyeD9nX/XgQfAGXfkGs=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goPdfBsnp6eTbthLXYvusZmWaw/jn3nr
1GE1rRbOn3I7cMmxK31wvvHvgwl6z6fB+cuvct2Lt5sH53duMPiaLbUYzj+e
PEdr8cVlcH7j+77ltTdWwfkHEm9Gd59ZB+cfUdgk72W3Ec5/9sfKVMFuM5x/
lj/l0WfprXD+N1FL7cQP2+D82I6L4gve7EC4x5Brzp1ju+D8T25sR16d2APn
z/Nf1z7p4D44v8O9+qO0zwE4P0GWsTDc+yCcP4svfM9Ey0Nw/uetfTe3WB+G
89+GzTmiYnkEzvcUrqqerHoU4b9WS5bXqsfg/EXCJyMcRY/D+Yqz9aqf/Efw
998ozS/4dwLBN+zV//36JJx/z6HtYN7bUwj/eIYq6r86DecfzP3i8+7qGTif
2aPUa9rVs4j4sz0mbHvkHJz/RuftKoN15+F8jZe/OtnCLsD53Z7pKiVnEPx/
LUfUr/lchPOVznFO3H4EwRcTsUq0t7oE50uZRs/avRPBP5+cYrnd4DIiveXG
OS7fiOBrljhvsDW4Aufndwi0Bi9D8I+WnzsUq3YVkX5LStKez0Xwl+SxFooL
X0O437n9ifUkBF9Z7ePe+xzX4fw84b5T4t4I/k4G7ev+vQg+AL4rmsc=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goOdxJHsp1U3b9hLXYvusZmWaw/jn3nr
1GE1rRbOn3I7cMmxK31wvvHvgwl6z6fB+cuvct2Lt5sH53duMPiaLbUYzj+e
PEdr8cVlcH7j+77ltTdWwfkHEm9Gd59ZB+cfUdgk72W3Ec5/9sfKVMFuM5x/
lj/l0WfprXD+N1FL7cQP2+D82I6L4gve7EC4x5Brzp1ju+D8T25sR16d2APn
z/Nf1z7p4D44v8O9+qO0zwE4P0GWsTDc+yCcP4svfM9Ey0Nw/uetfTe3WB+G
89+GzTmiYnkEzvcUrqqerHoU4b9WS5bXqsfg/EXCJyMcRY/D+Yqz9aqf/Efw
998ozS/4dwLBN+zV//36JJx/z6HtYN7bUwj/eIYq6r86DecfzP3i8+7qGTif
2aPUa9rVs4j4sz0mbHvkHJz/RuftKoN15+F8jZe/OtnCLsD53Z7pKiVnEPx/
LUfUr/lchPOVznFO3H4EwRcTsUq0t7oE50uZRs/avRPBP5+cYrnd4DIiveXG
OS7fiOBrljhvsDW4Aufndwi0Bi9D8I+WnzsUq3YVkX5LStKez0Xwl+SxFooL
X0O437n9ifUkBF9Z7ePe+xzX4fw84b5T4t4I/k4G7ev+vQg+AAkrvRs=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goPddYu8/Tb8N+2lrkX32EzLtYfxz7x1
6rCaVgvnT7kduOTYlT443/j3wQS959Pg/OVXue7F282D8zs3GHzNlloM5x9P
nqO1+OIyOL/xfd/y2hur4PwDiTeju8+sg/OPKGyS97LbCOc/+2NlqmC3Gc4/
y5/y6LP0Vjj/m6ilduKHbXB+bMdF8QVvdiDcY8g1586xXXD+Jze2I69O7IHz
5/mva590cB+c3+Fe/VHa5wCcnyDLWBjufRDOn8UXvmei5SE4//PWvptbrA/D
+W/D5hxRsTwC53sKV1VPVj2K8F+rJctr1WNw/iLhkxGOosfhfMXZetVP/iP4
+2+U5hf8O4HgG/bq/359Es6/59B2MO/tKYR/PEMV9V+dhvMP5n7xeXf1DJzP
7FHqNe3qWUT82R4Ttj1yDs5/o/N2lcG683C+xstfnWxhF+D8bs90lZIzCP6/
liPq13wuwvlK5zgnbj+C4IuJWCXaW12C86VMo2ft3ongn09OsdxucBmR3nLj
HJdvRPA1S5w32BpcgfPzOwRag5ch+EfLzx2KVbuKSL8lJWnP5yL4S/JYC8WF
ryHc79z+xHoSgq+s9nHvfY7rcH6ecN8pcW8EfyeD9nX/XgQfAK2ciu8=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goNd7ZaO8ACLm/ZS16J7bKbl2sP4Z946
dVhNq4Xzp9wOXHLsSh+cb/z7YILe82lw/vKrXPfi7ebB+Z0bDL5mSy2G848n
z9FafHEZnN/4vm957Y1VcP6BxJvR3WfWwflHFDbJe9lthPOf/bEyVbDbDOef
5U959Fl6K5z/TdRSO/HDNjg/tuOi+II3OxDuMeSac+fYLjj/kxvbkVcn9sD5
8/zXtU86uA/O73Cv/ijtcwDOT5BlLAz3Pgjnz+IL3zPR8hCc/3lr380t1ofh
/Ldhc46oWB6B8z2Fq6onqx5F+K/VkuW16jE4f5HwyQhH0eNwvuJsveon/xH8
/TdK8wv+nUDwDXv1f78+Ceffc2g7mPf2FMI/nqGK+q9Ow/kHc7/4vLt6Bs5n
9ij1mnb1LCL+bI8J2x45B+e/0Xm7ymDdeThf4+WvTrawC3B+t2e6SskZBP9f
yxH1az4X4Xylc5wTtx9B8MVErBLtrS7B+VKm0bN270TwzyenWG43uIxIb7lx
jss3IviaJc4bbA2uwPn5HQKtwcsQ/KPl5w7Fql1FpN+SkrTncxH8JXmsheLC
1xDud25/Yj0JwVdW+7j3Psd1OD9PuO+UuDeCv5NB+7p/L4IPACwyjmM=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goPdd4PSQ9fDb9pLXYvusZmWaw/jn3nr
1GE1rRbOn3I7cMmxK31wvvHvgwl6z6fB+cuvct2Lt5sH53duMPiaLbUYzj+e
PEdr8cVlcH7j+77ltTdWwfkHEm9Gd59ZB+cfUdgk72W3Ec5/9sfKVMFuM5x/
lj/l0WfprXD+N1FL7cQP2+D82I6L4gve7EC4x5Brzp1ju+D8T25sR16d2APn
z/Nf1z7p4D44v8O9+qO0zwE4P0GWsTDc+yCcP4svfM9Ey0Nw/uetfTe3WB+G
89+GzTmiYnkEzvcUrqqerHoU4b9WS5bXqsfg/EXCJyMcRY/D+Yqz9aqf/Efw
998ozS/4dwLBN+zV//36JJx/z6HtYN7bUwj/eIYq6r86DecfzP3i8+7qGTif
2aPUa9rVs4j4sz0mbHvkHJz/RuftKoN15+F8jZe/OtnCLsD53Z7pKiVnEPx/
LUfUr/lchPOVznFO3H4EwRcTsUq0t7oE50uZRs/avRPBP5+cYrnd4DIiveXG
OS7fiOBrljhvsDW4Aufndwi0Bi9D8I+WnzsUq3YVkX5LStKez0Xwl+SxFooL
X0O437n9ifUkBF9Z7ePe+xzX4fw84b5T4t4I/k4G7ev+vQg+AA8Kv/M=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goPdV8kpCr/zb9pLXYvusZmWaw/jn3nr
1GE1rRbOn3I7cMmxK31wvvHvgwl6z6fB+cuvct2Lt5sH53duMPiaLbUYzj+e
PEdr8cVlcH7j+77ltTdWwfkHEm9Gd59ZB+cfUdgk72W3Ec5/9sfKVMFuM5x/
lj/l0WfprXD+N1FL7cQP2+D82I6L4gve7EC4x5Brzp1ju+D8T25sR16d2APn
z/Nf1z7p4D44v8O9+qO0zwE4P0GWsTDc+yCcP4svfM9Ey0Nw/uetfTe3WB+G
89+GzTmiYnkEzvcUrqqerHoU4b9WS5bXqsfg/EXCJyMcRY/D+Yqz9aqf/Efw
998ozS/4dwLBN+zV//36JJx/z6HtYN7bUwj/eIYq6r86DecfzP3i8+7qGTif
2aPUa9rVs4j4sz0mbHvkHJz/RuftKoN15+F8jZe/OtnCLsD53Z7pKiVnEPx/
LUfUr/lchPOVznFO3H4EwRcTsUq0t7oE50uZRs/avRPBP5+cYrnd4DIiveXG
OS7fiOBrljhvsDW4Aufndwi0Bi9D8I+WnzsUq3YVkX5LStKez0Xwl+SxFooL
X0O437n9ifUkBF9Z7ePe+xzX4fw84b5T4t4I/k4G7ev+vQg+AIJWrHM=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goPd8+NL9/o33bSXuhbdYzMt1x7GP/PW
qcNqWi2cP+V24JJjV/rgfOPfBxP0nk+D85df5boXbzcPzu/cYPA1W2oxnH88
eY7W4ovL4PzG933La2+sgvMPJN6M7j6zDs4/orBJ3stuI5z/7I+VqYLdZjj/
LH/Ko8/SW+H8b6KW2okftsH5sR0XxRe82YFwjyHXnDvHdsH5n9zYjrw6sQfO
n+e/rn3SwX1wfod79UdpnwNwfoIsY2G490E4fxZf+J6Jlofg/M9b+25usT4M
578Nm3NExfIInO8pXFU9WfUown+tliyvVY/B+YuET0Y4ih6H8xVn61U/+Y/g
779Rml/w7wSCb9ir//v1STj/nkPbwby3pxD+8QxV1H91Gs4/mPvF593VM3A+
s0ep17SrZxHxZ3tM2PbIOTj/jc7bVQbrzsP5Gi9/dbKFXYDzuz3TVUrOIPj/
Wo6oX/O5COcrneOcuP0Igi8mYpVob3UJzpcyjZ61eyeCfz45xXK7wWVEesuN
c1y+EcHXLHHeYGtwBc7P7xBoDV6G4B8tP3coVu0qIv2WlKQ9n4vgL8ljLRQX
voZwv3P7E+tJCL6y2se99zmuw/l5wn2nxL0R/J0M2tf9exF8ADLi0Tc=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goOdT+vOc/oTbtpLXYvusZmWaw/jn3nr
1GE1rRbOn3I7cMmxK31wvvHvgwl6z6fB+cuvct2Lt5sH53duMPiaLbUYzj+e
PEdr8cVlcH7j+77ltTdWwfkHEm9Gd59ZB+cfUdgk72W3Ec5/9sfKVMFuM5x/
lj/l0WfprXD+N1FL7cQP2+D82I6L4gve7EC4x5Brzp1ju+D8T25sR16d2APn
z/Nf1z7p4D44v8O9+qO0zwE4P0GWsTDc+yCcP4svfM9Ey0Nw/uetfTe3WB+G
89+GzTmiYnkEzvcUrqqerHoU4b9WS5bXqsfg/EXCJyMcRY/D+Yqz9aqf/Efw
998ozS/4dwLBN+zV//36JJx/z6HtYN7bUwj/eIYq6r86DecfzP3i8+7qGTif
2aPUa9rVs4j4sz0mbHvkHJz/RuftKoN15+F8jZe/OtnCLsD53Z7pKiVnEPx/
LUfUr/lchPOVznFO3H4EwRcTsUq0t7oE50uZRs/avRPBP5+cYrnd4DIiveXG
OS7fiOBrljhvsDW4Aufndwi0Bi9D8I+WnzsUq3YVkX5LStKez0Xwl+SxFooL
X0O437n9ifUkBF9Z7ePe+xzX4fw84b5T4t4I/k4G7ev+vQg+AIipqC8=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goPd79eiBktn3bSXuhbdYzMt1x7GP/PW
qcNqWi2cP+V24JJjV/rgfOPfBxP0nk+D85df5boXbzcPzu/cYPA1W2oxnH88
eY7W4ovL4PzG933La2+sgvMPJN6M7j6zDs4/orBJ3stuI5z/7I+VqYLdZjj/
LH/Ko8/SW+H8b6KW2okftsH5sR0XxRe82YFwjyHXnDvHdsH5n9zYjrw6sQfO
n+e/rn3SwX1wfod79UdpnwNwfoIsY2G490E4fxZf+J6Jlofg/M9b+25usT4M
578Nm3NExfIInO8pXFU9WfUown+tliyvVY/B+YuET0Y4ih6H8xVn61U/+Y/g
779Rml/w7wSCb9ir//v1STj/nkPbwby3pxD+8QxV1H91Gs4/mPvF593VM3A+
s0ep17SrZxHxZ3tM2PbIOTj/jc7bVQbrzsP5Gi9/dbKFXYDzuz3TVUrOIPj/
Wo6oX/O5COcrneOcuP0Igi8mYpVob3UJzpcyjZ61eyeCfz45xXK7wWVEesuN
c1y+EcHXLHHeYGtwBc7P7xBoDV6G4B8tP3coVu0qIv2WlKQ9n4vgL8ljLRQX
voZwv3P7E+tJCL6y2se99zmuw/l5wn2nxL0R/J0M2tf9exF8ABP1uQs=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goNdiqSchteim/ZS16J7bKbl2sP4Z946
dVhNq4Xzp9wOXHLsSh+cb/z7YILe82lw/vKrXPfi7ebB+Z0bDL5mSy2G848n
z9FafHEZnN/4vm957Y1VcP6BxJvR3WfWwflHFDbJe9lthPOf/bEyVbDbDOef
5U959Fl6K5z/TdRSO/HDNjg/tuOi+II3OxDuMeSac+fYLjj/kxvbkVcn9sD5
8/zXtU86uA/O73Cv/ijtcwDOT5BlLAz3Pgjnz+IL3zPR8hCc/3lr380t1ofh
/Ldhc46oWB6B8z2Fq6onqx5F+K/VkuW16jE4f5HwyQhH0eNwvuJsveon/xH8
/TdK8wv+nUDwDXv1f78+Ceffc2g7mPf2FMI/nqGK+q9Ow/kHc7/4vLt6Bs5n
9ij1mnb1LCL+bI8J2x45B+e/0Xm7ymDdeThf4+WvTrawC3B+t2e6SskZBP9f
yxH1az4X4Xylc5wTtx9B8MVErBLtrS7B+VKm0bN270TwzyenWG43uIxIb7lx
jss3IviaJc4bbA2uwPn5HQKtwcsQ/KPl5w7Fql1FpN+SkrTncxH8JXmsheLC
1xDud25/Yj0JwVdW+7j3Psd1OD9PuO+UuDeCv5NB+7p/L4IPAD+XXw8=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goOdc0f89qXLb9pLXYvusZmWaw/jn3nr
1GE1rRbOn3I7cMmxK31wvvHvgwl6z6fB+cuvct2Lt5sH53duMPiaLbUYzj+e
PEdr8cVlcH7j+77ltTdWwfkHEm9Gd59ZB+cfUdgk72W3Ec5/9sfKVMFuM5x/
lj/l0WfprXD+N1FL7cQP2+D82I6L4gve7EC4x5Brzp1ju+D8T25sR16d2APn
z/Nf1z7p4D44v8O9+qO0zwE4P0GWsTDc+yCcP4svfM9Ey0Nw/uetfTe3WB+G
89+GzTmiYnkEzvcUrqqerHoU4b9WS5bXqsfg/EXCJyMcRY/D+Yqz9aqf/Efw
998ozS/4dwLBN+zV//36JJx/z6HtYN7bUwj/eIYq6r86DecfzP3i8+7qGTif
2aPUa9rVs4j4sz0mbHvkHJz/RuftKoN15+F8jZe/OtnCLsD53Z7pKiVnEPx/
LUfUr/lchPOVznFO3H4EwRcTsUq0t7oE50uZRs/avRPBP5+cYrnd4DIiveXG
OS7fiOBrljhvsDW4Aufndwi0Bi9D8I+WnzsUq3YVkX5LStKez0Xwl+SxFooL
X0O437n9ifUkBF9Z7ePe+xzX4fw84b5T4t4I/k4G7ev+vQg+AIbOrKc=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goNdyAvt+z2rb9pLXYvusZmWaw/jn3nr
1GE1rRbOn3I7cMmxK31wvvHvgwl6z6fB+cuvct2Lt5sH53duMPiaLbUYzj+e
PEdr8cVlcH7j+77ltTdWwfkHEm9Gd59ZB+cfUdgk72W3Ec5/9sfKVMFuM5x/
lj/l0WfprXD+N1FL7cQP2+D82I6L4gve7EC4x5Brzp1ju+D8T25sR16d2APn
z/Nf1z7p4D44v8O9+qO0zwE4P0GWsTDc+yCcP4svfM9Ey0Nw/uetfTe3WB+G
89+GzTmiYnkEzvcUrqqerHoU4b9WS5bXqsfg/EXCJyMcRY/D+Yqz9aqf/Efw
998ozS/4dwLBN+zV//36JJx/z6HtYN7bUwj/eIYq6r86DecfzP3i8+7qGTif
2aPUa9rVs4j4sz0mbHvkHJz/RuftKoN15+F8jZe/OtnCLsD53Z7pKiVnEPx/
LUfUr/lchPOVznFO3H4EwRcTsUq0t7oE50uZRs/avRPBP5+cYrnd4DIiveXG
OS7fiOBrljhvsDW4Aufndwi0Bi9D8I+WnzsUq3YVkX5LStKez0Xwl+SxFooL
X0O437n9ifUkBF9Z7ePe+xzX4fw84b5T4t4I/k4G7ev+vQg+AOnUvOc=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goMd533PjzvW3bSXuhbdYzMt1x7GP/PW
qcNqWi2cP+V24JJjV/rgfOPfBxP0nk+D85df5boXbzcPzu/cYPA1W2oxnH88
eY7W4ovL4PzG933La2+sgvMPJN6M7j6zDs4/orBJ3stuI5z/7I+VqYLdZjj/
LH/Ko8/SW+H8b6KW2okftsH5sR0XxRe82YFwjyHXnDvHdsH5n9zYjrw6sQfO
n+e/rn3SwX1wfod79UdpnwNwfoIsY2G490E4fxZf+J6Jlofg/M9b+25usT4M
578Nm3NExfIInO8pXFU9WfUown+tliyvVY/B+YuET0Y4ih6H8xVn61U/+Y/g
779Rml/w7wSCb9ir//v1STj/nkPbwby3pxD+8QxV1H91Gs4/mPvF593VM3A+
s0ep17SrZxHxZ3tM2PbIOTj/jc7bVQbrzsP5Gi9/dbKFXYDzuz3TVUrOIPj/
Wo6oX/O5COcrneOcuP0Igi8mYpVob3UJzpcyjZ61eyeCfz45xXK7wWVEesuN
c1y+EcHXLHHeYGtwBc7P7xBoDV6G4B8tP3coVu0qIv2WlKQ9n4vgL8ljLRQX
voZwv3P7E+tJCL6y2se99zmuw/l5wn2nxL0R/J0M2tf9exF8AE9wvyM=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goNdIdvxyYEbb9pLXYvusZmWaw/jn3nr
1GE1rRbOn3I7cMmxK31wvvHvgwl6z6fB+cuvct2Lt5sH53duMPiaLbUYzj+e
PEdr8cVlcH7j+77ltTdWwfkHEm9Gd59ZB+cfUdgk72W3Ec5/9sfKVMFuM5x/
lj/l0WfprXD+N1FL7cQP2+D82I6L4gve7EC4x5Brzp1ju+D8T25sR16d2APn
z/Nf1z7p4D44v8O9+qO0zwE4P0GWsTDc+yCcP4svfM9Ey0Nw/uetfTe3WB+G
89+GzTmiYnkEzvcUrqqerHoU4b9WS5bXqsfg/EXCJyMcRY/D+Yqz9aqf/Efw
998ozS/4dwLBN+zV//36JJx/z6HtYN7bUwj/eIYq6r86DecfzP3i8+7qGTif
2aPUa9rVs4j4sz0mbHvkHJz/RuftKoN15+F8jZe/OtnCLsD53Z7pKiVnEPx/
LUfUr/lchPOVznFO3H4EwRcTsUq0t7oE50uZRs/avRPBP5+cYrnd4DIiveXG
OS7fiOBrljhvsDW4Aufndwi0Bi9D8I+WnzsUq3YVkX5LStKez0Xwl+SxFooL
X0O437n9ifUkBF9Z7ePe+xzX4fw84b5T4t4I/k4G7ev+vQg+ABBLml8=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goNdc32Jfvbmm/ZS16J7bKbl2sP4Z946
dVhNq4Xzp9wOXHLsSh+cb/z7YILe82lw/vKrXPfi7ebB+Z0bDL5mSy2G848n
z9FafHEZnN/4vm957Y1VcP6BxJvR3WfWwflHFDbJe9lthPOf/bEyVbDbDOef
5U959Fl6K5z/TdRSO/HDNjg/tuOi+II3OxDuMeSac+fYLjj/kxvbkVcn9sD5
8/zXtU86uA/O73Cv/ijtcwDOT5BlLAz3Pgjnz+IL3zPR8hCc/3lr380t1ofh
/Ldhc46oWB6B8z2Fq6onqx5F+K/VkuW16jE4f5HwyQhH0eNwvuJsveon/xH8
/TdK8wv+nUDwDXv1f78+Ceffc2g7mPf2FMI/nqGK+q9Ow/kHc7/4vLt6Bs5n
9ij1mnb1LCL+bI8J2x45B+e/0Xm7ymDdeThf4+WvTrawC3B+t2e6SskZBP9f
yxH1az4X4Xylc5wTtx9B8MVErBLtrS7B+VKm0bN270TwzyenWG43uIxIb7lx
jss3IviaJc4bbA2uwPn5HQKtwcsQ/KPl5w7Fql1FpN+SkrTncxH8JXmsheLC
1xDud25/Yj0JwVdW+7j3Psd1OD9PuO+UuDeCv5NB+7p/L4IPAPbdlx8=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goOd+rwryyS33rSXuhbdYzMt1x7GP/PW
qcNqWi2cP+V24JJjV/rgfOPfBxP0nk+D85df5boXbzcPzu/cYPA1W2oxnH88
eY7W4ovL4PzG933La2+sgvMPJN6M7j6zDs4/orBJ3stuI5z/7I+VqYLdZjj/
LH/Ko8/SW+H8b6KW2okftsH5sR0XxRe82YFwjyHXnDvHdsH5n9zYjrw6sQfO
n+e/rn3SwX1wfod79UdpnwNwfoIsY2G490E4fxZf+J6Jlofg/M9b+25usT4M
578Nm3NExfIInO8pXFU9WfUown+tliyvVY/B+YuET0Y4ih6H8xVn61U/+Y/g
779Rml/w7wSCb9ir//v1STj/nkPbwby3pxD+8QxV1H91Gs4/mPvF593VM3A+
s0ep17SrZxHxZ3tM2PbIOTj/jc7bVQbrzsP5Gi9/dbKFXYDzuz3TVUrOIPj/
Wo6oX/O5COcrneOcuP0Igi8mYpVob3UJzpcyjZ61eyeCfz45xXK7wWVEesuN
c1y+EcHXLHHeYGtwBc7P7xBoDV6G4B8tP3coVu0qIv2WlKQ9n4vgL8ljLRQX
voZwv3P7E+tJCL6y2se99zmuw/l5wn2nxL0R/J0M2tf9exF8ADAcpic=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goNdkS7X5qnbbtpLXYvusZmWaw/jn3nr
1GE1rRbOn3I7cMmxK31wvvHvgwl6z6fB+cuvct2Lt5sH53duMPiaLbUYzj+e
PEdr8cVlcH7j+77ltTdWwfkHEm9Gd59ZB+cfUdgk72W3Ec5/9sfKVMFuM5x/
lj/l0WfprXD+N1FL7cQP2+D82I6L4gve7EC4x5Brzp1ju+D8T25sR16d2APn
z/Nf1z7p4D44v8O9+qO0zwE4P0GWsTDc+yCcP4svfM9Ey0Nw/uetfTe3WB+G
89+GzTmiYnkEzvcUrqqerHoU4b9WS5bXqsfg/EXCJyMcRY/D+Yqz9aqf/Efw
998ozS/4dwLBN+zV//36JJx/z6HtYN7bUwj/eIYq6r86DecfzP3i8+7qGTif
2aPUa9rVs4j4sz0mbHvkHJz/RuftKoN15+F8jZe/OtnCLsD53Z7pKiVnEPx/
LUfUr/lchPOVznFO3H4EwRcTsUq0t7oE50uZRs/avRPBP5+cYrnd4DIiveXG
OS7fiOBrljhvsDW4Aufndwi0Bi9D8I+WnzsUq3YVkX5LStKez0Xwl+SxFooL
X0O437n9ifUkBF9Z7ePe+xzX4fw84b5T4t4I/k4G7ev+vQg+AH5ykW8=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goPdZAnRv0+337SXuhbdYzMt1x7GP/PW
qcNqWi2cP+V24JJjV/rgfOPfBxP0nk+D85df5boXbzcPzu/cYPA1W2oxnH88
eY7W4ovL4PzG933La2+sgvMPJN6M7j6zDs4/orBJ3stuI5z/7I+VqYLdZjj/
LH/Ko8/SW+H8b6KW2okftsH5sR0XxRe82YFwjyHXnDvHdsH5n9zYjrw6sQfO
n+e/rn3SwX1wfod79UdpnwNwfoIsY2G490E4fxZf+J6Jlofg/M9b+25usT4M
578Nm3NExfIInO8pXFU9WfUown+tliyvVY/B+YuET0Y4ih6H8xVn61U/+Y/g
779Rml/w7wSCb9ir//v1STj/nkPbwby3pxD+8QxV1H91Gs4/mPvF593VM3A+
s0ep17SrZxHxZ3tM2PbIOTj/jc7bVQbrzsP5Gi9/dbKFXYDzuz3TVUrOIPj/
Wo6oX/O5COcrneOcuP0Igi8mYpVob3UJzpcyjZ61eyeCfz45xXK7wWVEesuN
c1y+EcHXLHHeYGtwBc7P7xBoDV6G4B8tP3coVu0qIv2WlKQ9n4vgL8ljLRQX
voZwv3P7E+tJCL6y2se99zmuw/l5wn2nxL0R/J0M2tf9exF8ANOItZc=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goPdoqMH19zbcdNe6lp0j820XHsY/8xb
pw6rabVw/pTbgUuOXemD841/H0zQez4Nzl9+letevN08OL9zg8HXbKnFcP7x
5Dlaiy8ug/Mb3/ctr72xCs4/kHgzuvvMOjj/iMImeS+7jXD+sz9Wpgp2m+H8
s/wpjz5Lb4Xzv4laaid+2Abnx3ZcFF/wZgfCPYZcc+4c2wXnf3JjO/LqxB44
f57/uvZJB/fB+R3u1R+lfQ7A+QmyjIXh3gfh/Fl84XsmWh6C8z9v7bu5xfow
nP82bM4RFcsjcL6ncFX1ZNWjCP+1WrK8Vj0G5y8SPhnhKHoczlecrVf95D+C
v/9GaX7BvxMIvmGv/u/XJ+H8ew5tB/PenkL4xzNUUf/VaTj/YO4Xn3dXz8D5
zB6lXtOunkXEn+0xYdsj5+D8NzpvVxmsOw/na7z81ckWdgHO7/ZMVyk5g+D/
azmifs3nIpyvdI5z4vYjCL6YiFWivdUlOF/KNHrW7p0I/vnkFMvtBpcR6S03
znH5RgRfs8R5g63BFTg/v0OgNXgZgn+0/NyhWLWriPRbUpL2fC6CvySPtVBc
+BrC/c7tT6wnIfjKah/33ue4DufnCfedEvdG8HcyaF/370XwAcJS7Qs=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goPdsTuRTzbvvGkvdS26x2Zarj2Mf+at
U4fVtFo4f8rtwCXHrvTB+ca/DyboPZ8G5y+/ynUv3m4enN+5weBrttRiOP94
8hytxReXwfmN7/uW195YBecfSLwZ3X1mHZx/RGGTvJfdRjj/2R8rUwW7zXD+
Wf6UR5+lt8L530QttRM/bIPzYzsuii94swPhHkOuOXeO7YLzP7mxHXl1Yg+c
P89/Xfukg/vg/A736o/SPgfg/ARZxsJw74Nw/iy+8D0TLQ/B+Z+39t3cYn0Y
zn8bNueIiuURON9TuKp6supRhP9aLVleqx6D8xcJn4xwFD0O5yvO1qt+8h/B
33+jNL/g3wkE37BX//frk3D+PYe2g3lvTyH84xmqqP/qNJx/MPeLz7urZ+B8
Zo9Sr2lXzyLiz/aYsO2Rc3D+G523qwzWnYfzNV7+6mQLuwDnd3umq5ScQfD/
tRxRv+ZzEc5XOsc5cfsRBF9MxCrR3uoSnC9lGj1r904E/3xyiuV2g8uI9JYb
57h8I4KvWeK8wdbgCpyf3yHQGrwMwT9afu5QrNpVRPotKUl7PhfBX5LHWigu
fA3hfuf2J9aTEHxltY9773Nch/PzhPtOiXsj+DsZtK/79yL4AKuc5r8=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goPdxrTvRtN23bSXuhbdYzMt1x7GP/PW
qcNqWi2cP+V24JJjV/rgfOPfBxP0nk+D85df5boXbzcPzu/cYPA1W2oxnH88
eY7W4ovL4PzG933La2+sgvMPJN6M7j6zDs4/orBJ3stuI5z/7I+VqYLdZjj/
LH/Ko8/SW+H8b6KW2okftsH5sR0XxRe82YFwjyHXnDvHdsH5n9zYjrw6sQfO
n+e/rn3SwX1wfod79UdpnwNwfoIsY2G490E4fxZf+J6Jlofg/M9b+25usT4M
578Nm3NExfIInO8pXFU9WfUown+tliyvVY/B+YuET0Y4ih6H8xVn61U/+Y/g
779Rml/w7wSCb9ir//v1STj/nkPbwby3pxD+8QxV1H91Gs4/mPvF593VM3A+
s0ep17SrZxHxZ3tM2PbIOTj/jc7bVQbrzsP5Gi9/dbKFXYDzuz3TVUrOIPj/
Wo6oX/O5COcrneOcuP0Igi8mYpVob3UJzpcyjZ61eyeCfz45xXK7wWVEesuN
c1y+EcHXLHHeYGtwBc7P7xBoDV6G4B8tP3coVu0qIv2WlKQ9n4vgL8ljLRQX
voZwv3P7E+tJCL6y2se99zmuw/l5wn2nxL0R/J0M2tf9exF8AElVwMM=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goPdpskf7kbtvmkvdS26x2Zarj2Mf+at
U4fVtFo4f8rtwCXHrvTB+ca/DyboPZ8G5y+/ynUv3m4enN+5weBrttRiOP94
8hytxReXwfmN7/uW195YBecfSLwZ3X1mHZx/RGGTvJfdRjj/2R8rUwW7zXD+
Wf6UR5+lt8L530QttRM/bIPzYzsuii94swPhHkOuOXeO7YLzP7mxHXl1Yg+c
P89/Xfukg/vg/A736o/SPgfg/ARZxsJw74Nw/iy+8D0TLQ/B+Z+39t3cYn0Y
zn8bNueIiuURON9TuKp6supRhP9aLVleqx6D8xcJn4xwFD0O5yvO1qt+8h/B
33+jNL/g3wkE37BX//frk3D+PYe2g3lvTyH84xmqqP/qNJx/MPeLz7urZ+B8
Zo9Sr2lXzyLiz/aYsO2Rc3D+G523qwzWnYfzNV7+6mQLuwDnd3umq5ScQfD/
tRxRv+ZzEc5XOsc5cfsRBF9MxCrR3uoSnC9lGj1r904E/3xyiuV2g8uI9JYb
57h8I4KvWeK8wdbgCpyf3yHQGrwMwT9afu5QrNpVRPotKUl7PhfBX5LHWigu
fA3hfuf2J9aTEHxltY9773Nch/PzhPtOiXsj+DsZtK/79yL4AOTw328=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goPd5b2O9Yt337SXuhbdYzMt1x7GP/PW
qcNqWi2cP+V24JJjV/rgfOPfBxP0nk+D85df5boXbzcPzu/cYPA1W2oxnH88
eY7W4ovL4PzG933La2+sgvMPJN6M7j6zDs4/orBJ3stuI5z/7I+VqYLdZjj/
LH/Ko8/SW+H8b6KW2okftsH5sR0XxRe82YFwjyHXnDvHdsH5n9zYjrw6sQfO
n+e/rn3SwX1wfod79UdpnwNwfoIsY2G490E4fxZf+J6Jlofg/M9b+25usT4M
578Nm3NExfIInO8pXFU9WfUown+tliyvVY/B+YuET0Y4ih6H8xVn61U/+Y/g
779Rml/w7wSCb9ir//v1STj/nkPbwby3pxD+8QxV1H91Gs4/mPvF593VM3A+
s0ep17SrZxHxZ3tM2PbIOTj/jc7bVQbrzsP5Gi9/dbKFXYDzuz3TVUrOIPj/
Wo6oX/O5COcrneOcuP0Igi8mYpVob3UJzpcyjZ61eyeCfz45xXK7wWVEesuN
c1y+EcHXLHHeYGtwBc7P7xBoDV6G4B8tP3coVu0qIv2WlKQ9n4vgL8ljLRQX
voZwv3P7E+tJCL6y2se99zmuw/l5wn2nxL0R/J0M2tf9exF8AC6vxts=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goNdSckxBZ/dN+2lrkX32EzLtYfxz7x1
6rCaVgvnT7kduOTYlT443/j3wQS959Pg/OVXue7F282D8zs3GHzNlloM5x9P
nqO1+OIyOL/xfd/y2hur4PwDiTeju8+sg/OPKGyS97LbCOc/+2NlqmC3Gc4/
y5/y6LP0Vjj/m6ilduKHbXB+bMdF8QVvdiDcY8g1586xXXD+Jze2I69O7IHz
5/mva590cB+c3+Fe/VHa5wCcnyDLWBjufRDOn8UXvmei5SE4//PWvptbrA/D
+W/D5hxRsTwC53sKV1VPVj2K8F+rJctr1WNw/iLhkxGOosfhfMXZetVP/iP4
+2+U5hf8O4HgG/bq/359Es6/59B2MO/tKYR/PEMV9V+dhvMP5n7xeXf1DJzP
7FHqNe3qWUT82R4Ttj1yDs5/o/N2lcG683C+xstfnWxhF+D8bs90lZIzCP6/
liPq13wuwvlK5zgnbj+C4IuJWCXaW12C86VMo2ft3ongn09OsdxucBmR3nLj
HJdvRPA1S5w32BpcgfPzOwRag5ch+EfLzx2KVbuKSL8lJWnP5yL4S/JYC8WF
ryHc79z+xHoSgq+s9nHvfY7rcH6ecN8pcW8EfyeD9nX/XgQfAONXmsc=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goMdn2Hjjis7b9pLXYvusZmWaw/jn3nr
1GE1rRbOn3I7cMmxK31wvvHvgwl6z6fB+cuvct2Lt5sH53duMPiaLbUYzj+e
PEdr8cVlcH7j+77ltTdWwfkHEm9Gd59ZB+cfUdgk72W3Ec5/9sfKVMFuM5x/
lj/l0WfprXD+N1FL7cQP2+D82I6L4gve7EC4x5Brzp1ju+D8T25sR16d2APn
z/Nf1z7p4D44v8O9+qO0zwE4P0GWsTDc+yCcP4svfM9Ey0Nw/uetfTe3WB+G
89+GzTmiYnkEzvcUrqqerHoU4b9WS5bXqsfg/EXCJyMcRY/D+Yqz9aqf/Efw
998ozS/4dwLBN+zV//36JJx/z6HtYN7bUwj/eIYq6r86DecfzP3i8+7qGTif
2aPUa9rVs4j4sz0mbHvkHJz/RuftKoN15+F8jZe/OtnCLsD53Z7pKiVnEPx/
LUfUr/lchPOVznFO3H4EwRcTsUq0t7oE50uZRs/avRPBP5+cYrnd4DIiveXG
OS7fiOBrljhvsDW4Aufndwi0Bi9D8I+WnzsUq3YVkX5LStKez0Xwl+SxFooL
X0O437n9ifUkBF9Z7ePe+xzX4fw84b5T4t4I/k4G7ev+vQg+ABzTpIc=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goMds6LYv8fbb9pLXYvusZmWaw/jn3nr
1GE1rRbOn3I7cMmxK31wvvHvgwl6z6fB+cuvct2Lt5sH53duMPiaLbUYzj+e
PEdr8cVlcH7j+77ltTdWwfkHEm9Gd59ZB+cfUdgk72W3Ec5/9sfKVMFuM5x/
lj/l0WfprXD+N1FL7cQP2+D82I6L4gve7EC4x5Brzp1ju+D8T25sR16d2APn
z/Nf1z7p4D44v8O9+qO0zwE4P0GWsTDc+yCcP4svfM9Ey0Nw/uetfTe3WB+G
89+GzTmiYnkEzvcUrqqerHoU4b9WS5bXqsfg/EXCJyMcRY/D+Yqz9aqf/Efw
998ozS/4dwLBN+zV//36JJx/z6HtYN7bUwj/eIYq6r86DecfzP3i8+7qGTif
2aPUa9rVs4j4sz0mbHvkHJz/RuftKoN15+F8jZe/OtnCLsD53Z7pKiVnEPx/
LUfUr/lchPOVznFO3H4EwRcTsUq0t7oE50uZRs/avRPBP5+cYrnd4DIiveXG
OS7fiOBrljhvsDW4Aufndwi0Bi9D8I+WnzsUq3YVkX5LStKez0Xwl+SxFooL
X0O437n9ifUkBF9Z7ePe+xzX4fw84b5T4t4I/k4G7ev+vQg+AEA8mis=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goPdkgeax05tu2kvdS26x2Zarj2Mf+at
U4fVtFo4f8rtwCXHrvTB+ca/DyboPZ8G5y+/ynUv3m4enN+5weBrttRiOP94
8hytxReXwfmN7/uW195YBecfSLwZ3X1mHZx/RGGTvJfdRjj/2R8rUwW7zXD+
Wf6UR5+lt8L530QttRM/bIPzYzsuii94swPhHkOuOXeO7YLzP7mxHXl1Yg+c
P89/Xfukg/vg/A736o/SPgfg/ARZxsJw74Nw/iy+8D0TLQ/B+Z+39t3cYn0Y
zn8bNueIiuURON9TuKp6supRhP9aLVleqx6D8xcJn4xwFD0O5yvO1qt+8h/B
33+jNL/g3wkE37BX//frk3D+PYe2g3lvTyH84xmqqP/qNJx/MPeLz7urZ+B8
Zo9Sr2lXzyLiz/aYsO2Rc3D+G523qwzWnYfzNV7+6mQLuwDnd3umq5ScQfD/
tRxRv+ZzEc5XOsc5cfsRBF9MxCrR3uoSnC9lGj1r904E/3xyiuV2g8uI9JYb
57h8I4KvWeK8wdbgCpyf3yHQGrwMwT9afu5QrNpVRPotKUl7PhfBX5LHWigu
fA3hfuf2J9aTEHxltY9773Nch/PzhPtOiXsj+DsZtK/79yL4ALM91N8=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goOdwvfiwvJtN+2lrkX32EzLtYfxz7x1
6rCaVgvnT7kduOTYlT443/j3wQS959Pg/OVXue7F282D8zs3GHzNlloM5x9P
nqO1+OIyOL/xfd/y2hur4PwDiTeju8+sg/OPKGyS97LbCOc/+2NlqmC3Gc4/
y5/y6LP0Vjj/m6ilduKHbXB+bMdF8QVvdiDcY8g1586xXXD+Jze2I69O7IHz
5/mva590cB+c3+Fe/VHa5wCcnyDLWBjufRDOn8UXvmei5SE4//PWvptbrA/D
+W/D5hxRsTwC53sKV1VPVj2K8F+rJctr1WNw/iLhkxGOosfhfMXZetVP/iP4
+2+U5hf8O4HgG/bq/359Es6/59B2MO/tKYR/PEMV9V+dhvMP5n7xeXf1DJzP
7FHqNe3qWUT82R4Ttj1yDs5/o/N2lcG683C+xstfnWxhF+D8bs90lZIzCP6/
liPq13wuwvlK5zgnbj+C4IuJWCXaW12C86VMo2ft3ongn09OsdxucBmR3nLj
HJdvRPA1S5w32BpcgfPzOwRag5ch+EfLzx2KVbuKSL8lJWnP5yL4S/JYC8WF
ryHc79z+xHoSgq+s9nHvfY7rcH6ecN8pcW8EfyeD9nX/XgQfAAJfq6M=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goOdMe+NlSu23bSXuhbdYzMt1x7GP/PW
qcNqWi2cP+V24JJjV/rgfOPfBxP0nk+D85df5boXbzcPzu/cYPA1W2oxnH88
eY7W4ovL4PzG933La2+sgvMPJN6M7j6zDs4/orBJ3stuI5z/7I+VqYLdZjj/
LH/Ko8/SW+H8b6KW2okftsH5sR0XxRe82YFwjyHXnDvHdsH5n9zYjrw6sQfO
n+e/rn3SwX1wfod79UdpnwNwfoIsY2G490E4fxZf+J6Jlofg/M9b+25usT4M
578Nm3NExfIInO8pXFU9WfUown+tliyvVY/B+YuET0Y4ih6H8xVn61U/+Y/g
779Rml/w7wSCb9ir//v1STj/nkPbwby3pxD+8QxV1H91Gs4/mPvF593VM3A+
s0ep17SrZxHxZ3tM2PbIOTj/jc7bVQbrzsP5Gi9/dbKFXYDzuz3TVUrOIPj/
Wo6oX/O5COcrneOcuP0Igi8mYpVob3UJzpcyjZ61eyeCfz45xXK7wWVEesuN
c1y+EcHXLHHeYGtwBc7P7xBoDV6G4B8tP3coVu0qIv2WlKQ9n4vgL8ljLRQX
voZwv3P7E+tJCL6y2se99zmuw/l5wn2nxL0R/J0M2tf9exF8AMYzqc8=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goOdqW1rKu/2m/ZS16J7bKbl2sP4Z946
dVhNq4Xzp9wOXHLsSh+cb/z7YILe82lw/vKrXPfi7ebB+Z0bDL5mSy2G848n
z9FafHEZnN/4vm957Y1VcP6BxJvR3WfWwflHFDbJe9lthPOf/bEyVbDbDOef
5U959Fl6K5z/TdRSO/HDNjg/tuOi+II3OxDuMeSac+fYLjj/kxvbkVcn9sD5
8/zXtU86uA/O73Cv/ijtcwDOT5BlLAz3Pgjnz+IL3zPR8hCc/3lr380t1ofh
/Ldhc46oWB6B8z2Fq6onqx5F+K/VkuW16jE4f5HwyQhH0eNwvuJsveon/xH8
/TdK8wv+nUDwDXv1f78+Ceffc2g7mPf2FMI/nqGK+q9Ow/kHc7/4vLt6Bs5n
9ij1mnb1LCL+bI8J2x45B+e/0Xm7ymDdeThf4+WvTrawC3B+t2e6SskZBP9f
yxH1az4X4Xylc5wTtx9B8MVErBLtrS7B+VKm0bN270TwzyenWG43uIxIb7lx
jss3IviaJc4bbA2uwPn5HQKtwcsQ/KPl5w7Fql1FpN+SkrTncxH8JXmsheLC
1xDud25/Yj0JwVdW+7j3Psd1OD9PuO+UuDeCv5NB+7p/L4IPAFQqdgM=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goNddufMwrztN+2lrkX32EzLtYfxz7x1
6rCaVgvnT7kduOTYlT443/j3wQS959Pg/OVXue7F282D8zs3GHzNlloM5x9P
nqO1+OIyOL/xfd/y2hur4PwDiTeju8+sg/OPKGyS97LbCOc/+2NlqmC3Gc4/
y5/y6LP0Vjj/m6ilduKHbXB+bMdF8QVvdiDcY8g1586xXXD+Jze2I69O7IHz
5/mva590cB+c3+Fe/VHa5wCcnyDLWBjufRDOn8UXvmei5SE4//PWvptbrA/D
+W/D5hxRsTwC53sKV1VPVj2K8F+rJctr1WNw/iLhkxGOosfhfMXZetVP/iP4
+2+U5hf8O4HgG/bq/359Es6/59B2MO/tKYR/PEMV9V+dhvMP5n7xeXf1DJzP
7FHqNe3qWUT82R4Ttj1yDs5/o/N2lcG683C+xstfnWxhF+D8bs90lZIzCP6/
liPq13wuwvlK5zgnbj+C4IuJWCXaW12C86VMo2ft3ongn09OsdxucBmR3nLj
HJdvRPA1S5w32BpcgfPzOwRag5ch+EfLzx2KVbuKSL8lJWnP5yL4S/JYC8WF
ryHc79z+xHoSgq+s9nHvfY7rcH6ecN8pcW8EfyeD9nX/XgQfAGj1qp8=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goPdnbUv7vDsuGkvdS26x2Zarj2Mf+at
U4fVtFo4f8rtwCXHrvTB+ca/DyboPZ8G5y+/ynUv3m4enN+5weBrttRiOP94
8hytxReXwfmN7/uW195YBecfSLwZ3X1mHZx/RGGTvJfdRjj/2R8rUwW7zXD+
Wf6UR5+lt8L530QttRM/bIPzYzsuii94swPhHkOuOXeO7YLzP7mxHXl1Yg+c
P89/Xfukg/vg/A736o/SPgfg/ARZxsJw74Nw/iy+8D0TLQ/B+Z+39t3cYn0Y
zn8bNueIiuURON9TuKp6supRhP9aLVleqx6D8xcJn4xwFD0O5yvO1qt+8h/B
33+jNL/g3wkE37BX//frk3D+PYe2g3lvTyH84xmqqP/qNJx/MPeLz7urZ+B8
Zo9Sr2lXzyLiz/aYsO2Rc3D+G523qwzWnYfzNV7+6mQLuwDnd3umq5ScQfD/
tRxRv+ZzEc5XOsc5cfsRBF9MxCrR3uoSnC9lGj1r904E/3xyiuV2g8uI9JYb
57h8I4KvWeK8wdbgCpyf3yHQGrwMwT9afu5QrNpVRPotKUl7PhfBX5LHWigu
fA3hfuf2J9aTEHxltY9773Nch/PzhPtOiXsj+DsZtK/79yL4AOKH2vc=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goMdS7RAKv/Om/ZS16J7bKbl2sP4Z946
dVhNq4Xzp9wOXHLsSh+cb/z7YILe82lw/vKrXPfi7ebB+Z0bDL5mSy2G848n
z9FafHEZnN/4vm957Y1VcP6BxJvR3WfWwflHFDbJe9lthPOf/bEyVbDbDOef
5U959Fl6K5z/TdRSO/HDNjg/tuOi+II3OxDuMeSac+fYLjj/kxvbkVcn9sD5
8/zXtU86uA/O73Cv/ijtcwDOT5BlLAz3Pgjnz+IL3zPR8hCc/3lr380t1ofh
/Ldhc46oWB6B8z2Fq6onqx5F+K/VkuW16jE4f5HwyQhH0eNwvuJsveon/xH8
/TdK8wv+nUDwDXv1f78+Ceffc2g7mPf2FMI/nqGK+q9Ow/kHc7/4vLt6Bs5n
9ij1mnb1LCL+bI8J2x45B+e/0Xm7ymDdeThf4+WvTrawC3B+t2e6SskZBP9f
yxH1az4X4Xylc5wTtx9B8MVErBLtrS7B+VKm0bN270TwzyenWG43uIxIb7lx
jss3IviaJc4bbA2uwPn5HQKtwcsQ/KPl5w7Fql1FpN+SkrTncxH8JXmsheLC
1xDud25/Yj0JwVdW+7j3Psd1OD9PuO+UuDeCv5NB+7p/L4IPAOVeWzM=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goNdRY7CCqldN+2lrkX32EzLtYfxz7x1
6rCaVgvnT7kduOTYlT443/j3wQS959Pg/OVXue7F282D8zs3GHzNlloM5x9P
nqO1+OIyOL/xfd/y2hur4PwDiTeju8+sg/OPKGyS97LbCOc/+2NlqmC3Gc4/
y5/y6LP0Vjj/m6ilduKHbXB+bMdF8QVvdiDcY8g1586xXXD+Jze2I69O7IHz
5/mva590cB+c3+Fe/VHa5wCcnyDLWBjufRDOn8UXvmei5SE4//PWvptbrA/D
+W/D5hxRsTwC53sKV1VPVj2K8F+rJctr1WNw/iLhkxGOosfhfMXZetVP/iP4
+2+U5hf8O4HgG/bq/359Es6/59B2MO/tKYR/PEMV9V+dhvMP5n7xeXf1DJzP
7FHqNe3qWUT82R4Ttj1yDs5/o/N2lcG683C+xstfnWxhF+D8bs90lZIzCP6/
liPq13wuwvlK5zgnbj+C4IuJWCXaW12C86VMo2ft3ongn09OsdxucBmR3nLj
HJdvRPA1S5w32BpcgfPzOwRag5ch+EfLzx2KVbuKSL8lJWnP5yL4S/JYC8WF
ryHc79z+xHoSgq+s9nHvfY7rcH6ecN8pcW8EfyeD9nX/XgQfAO8HiYM=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goPdFQEftSu7btpLXYvusZmWaw/jn3nr
1GE1rRbOn3I7cMmxK31wvvHvgwl6z6fB+cuvct2Lt5sH53duMPiaLbUYzj+e
PEdr8cVlcH7j+77ltTdWwfkHEm9Gd59ZB+cfUdgk72W3Ec5/9sfKVMFuM5x/
lj/l0WfprXD+N1FL7cQP2+D82I6L4gve7EC4x5Brzp1ju+D8T25sR16d2APn
z/Nf1z7p4D44v8O9+qO0zwE4P0GWsTDc+yCcP4svfM9Ey0Nw/uetfTe3WB+G
89+GzTmiYnkEzvcUrqqerHoU4b9WS5bXqsfg/EXCJyMcRY/D+Yqz9aqf/Efw
998ozS/4dwLBN+zV//36JJx/z6HtYN7bUwj/eIYq6r86DecfzP3i8+7qGTif
2aPUa9rVs4j4sz0mbHvkHJz/RuftKoN15+F8jZe/OtnCLsD53Z7pKiVnEPx/
LUfUr/lchPOVznFO3H4EwRcTsUq0t7oE50uZRs/avRPBP5+cYrnd4DIiveXG
OS7fiOBrljhvsDW4Aufndwi0Bi9D8I+WnzsUq3YVkX5LStKez0Xwl+SxFooL
X0O437n9ifUkBF9Z7ePe+xzX4fw84b5T4t4I/k4G7ev+vQg+AKvendM=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goNdhUXXio+7btpLXYvusZmWaw/jn3nr
1GE1rRbOn3I7cMmxK31wvvHvgwl6z6fB+cuvct2Lt5sH53duMPiaLbUYzj+e
PEdr8cVlcH7j+77ltTdWwfkHEm9Gd59ZB+cfUdgk72W3Ec5/9sfKVMFuM5x/
lj/l0WfprXD+N1FL7cQP2+D82I6L4gve7EC4x5Brzp1ju+D8T25sR16d2APn
z/Nf1z7p4D44v8O9+qO0zwE4P0GWsTDc+yCcP4svfM9Ey0Nw/uetfTe3WB+G
89+GzTmiYnkEzvcUrqqerHoU4b9WS5bXqsfg/EXCJyMcRY/D+Yqz9aqf/Efw
998ozS/4dwLBN+zV//36JJx/z6HtYN7bUwj/eIYq6r86DecfzP3i8+7qGTif
2aPUa9rVs4j4sz0mbHvkHJz/RuftKoN15+F8jZe/OtnCLsD53Z7pKiVnEPx/
LUfUr/lchPOVznFO3H4EwRcTsUq0t7oE50uZRs/avRPBP5+cYrnd4DIiveXG
OS7fiOBrljhvsDW4Aufndwi0Bi9D8I+WnzsUq3YVkX5LStKez0Xwl+SxFooL
X0O437n9ifUkBF9Z7ePe+xzX4fw84b5T4t4I/k4G7ev+vQg+AO9/wCc=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goPdjKfnOy123bSXuhbdYzMt1x7GP/PW
qcNqWi2cP+V24JJjV/rgfOPfBxP0nk+D85df5boXbzcPzu/cYPA1W2oxnH88
eY7W4ovL4PzG933La2+sgvMPJN6M7j6zDs4/orBJ3stuI5z/7I+VqYLdZjj/
LH/Ko8/SW+H8b6KW2okftsH5sR0XxRe82YFwjyHXnDvHdsH5n9zYjrw6sQfO
n+e/rn3SwX1wfod79UdpnwNwfoIsY2G490E4fxZf+J6Jlofg/M9b+25usT4M
578Nm3NExfIInO8pXFU9WfUown+tliyvVY/B+YuET0Y4ih6H8xVn61U/+Y/g
779Rml/w7wSCb9ir//v1STj/nkPbwby3pxD+8QxV1H91Gs4/mPvF593VM3A+
s0ep17SrZxHxZ3tM2PbIOTj/jc7bVQbrzsP5Gi9/dbKFXYDzuz3TVUrOIPj/
Wo6oX/O5COcrneOcuP0Igi8mYpVob3UJzpcyjZ61eyeCfz45xXK7wWVEesuN
c1y+EcHXLHHeYGtwBc7P7xBoDV6G4B8tP3coVu0qIv2WlKQ9n4vgL8ljLRQX
voZwv3P7E+tJCL6y2se99zmuw/l5wn2nxL0R/J0M2tf9exF8AH+zy+8=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnTMr1+m4goOd8U2nWtWdN+2lrkX32EzLtYfxz7x1
6rCaVgvnT7kduOTYlT443/j3wQS959Pg/OVXue7F282D8zs3GHzNlloM5x9P
nqO1+OIyOL/xfd/y2hur4PwDiTeju8+sg/OPKGyS97LbCOc/+2NlqmC3Gc4/
y5/y6LP0Vjj/m6ilduKHbXB+bMdF8QVvdiDcY8g1586xXXD+Jze2I69O7IHz
5/mva590cB+c3+Fe/VHa5wCcnyDLWBjufRDOn8UXvmei5SE4//PWvptbrA/D
+W/D5hxRsTwC53sKV1VPVj2K8F+rJctr1WNw/iLhkxGOosfhfMXZetVP/iP4
+2+U5hf8O4HgG/bq/359Es6/59B2MO/tKYR/PEMV9V+dhvMP5n7xeXf1DJzP
7FHqNe3qWUT82R4Ttj1yDs5/o/N2lcG683C+xstfnWxhF+D8bs90lZIzCP6/
liPq13wuwvlK5zgnbj+C4IuJWCXaW12C86VMo2ft3ongn09OsdxucBmR3nLj
HJdvRPA1S5w32BpcgfPzOwRag5ch+EfLzx2KVbuKSL8lJWnP5yL4S/JYC8WF
ryHc79z+xHoSgq+s9nHvfY7rcH6ecN8pcW8EfyeD9nX/XgQfAGatkdc=
       "]]},
     Annotation[#, "Charting`Private`Tag$507532#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.3428748216069941},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.368}, {0.3428748216069941, 0.4020775549642767}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8895277071352806`*^9, 3.927012512584054*^9, 3.9270125451524696`*^9, 
   3.9270128302158804`*^9, {3.927013195476603*^9, 3.927013208038921*^9}, 
   3.9270133271787806`*^9, {3.927013412959817*^9, 3.927013432881168*^9}, {
   3.9270134820215263`*^9, 3.92701351297443*^9}, {3.9270135462417903`*^9, 
   3.9270135835215387`*^9}, 3.927014724577352*^9},
 CellLabel->
  "Out[1300]=",ExpressionUUID->"6a3c39c5-2e3b-4aae-8139-f44314720bbe"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.889527690305747*^9, 
  3.889527728338578*^9},ExpressionUUID->"e283cfee-e807-442d-b162-\
6dbd5c1183ed"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.889527701605383*^9, 
  3.889527701605383*^9}},ExpressionUUID->"27c497d4-7358-4726-9bae-\
e304eb28d9a0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Last", "[", "th1f", "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.889527485215821*^9, {3.9270112790020037`*^9, 3.9270112836300383`*^9}, {
   3.9270113365466976`*^9, 3.9270113643712187`*^9}},
 CellLabel->
  "In[1285]:=",ExpressionUUID->"711e66a1-2d3c-43f7-8748-85e9739029a1"],

Cell[BoxData["0.403125022`"], "Output",
 CellChangeTimes->{
  3.889527486039837*^9, 3.8895276438292522`*^9, 3.9270112839666343`*^9, {
   3.927011342215057*^9, 3.927011364935812*^9}},
 CellLabel->
  "Out[1285]=",ExpressionUUID->"112be600-bda2-43b7-8f09-f5c6d57778d4"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9270113452687254`*^9, 
  3.9270113460610776`*^9}},ExpressionUUID->"30c354ea-0b14-41b8-85c1-\
1f3472115ae2"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9270113438212633`*^9, 
  3.927011347822093*^9}},ExpressionUUID->"8c524ddf-ee13-49fd-afe4-\
cb555449cdec"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.889526375636561*^9, 
  3.889526375636561*^9}},ExpressionUUID->"776069c3-24fc-40a7-8d10-\
e0c8d827f1a4"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.889244461307125*^9, 3.8892444764916334`*^9}, {
  3.889244524498309*^9, 3.8892445498431444`*^9}, {3.8892445891703434`*^9, 
  3.8892446323238344`*^9}, {3.8892450923905735`*^9, 3.8892451467216988`*^9}, {
  3.8892452046786423`*^9, 3.8892452938680773`*^9}, {3.8892458735253386`*^9, 
  3.889245895846159*^9}},ExpressionUUID->"0559e9a0-4b28-4821-814a-\
ec0db4bd68be"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8892446407394624`*^9, 3.889244671092688*^9}, {
   3.88924494545497*^9, 3.8892449739461966`*^9}, {3.889245008085657*^9, 
   3.889245009424011*^9}, 3.8892450779733715`*^9, {3.8895243036182365`*^9, 
   3.8895243037752757`*^9}, {3.889524386440355*^9, 3.8895243913367987`*^9}, {
   3.8895244216160364`*^9, 3.8895244659263873`*^9}, {3.8895249467377143`*^9, 
   3.889524951190217*^9}},ExpressionUUID->"63ecebc0-b322-48c3-b987-\
186627af7305"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.889524030114846*^9, 3.8895240721985226`*^9}, {
   3.889524128116679*^9, 3.8895241463284874`*^9}, 
   3.8895242352765675`*^9},ExpressionUUID->"80b3a782-8c2e-440b-9d37-\
9fbdb966c2bc"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8895242341151752`*^9, 
  3.8895242341151752`*^9}},ExpressionUUID->"e0e7fb3f-cffd-43ff-b89d-\
9a2ba8f59b48"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8895242272346473`*^9, 3.889524231593604*^9}},
 NumberMarks->False,ExpressionUUID->"a256798b-36ac-4818-a44e-e3b811ab2588"]
},
WindowSize->{1142, 580},
WindowMargins->{{-1624, Automatic}, {Automatic, 179}},
TaggingRules->Association["TryRealOnly" -> False],
Magnification:>1.1 Inherited,
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"305a8b9d-cc81-4f3a-9cd9-8b0a6ea091d6"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 40004, 1137, 3446, "Input",ExpressionUUID->"4d91963f-1581-4f39-bb10-c9410bd3695b"],
Cell[40587, 1161, 956, 14, 37, "Output",ExpressionUUID->"4209acb4-bc4f-4728-a7bb-62322d394a44"],
Cell[41546, 1177, 986, 15, 37, "Output",ExpressionUUID->"02eeaccd-95a1-4193-b4dd-529be0e49b6d"],
Cell[42535, 1194, 3425, 63, 122, "Output",ExpressionUUID->"5bbfa368-676f-4959-a0f8-96f97b4f878e"],
Cell[45963, 1259, 1049, 19, 30, "Message",ExpressionUUID->"104266f4-cc79-4f9f-90fa-083c56d1ef78"],
Cell[47015, 1280, 1051, 19, 30, "Message",ExpressionUUID->"84a9111e-06a5-4389-9c6f-f1c1eebff73e"],
Cell[48069, 1301, 23256, 496, 277, "Output",ExpressionUUID->"4adfb04e-c55b-40b2-90ae-0e64ff451dd1"],
Cell[71328, 1799, 26787, 531, 261, "Output",ExpressionUUID->"021efa17-2a7e-4fd4-98ae-28caae8758b9"],
Cell[98118, 2332, 23787, 481, 261, "Output",ExpressionUUID->"e09af0d0-1c25-47cc-9941-f8043574ffff"],
Cell[121908, 2815, 23785, 481, 261, "Output",ExpressionUUID->"4f249f3b-3488-4f8f-a2a5-82ca2a95fd7d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145730, 3301, 152, 3, 33, "Input",ExpressionUUID->"d42272c0-af5f-4238-9992-d5996e6d2c1f"],
Cell[145885, 3306, 215, 4, 37, "Output",ExpressionUUID->"bbce83ff-900c-4bef-923e-fca1e9336dc6"],
Cell[146103, 3312, 849, 15, 30, "Message",ExpressionUUID->"e5e7f588-9c84-4a58-a42f-a4badbd5d01c"],
Cell[146955, 3329, 1343, 23, 101, "Output",ExpressionUUID->"017f2649-5056-4149-9672-f3bf97a40373"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148335, 3357, 162, 3, 33, "Input",ExpressionUUID->"5f7e1c1c-e1d5-4079-b401-a1ba75697335"],
Cell[148500, 3362, 362, 6, 37, "Output",ExpressionUUID->"5c096e85-e4ce-40b0-b124-fd8c60c86c9e"]
}, Open  ]],
Cell[148877, 3371, 357, 6, 33, "Input",ExpressionUUID->"537e138a-67c3-4c82-b5ce-a0dd4aff9706"],
Cell[CellGroupData[{
Cell[149259, 3381, 359, 7, 33, "Input",ExpressionUUID->"76de6ee3-ecef-47b2-a915-748b78998430"],
Cell[149621, 3390, 164206, 2743, 71, "Output",ExpressionUUID->"d455aa5c-e4f0-422f-8c62-f6282666dd5b"]
}, Open  ]],
Cell[313842, 6136, 251, 4, 33, "Input",ExpressionUUID->"2d14e61d-972a-4ccd-bfb3-7ca1f1f89ba6"],
Cell[CellGroupData[{
Cell[314118, 6144, 266, 7, 33, "Input",ExpressionUUID->"dc309e5e-6e97-4492-909b-f98b013afb08"],
Cell[314387, 6153, 175, 4, 37, "Output",ExpressionUUID->"12871f94-ae2a-4bbf-bd1b-b0f87f68d444"]
}, Open  ]],
Cell[314577, 6160, 235, 4, 33, "Input",ExpressionUUID->"3fd41e4c-33b2-48b4-996b-2c35c6b64809"],
Cell[CellGroupData[{
Cell[314837, 6168, 481, 11, 33, "Input",ExpressionUUID->"61dd27af-8a4d-41c9-b9cb-638f3b38abf8"],
Cell[315321, 6181, 6826, 196, 334, "Output",ExpressionUUID->"4416e7e2-c3e4-4ca7-9f6f-18f8e6ec6ad3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[322184, 6382, 871, 19, 31, "Input",ExpressionUUID->"aa503ae2-c5eb-4ae9-8a97-04f8cd2539cb"],
Cell[323058, 6403, 31726, 556, 281, "Output",ExpressionUUID->"6a3c39c5-2e3b-4aae-8139-f44314720bbe"]
}, Open  ]],
Cell[354799, 6962, 150, 3, 31, "Input",ExpressionUUID->"e283cfee-e807-442d-b162-6dbd5c1183ed"],
Cell[354952, 6967, 152, 3, 31, "Input",ExpressionUUID->"27c497d4-7358-4726-9bae-e304eb28d9a0"],
Cell[CellGroupData[{
Cell[355129, 6974, 329, 7, 52, "Input",ExpressionUUID->"711e66a1-2d3c-43f7-8748-85e9739029a1"],
Cell[355461, 6983, 266, 5, 35, "Output",ExpressionUUID->"112be600-bda2-43b7-8f09-f5c6d57778d4"]
}, Open  ]],
Cell[355742, 6991, 156, 3, 31, "Input",ExpressionUUID->"30c354ea-0b14-41b8-85c1-1f3472115ae2"],
Cell[355901, 6996, 154, 3, 31, "Input",ExpressionUUID->"8c524ddf-ee13-49fd-afe4-cb555449cdec"],
Cell[356058, 7001, 152, 3, 31, "Input",ExpressionUUID->"776069c3-24fc-40a7-8d10-e0c8d827f1a4"],
Cell[356213, 7006, 409, 6, 31, "Input",ExpressionUUID->"0559e9a0-4b28-4821-814a-ec0db4bd68be"],
Cell[356625, 7014, 484, 7, 31, "Input",ExpressionUUID->"63ecebc0-b322-48c3-b987-186627af7305"],
Cell[357112, 7023, 231, 4, 31, "Input",ExpressionUUID->"80b3a782-8c2e-440b-9d37-9fbdb966c2bc"],
Cell[357346, 7029, 156, 3, 31, "Input",ExpressionUUID->"e0e7fb3f-cffd-43ff-b89d-9a2ba8f59b48"],
Cell[357505, 7034, 170, 2, 31, "Input",ExpressionUUID->"a256798b-36ac-4818-a44e-e3b811ab2588"]
}
]
*)

