(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    162494,       3364]
NotebookOptionsPosition[    160989,       3336]
NotebookOutlinePosition[    161421,       3353]
CellTagsIndexPosition[    161378,       3350]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  StyleBox["ClearAll", "Code"], 
  StyleBox["\[IndentingNewLine]", "Code"], 
  StyleBox["\[IndentingNewLine]", "Code"], 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"Parameters", " ", "for", " ", "Simulation"}], " ", "*)"}], 
   "Code"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"L1", "=", "1"}], ";"}], "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"L2", "=", "0.5"}], ";"}], "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"L3", "=", "0.3"}], ";"}], "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"R1", "=", "0.01"}], ";"}], "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"R2", "=", "0.02"}], ";"}], "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"R3", "=", "0.015"}], ";"}], "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"rho", "=", "1.16"}], ";"}], "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"m1", "=", 
    RowBox[{"Pi", "*", "rho", "*", 
     RowBox[{"R1", "^", "2"}], "*", "L1"}]}], ";"}], 
  "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"m2", "=", 
    RowBox[{"Pi", "*", "rho", "*", 
     RowBox[{"R2", "^", "2"}], "*", "L2"}]}], ";"}], 
  "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"m3", "=", 
    RowBox[{"Pi", "*", "rho", "*", 
     RowBox[{"R3", "^", "2"}], "*", "L3"}]}], ";"}], 
  "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"I1", "=", 
    RowBox[{"m1", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"R1", "^", "2"}], "/", "4"}], "+", 
       RowBox[{
        RowBox[{"L1", "^", "2"}], "/", "12"}]}], ")"}]}]}], ";"}], 
  "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"I2", "=", 
    RowBox[{"m2", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"R2", "^", "2"}], "/", "4"}], "+", 
       RowBox[{
        RowBox[{"L2", "^", "2"}], "/", "12"}]}], ")"}]}]}], ";"}], 
  "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"I3", "=", 
    RowBox[{"m3", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"R3", "^", "2"}], "/", "4"}], "+", 
       RowBox[{
        RowBox[{"L1", "^", "3"}], "/", "12"}]}], ")"}]}]}], ";"}], 
  "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"K1", "=", "10"}], ";"}], "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"b1", "=", "0.1"}], ";"}], "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"K2", "=", "5"}], ";"}], "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"b2", "=", 
    RowBox[{"B1", "/", "2"}]}], ";"}], "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"K3", "=", "1"}], ";"}], "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"K4", "=", "1"}], ";"}], "Code"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"b4", "=", "0.01"}], ";"}], "Code"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"b3", "=", 
    RowBox[{"B1", "/", "5"}]}], ";"}], "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"th1eq", "=", "0"}], ";"}], "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"th2eq", "=", "0"}], ";"}], "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"th3eq", "=", "0"}], ";"}], "Code"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"phieq", "=", "0"}], ";"}], "Code"], 
  StyleBox["\[IndentingNewLine]", "Code"], 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"For", " ", "IBK", " ", "Simulation"}], " ", "*)"}], 
   "Code"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Ib1", "=", " ", 
    RowBox[{"I1", "+", 
     RowBox[{
      RowBox[{"L1", "^", "2"}], "*", 
      RowBox[{"(", 
       RowBox[{"m2", "+", "m3"}], ")"}]}], "+", 
     RowBox[{"m1", "*", 
      RowBox[{
       RowBox[{"L1", "^", "2"}], "/", "4"}]}]}]}], ";"}], 
  "Code"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Ib2", "=", 
    RowBox[{"I2", "+", 
     RowBox[{
      RowBox[{"L2", "^", "2"}], "*", "m3"}], "+", 
     RowBox[{"m2", "*", 
      RowBox[{
       RowBox[{"L2", "^", "2"}], "/", "4"}]}]}]}], ";"}], 
  "Code"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"Ib3", "=", 
     RowBox[{"I3", "+", 
      RowBox[{"m3", "*", 
       RowBox[{
        RowBox[{"L3", "^", "2"}], "/", "4"}]}]}]}], ";"}], "Code"], 
  StyleBox["\[IndentingNewLine]", "Code"], 
  StyleBox["\[IndentingNewLine]", "Code"], 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"Model", " ", "Equations"}], " ", "*)"}], "Code"], 
  StyleBox["\[IndentingNewLine]", "Code"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"xy1", "[", "t", "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "L1"}], "/", "2"}], "*", 
     RowBox[{"Cos", "[", 
      RowBox[{"th1", "[", "t", "]"}], "]"}]}]}], ";"}], "Code"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"z1", "[", "t", "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "L1"}], "/", "2"}], "*", 
     RowBox[{"Sin", "[", 
      RowBox[{"th1", "[", "t", "]"}], "]"}]}]}], ";"}], "Code"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"xy2", "[", "t", "]"}], "=", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"L1", "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"th1", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"L2", "/", "2"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"th2", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ";"}], 
  "Code"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"z2", "[", "t", "]"}], "=", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"L1", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"th1", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"L2", "/", "2"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"th2", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ";"}], 
  "Code"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"xy3", "[", "t", "]"}], "=", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"L1", "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"th1", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"L2", "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"th2", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"L3", "/", "2"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"th3", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ";"}], 
  "Code"], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"z3", "[", "t", "]"}], "=", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"L1", "*", 
         RowBox[{"Sin", "[", 
          RowBox[{"th1", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{"L2", "*", 
         RowBox[{"Sin", "[", 
          RowBox[{"th2", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"L3", "/", "2"}], "*", 
         RowBox[{"Sin", "[", 
          RowBox[{"th3", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], ";"}], "Code"], 
  StyleBox["\n", "Code"]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"x1", "[", "t", "]"}], "=", 
    RowBox[{
     RowBox[{"xy1", "[", "t", "]"}], "*", 
     RowBox[{"Cos", "[", 
      RowBox[{"phi", "[", "t", "]"}], "]"}]}]}], ";"}], "Code"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"y1", "[", "t", "]"}], "=", 
    RowBox[{
     RowBox[{"xy1", "[", "t", "]"}], "*", 
     RowBox[{"Sin", "[", 
      RowBox[{"phi", "[", "t", "]"}], "]"}]}]}], ";"}], "Code"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"x2", "[", "t", "]"}], "=", 
    RowBox[{
     RowBox[{"xy2", "[", "t", "]"}], "*", 
     RowBox[{"Cos", "[", 
      RowBox[{"phi", "[", "t", "]"}], "]"}]}]}], ";"}], "Code"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"y2", "[", "t", "]"}], "=", 
    RowBox[{
     RowBox[{"xy2", "[", "t", "]"}], "*", 
     RowBox[{"Sin", "[", 
      RowBox[{"phi", "[", "t", "]"}], "]"}]}]}], ";"}], "Code"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"x3", "[", "t", "]"}], "=", 
    RowBox[{
     RowBox[{"xy3", "[", "t", "]"}], "*", 
     RowBox[{"Cos", "[", 
      RowBox[{"phi", "[", "t", "]"}], "]"}]}]}], ";"}], "Code"], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"y3", "[", "t", "]"}], "=", 
     RowBox[{
      RowBox[{"xy3", "[", "t", "]"}], "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"phi", "[", "t", "]"}], "]"}]}]}], ";"}], "Code"], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"r1", "[", "t", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"z1", "[", "t", "]"}], ",", "t"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"x1", "[", "t", "]"}], ",", "t"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"y1", "[", "t", "]"}], ",", "t"}], "]"}], "^", "2"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{"r1", "[", "t", "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"r2", "[", "t", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"z2", "[", "t", "]"}], ",", "t"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"x2", "[", "t", "]"}], ",", "t"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"y2", "[", "t", "]"}], ",", "t"}], "]"}], "^", "2"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{"Expand", "[", 
    RowBox[{"r2", "[", "t", "]"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"r3", "[", "t", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"z3", "[", "t", "]"}], ",", "t"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"x3", "[", "t", "]"}], ",", "t"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"y3", "[", "t", "]"}], ",", "t"}], "]"}], "^", "2"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"Expand", "[", 
     RowBox[{"r3", "[", "t", "]"}], "]"}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"K1a", "=", 
   RowBox[{
    RowBox[{"1", "/", "2"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"m1", "*", 
       RowBox[{"r1", "[", "t", "]"}]}], "+", 
      RowBox[{"m2", "*", 
       RowBox[{"r2", "[", "t", "]"}]}], "+", 
      RowBox[{"m3", "*", 
       RowBox[{"r3", "[", "t", "]"}]}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"T", "=", 
   RowBox[{
    RowBox[{"1", "/", "2"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"I1", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"th1", "'"}], "[", "t", "]"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"th1", "[", "t", "]"}], "]"}], "^", "2"}], "*", 
          RowBox[{
           RowBox[{
            RowBox[{"phi", "'"}], "[", "t", "]"}], "^", "2"}]}]}], ")"}]}], 
      "+", 
      RowBox[{"I2", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"th2", "'"}], "[", "t", "]"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"th2", "[", "t", "]"}], "]"}], "^", "2"}], "*", 
          RowBox[{
           RowBox[{
            RowBox[{"phi", "'"}], "[", "t", "]"}], "^", "2"}]}]}], ")"}]}], 
      "+", 
      RowBox[{"I3", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"th3", "'"}], "[", "t", "]"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"th3", "[", "t", "]"}], "]"}], "^", "2"}], "*", 
          RowBox[{
           RowBox[{
            RowBox[{"phi", "'"}], "[", "t", "]"}], "^", "2"}]}]}], ")"}]}]}], 
     ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Kt", "=", 
   RowBox[{
    RowBox[{"K1a", "+", "T"}], "//", "FullSimplify"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Vspr", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"K1", "/", "2"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"th1", "[", "t", "]"}], "-", "th1eq"}], ")"}], "^", "2"}]}], 
     "+", 
     RowBox[{
      RowBox[{"K2", "/", "2"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"th2", "[", "t", "]"}], "-", "th2eq"}], ")"}], "^", "2"}]}], 
     "+", 
     RowBox[{
      RowBox[{"K3", "/", "2"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"th3", "[", "t", "]"}], "-", "th3eq"}], ")"}], "^", "2"}]}], 
     "+", 
     RowBox[{
      RowBox[{"K4", "/", "2"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"phi", "[", "t", "]"}], "-", "phieq"}], ")"}], "^", 
       "2"}]}]}]}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Vgrav", "=", 
     RowBox[{
      RowBox[{"m1", "*", "g", "*", 
       RowBox[{"z1", "[", "t", "]"}]}], "+", 
      RowBox[{"m2", "*", "g", "*", 
       RowBox[{"z2", "[", "t", "]"}]}], "+", 
      RowBox[{"m3", "*", "g", "*", 
       RowBox[{"z3", "[", "t", "]"}]}]}]}], ";"}], "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"V", "=", "Vspr"}], 
   RowBox[{"(*", 
    RowBox[{"+", "Vgrav"}], "*)"}], ";"}], "\n", 
  RowBox[{"(*", "Lagrangian", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"L", "=", 
    RowBox[{"Kt", "-", "V"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{
         RowBox[{"th1", "'"}], "[", "t", "]"}]}], "]"}], ",", "t"}], "]"}], 
    "-", 
    RowBox[{"D", "[", 
     RowBox[{"L", ",", 
      RowBox[{"th1", "[", "t", "]"}]}], "]"}], "+", 
    RowBox[{"b1", "*", 
     RowBox[{
      RowBox[{"th1", "'"}], "[", "t", "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"a", "//", "FullSimplify"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{
         RowBox[{"th2", "'"}], "[", "t", "]"}]}], "]"}], ",", "t"}], "]"}], 
    "-", 
    RowBox[{"D", "[", 
     RowBox[{"L", ",", 
      RowBox[{"th2", "[", "t", "]"}]}], "]"}], "+", 
    RowBox[{"b2", "*", 
     RowBox[{
      RowBox[{"th2", "'"}], "[", "t", "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"b", "//", "FullSimplify"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"c", "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"L", ",", 
        RowBox[{
         RowBox[{"th3", "'"}], "[", "t", "]"}]}], "]"}], ",", "t"}], "]"}], 
    "-", 
    RowBox[{"D", "[", 
     RowBox[{"L", ",", 
      RowBox[{"th3", "[", "t", "]"}]}], "]"}], "+", 
    RowBox[{"b3", "*", 
     RowBox[{
      RowBox[{"th3", "'"}], "[", "t", "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"c", "//", "FullSimplify"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "=", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{"L", ",", 
         RowBox[{
          RowBox[{"phi", "'"}], "[", "t", "]"}]}], "]"}], ",", "t"}], "]"}], 
     "-", 
     RowBox[{"D", "[", 
      RowBox[{"L", ",", 
       RowBox[{"phi", "[", "t", "]"}]}], "]"}], "+", 
     RowBox[{"b4", "*", 
      RowBox[{
       RowBox[{"phi", "'"}], "[", "t", "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "Inputs", " ", "*)"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"T1", "[", "t_", "]"}], ":=", 
   RowBox[{"5", "*", 
    RowBox[{"Sin", "[", 
     RowBox[{"3", "*", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"T2", "[", "t_", "]"}], ":=", " ", 
   RowBox[{"2", "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "3"}], "*", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"T3", "=", "1"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eqns", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "==", 
       RowBox[{"T1", "[", "t", "]"}]}], ",", 
      RowBox[{"b", "==", 
       RowBox[{"T2", "[", "t", "]"}]}], ",", 
      RowBox[{"c", "==", "T3"}], ",", 
      RowBox[{"d", "==", "0"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Numerical", " ", "Solve", " ", "of", " ", "Lagrangian"}], " ", 
   "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eqns", ",", 
        RowBox[{
         RowBox[{"th1", "[", "0", "]"}], "==", 
         RowBox[{"5", "*", 
          RowBox[{"Pi", "/", "180"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"th1", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"th2", "[", "0", "]"}], "==", 
         RowBox[{"10", "*", 
          RowBox[{"Pi", "/", "180"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"th2", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"th3", "[", "0", "]"}], "==", 
         RowBox[{"20", "*", 
          RowBox[{"Pi", "/", "180"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"th3", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
        RowBox[{
         RowBox[{"phi", "[", "0", "]"}], "==", 
         RowBox[{"15", "*", 
          RowBox[{"Pi", "/", "180"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"phi", "'"}], "[", "0", "]"}], "==", "0"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"th1", "[", "t", "]"}], ",", 
        RowBox[{"th2", "[", "t", "]"}], ",", 
        RowBox[{"th3", "[", "t", "]"}], ",", 
        RowBox[{"phi", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"IBK", " ", "Approximation"}], " ", "*)"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"F", "[", 
     RowBox[{"Im1_", ",", " ", "Bm_", ",", " ", "Km_", ",", "u_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Im1", "*", 
      RowBox[{
       RowBox[{"u", "''"}], "[", "t", "]"}]}], "+", 
     RowBox[{"Bm", "*", 
      RowBox[{
       RowBox[{"u", "'"}], "[", "t", "]"}]}], "+", 
     RowBox[{"Km", "*", 
      RowBox[{"u", "[", "t", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s1", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"F", "[", 
           RowBox[{"Ib1", ",", "b1", ",", "K1", ",", "x"}], "]"}], "==", 
          RowBox[{"T1", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "==", 
         RowBox[{"5", "*", 
          RowBox[{"Pi", "/", "180"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "0", "]"}], "==", "0"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", "[", "t", "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s2", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"F", "[", 
           RowBox[{"Ib2", ",", "b2", ",", "K2", ",", "x"}], "]"}], "==", 
          RowBox[{"T2", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "==", 
         RowBox[{"10", "*", 
          RowBox[{"Pi", "/", "180"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "0", "]"}], "==", "0"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", "[", "t", "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s3", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"F", "[", 
           RowBox[{"Ib3", ",", "b3", ",", "K3", ",", "x"}], "]"}], "==", 
          "T3"}], "}"}], ",", 
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "==", 
         RowBox[{"20", "*", 
          RowBox[{"Pi", "/", "180"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "0", "]"}], "==", "0"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", "[", "t", "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Extract", " ", "Lagrangian", " ", "and", " ", "IBK", " ", "solutions"}], 
   " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"th1Sol", " ", "=", " ", 
   RowBox[{
    RowBox[{"th1", "[", "t", "]"}], " ", "/.", " ", 
    RowBox[{"s", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"s1Sol", " ", "=", " ", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], " ", "/.", " ", 
    RowBox[{"s1", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"th2Sol", "=", 
   RowBox[{
    RowBox[{"th2", "[", "t", "]"}], "/.", 
    RowBox[{"s", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"s2Sol", "=", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "/.", 
    RowBox[{"s2", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"th3Sol", "=", 
   RowBox[{
    RowBox[{"th3", "[", "t", "]"}], "/.", 
    RowBox[{"s", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s3Sol", "=", 
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], "/.", 
     RowBox[{"s3", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\n", "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Generate", " ", "the", " ", "time", " ", "points"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"timePoints", " ", "=", " ", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", " ", "1", ",", " ", "0.001"}], "]"}]}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Evaluate", " ", "th1", " ", "and", " ", "s1", " ", "at", " ", "each", " ",
     "time", " ", "point"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"th1Values", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"th1Sol", " ", "/.", " ", 
        RowBox[{"t", " ", "->", " ", "tval"}]}], "]"}], "*", 
      RowBox[{"180", "/", "Pi"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"tval", ",", " ", "timePoints"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"s1Values", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"s1Sol", " ", "/.", " ", 
        RowBox[{"t", " ", "->", " ", "tval"}]}], "]"}], "*", 
      RowBox[{"180", "/", "Pi"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"tval", ",", " ", "timePoints"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rms", "=", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"Mean", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"th1Values", "-", "s1Values"}], ")"}], "^", "2"}], "]"}], 
     "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Plot", " ", "th1", " ", "and", " ", "s1", " ", "against", " ", "time"}], 
   " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"timePoints", ",", " ", "th1Values"}], "}"}], "]"}], ",", " ", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"timePoints", ",", " ", "s1Values"}], "}"}], "]"}]}], "}"}], 
    ",", " ", "\n", " ", 
    RowBox[{"PlotRange", " ", "->", " ", "All"}], ",", 
    RowBox[{"Frame", "->", "True"}], ",", " ", "\n", " ", 
    RowBox[{"FrameLabel", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<Time (s)\>\"", ",", " ", "\"\<MCP angles (degrees)\>\""}], 
      "}"}]}], ",", " ", "\n", " ", 
    RowBox[{"PlotLegends", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<Lagrangian\>\"", ",", " ", "\"\<IBK\>\""}], "}"}]}], ",", 
    " ", 
    RowBox[{"PlotStyle", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", " ", "Dashed"}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", " ", 
     RowBox[{"StringForm", "[", 
      RowBox[{
      "\"\<Lagrangian and IBK solutions with RMSE: `` degrees\>\"", ",", " ", 
       RowBox[{"NumberForm", "[", 
        RowBox[{"rms", ",", 
         RowBox[{"{", 
          RowBox[{"Infinity", ",", " ", "3"}], "}"}]}], "]"}]}], "]"}]}]}], 
   "]"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Evaluate", " ", "th2", " ", "and", " ", "s2", " ", "at", " ", "each", " ",
     "time", " ", "point"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"th2Values", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"th2Sol", " ", "/.", " ", 
        RowBox[{"t", " ", "->", " ", "tval"}]}], "]"}], "*", 
      RowBox[{"180", "/", "Pi"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"tval", ",", " ", "timePoints"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"s2Values", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"s2Sol", " ", "/.", " ", 
        RowBox[{"t", " ", "->", " ", "tval"}]}], "]"}], "*", 
      RowBox[{"180", "/", "Pi"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"tval", ",", " ", "timePoints"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rms", "=", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"Mean", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"th2Values", "-", "s2Values"}], ")"}], "^", "2"}], "]"}], 
     "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Plot", " ", "th2", " ", "and", " ", "s2", " ", "against", " ", "time"}], 
   " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"timePoints", ",", " ", "th2Values"}], "}"}], "]"}], ",", " ", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"timePoints", ",", " ", "s2Values"}], "}"}], "]"}]}], "}"}], 
    ",", " ", "\n", " ", 
    RowBox[{"PlotRange", " ", "->", " ", "All"}], ",", 
    RowBox[{"Frame", "->", "True"}], ",", " ", "\n", " ", 
    RowBox[{"FrameLabel", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<Time (s)\>\"", ",", " ", "\"\<PIP angles (degrees)\>\""}], 
      "}"}]}], ",", " ", "\n", " ", 
    RowBox[{"PlotLegends", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<Lagrangian\>\"", ",", " ", "\"\<IBK\>\""}], "}"}]}], ",", 
    " ", 
    RowBox[{"PlotStyle", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", " ", "Dashed"}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", " ", 
     RowBox[{"StringForm", "[", 
      RowBox[{
      "\"\<Lagrangian and IBK solutions with RMSE: `` degrees\>\"", ",", " ", 
       RowBox[{"NumberForm", "[", 
        RowBox[{"rms", ",", 
         RowBox[{"{", 
          RowBox[{"Infinity", ",", " ", "3"}], "}"}]}], "]"}]}], "]"}]}]}], 
   "]"}], "\n", "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Evaluate", " ", "th3", " ", "and", " ", "s3", " ", "at", " ", "each", " ",
     "time", " ", "point"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"th3Values", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"th3Sol", " ", "/.", " ", 
        RowBox[{"t", " ", "->", " ", "tval"}]}], "]"}], "*", 
      RowBox[{"180", "/", "Pi"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"tval", ",", " ", "timePoints"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"s3Values", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"s3Sol", " ", "/.", " ", 
        RowBox[{"t", " ", "->", " ", "tval"}]}], "]"}], "*", 
      RowBox[{"180", "/", "Pi"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"tval", ",", " ", "timePoints"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rms", "=", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"Mean", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"th3Values", "-", "s3Values"}], ")"}], "^", "2"}], "]"}], 
     "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Plot", " ", "th1", " ", "and", " ", "s1", " ", "against", " ", "time"}], 
   " ", "*)"}]}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"timePoints", ",", " ", "th3Values"}], "}"}], "]"}], ",", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"timePoints", ",", " ", "s3Values"}], "}"}], "]"}]}], "}"}], 
   ",", " ", "\n", " ", 
   RowBox[{"PlotRange", " ", "->", " ", "All"}], ",", 
   RowBox[{"Frame", "->", "True"}], ",", " ", "\n", " ", 
   RowBox[{"FrameLabel", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (s)\>\"", ",", " ", "\"\<DIP angles (degrees)\>\""}], 
     "}"}]}], ",", " ", "\n", " ", 
   RowBox[{"PlotLegends", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Lagrangian\>\"", ",", " ", "\"\<IBK\>\""}], "}"}]}], ",", 
   " ", 
   RowBox[{"PlotStyle", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", " ", "Dashed"}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", " ", 
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<Lagrangian and IBK solutions with RMSE: `` degrees\>\"", ",", " ", 
      RowBox[{"NumberForm", "[", 
       RowBox[{"rms", ",", 
        RowBox[{"{", 
         RowBox[{"Infinity", ",", " ", "3"}], "}"}]}], "]"}]}], "]"}]}]}], 
  "]"}], "\n"}], "Code",
 CellChangeTimes->{{3.9219133846417046`*^9, 3.9219135875812397`*^9}, {
   3.9219136363591065`*^9, 3.92191367645635*^9}, {3.9219137091467843`*^9, 
   3.9219137149976006`*^9}, {3.921913768848872*^9, 3.92191379530455*^9}, {
   3.9219138442690363`*^9, 3.921913853451155*^9}, {3.921913923555896*^9, 
   3.921913955687598*^9}, {3.921914005436627*^9, 3.9219140861102147`*^9}, {
   3.921914754047635*^9, 3.92191476251044*^9}, {3.921914833343122*^9, 
   3.9219148937071433`*^9}, {3.9219149349681096`*^9, 
   3.9219151093350067`*^9}, {3.921915178757701*^9, 3.921915180124299*^9}, {
   3.9219152201286883`*^9, 3.9219152524948864`*^9}, {3.921915300087949*^9, 
   3.92191530491973*^9}, {3.9219153492309084`*^9, 3.921915395338664*^9}, {
   3.9219154263635206`*^9, 3.92191543944843*^9}, 3.921915475818918*^9, {
   3.921915516853154*^9, 3.9219155771099586`*^9}, {3.9219156179893656`*^9, 
   3.9219156212283683`*^9}, {3.9219156973515368`*^9, 
   3.9219157452433577`*^9}, {3.921915841240785*^9, 3.9219160214228997`*^9}, {
   3.921916053170478*^9, 3.9219161238673105`*^9}, {3.9219161605768166`*^9, 
   3.921916166996769*^9}, {3.921916219264777*^9, 3.9219164249799585`*^9}, 
   3.921916471919693*^9, {3.921916583940641*^9, 3.921916586664352*^9}, {
   3.921916645143114*^9, 3.9219166917577915`*^9}, {3.9219167253259106`*^9, 
   3.921916837172861*^9}},
 CellLabel->
  "In[3997]:=",ExpressionUUID->"44046faf-0f51-4645-a32e-0810e3d9919b"],

Cell[BoxData["ClearAll"], "Output",
 CellChangeTimes->{
  3.921913503654631*^9, {3.9219135516799784`*^9, 3.9219135670195475`*^9}, 
   3.9219136197360053`*^9, 3.921913680805874*^9, {3.921913774284373*^9, 
   3.921913798499532*^9}, 3.921913855183072*^9, {3.9219139338322954`*^9, 
   3.9219139435682945`*^9}, {3.9219140000255804`*^9, 3.9219140207946568`*^9}, 
   3.9219140741514845`*^9, 3.921914896164211*^9, 3.9219150432177606`*^9, 
   3.921915078552924*^9, 3.9219151100295506`*^9, 3.9219151810006495`*^9, 
   3.9219152228552465`*^9, 3.921915255358945*^9, 3.9219153062436666`*^9, 
   3.921915356883729*^9, 3.921915399141369*^9, 3.921915444655263*^9, 
   3.9219154766547766`*^9, {3.9219155190746756`*^9, 3.9219155260176134`*^9}, {
   3.9219155637618866`*^9, 3.9219155779440556`*^9}, 3.921915622296234*^9, 
   3.9219156998954883`*^9, 3.921915783626521*^9, 3.9219158476382313`*^9, {
   3.921915964703168*^9, 3.921915999321947*^9}, {3.921916066979995*^9, 
   3.9219161138746805`*^9}, 3.921916167395401*^9, {3.9219162298583555`*^9, 
   3.921916274674012*^9}, 3.921916429991445*^9, 3.9219164763651104`*^9, 
   3.9219166007867165`*^9, 3.921916712282387*^9, {3.921916780432417*^9, 
   3.9219167973462954`*^9}, 3.921916861718419*^9},
 CellLabel->
  "Out[3997]=",ExpressionUUID->"7f84293c-91e3-40b8-a915-2ae2454771c5"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV23dcTf8fB/BUKLJJ2ktTe9zJ62h8SSmZ2RlRZpJNZO8tZAsNK2XT0NCm
vedt3HZGIfN3677vH7/+8TiPcjrj83k9X+dzT1pL10/3kpaSkmqSkZLq+ff/
v0Yyv8M/505dOg37zrW4yfNG0LYn3Od9v3YyZxjzM2DVW/9z3riSI9cQ4DqU
vu+Lh8/UJ26OHsTsGPloUs12f/jFS2dKSw2kn98K1/SvC9WOyjHbmvQs5B7s
xH22bNXM6f3o/+/BgteyCd6zZRl+lduJi+v2wrStuVv6nDTtbz+krL1X7JTt
w7x2UpA2PnQQJ29tOeXt+g/i/R8Gb+qcqas6foP7NHVz7I2j6Hr/SWt//U+I
f99x3M44mvHEqBsv1Q+0uL88CY8XVSGLX32H+PefhneldeGS499wNUkz0s/7
DEzvNl9ovt4F8fGcBa+0z9U9rZ0o6+79hbgQvXfdN99OiI/vPM6MX3djqUEn
VMwqdPsFXkBR9xjpMUM6IT7eIHD935Te0erEvOW8nj3CPtmzIHFBJx3/JfzZ
Gfx2SUwngi/3fmGxgVfZeaaLzicYRz8GNATXdqHkw/cZtXevYG2EyrLCkG90
flexxa56c2bAd4yRnT3YJOoa9NatG6rj94PO9zosizZ73NjRDQ9O7w5xYIaD
p+7ln3T+N2EUHd43KvUXXFhHJnrW38Sn5Q7dy+T+0PW4hd+8Sa2+s/+i1b1n
j7cQHfwk0/DJP7o+t7Hdaf+pncekmGNrhL/CP9/Gtz4HTS3s+zDi6xWCpDTd
x1L/+jDGhxRFpxACtwJjgUOs5P7eQfYYF5tle2SYjFuOz7/+uYOZ26K9Mx1k
GfH1vIvguwX2vwf0ZVaLrpaS7D1sX3Fo0rbcvjQe7qHq378F+cH9mAFFIb7j
B4Rizdu8wLBl/Rnx9Q4F74Ceb/A4OSai53SHhmGkepC9R5ccjc8wBGfvVL4c
I89M6dmdYjgsDrKeqh4YwIjvRzhOalxWuO88kGnuudyqEdAo3NY5YpgCI74/
EXhcOCXMtECB6bl62dr38TdulFfJxUGM+H7dxxEntd8/PAYzhgtOJXQZPMDw
wCdeW5WG0Hx4gLLk8hmTC4cwaaK9KZs9xIghUUvNnIYy4vv5EPvXx7jMvzeU
8TnTthM2jxDmOf9sqPQwRnx/H+HPz4baUYuGMaKDE53yY2idMUgKfzmMEd/v
x9A1GTTbe/hwZqZo8IhuKfK0iow9Vg+n+RcJ6SkdowMThzN3RFevKCQSrbMC
/7Uoj2DE4yESXwMHPL69YQTT+Sd/a5PeE/Sf/TPyccoIRjw+nsA5/4ieutpI
xqF3ADxBSWLU7e4NIxnxeHmCJe939nd9P5I5r9R7QpiR+cRLX3kUzfcoDHaS
rjqzdhQjPrwoRMrsO3o5fhSNpyhM0Tg4f8oIRcaq9ysa57Q0BkZ6KdL4isbQ
iAEyhS8UmX3x6aIRFI3CxAjnFPnRNN5E39eI3Xly/mgmT3T3RdcEV3Htsc3D
0TT+nkK5wWvj+7+jGZ3eHT7FkPmLEp2mKdF4fAp1ruW/lFtKzEbvnhvwDPu0
NOonf1Wi8fkMZr9HnMxzGMMkdhmI7vAzfI41XL0uaAyN1+fY8yPQQaNxDDNC
fIBo2HSR08JRpvH7HHddihMKjykzvUeX+hyv7TY+ra9QpvH8ApsqXe1UzFWY
qGsdoe+dX+B4Yb7s9r0qNL5fYIL/lr8yBSqMdO8Jv4CTYdet1/qqNN5fIjhq
Qsn17arMdPGAge/OeoUnWao0/l+i7cUf48+aasztntPNf4kqJ5eni/zVaD68
whmNm69/pKgxX3p25/EKWldnf41RUaf58Qrn7v5+/WC9OmPXM/zLXqEjtlY9
MVGd5strGNnH1f8drcGc7Rm+i15jVh/lSwvXaND8eQ2ZYwGHy+M1mJrtPTfk
NWRV89a+HaBJ8+kNXgapp4620WQsegf4G+iEj0oMWKxJ8+sNnBYXJnQc0WQC
L9iLhswbrL7hrePzVJPm21usfbyZ11SpyeRo995gWD9esnidvBbNv7dQFQbX
fbPSYrR60r/tLfQueeoELtKi+RgDn2T/bQOPaDEbeqaHbwwO+6W4nI/WovkZ
g/hLWxSUK7WYdz1392sMkocstrwip03zNRY1CfMnKVppM8PEExLuenuqjizU
pvkbix0JV291HtJmei9fdywyrkVOnBWlTfM5DueaFQ5FlGszvYe3Mw63ciOd
vvbTofkdB5di142mFjqM2PF4dF+J/jdvvg7N93iourj/2XJAhwl77yya0fFQ
nxB7fP9jHZr/8fA70L9md4kOM000G4fvi0fTFx/4yOhSHsTjrOmMvzDRZX70
6JMUj0oO96DMHF3Kh3g8yZ3lFr1Hl7mp3DMh3qFRkCBwjdClvHiHbYIbxQV5
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
RZ43QbrENOLLWyvyvAkle9tWdj2wIs+bMFCzaE/rVSvyvAnKs4//KzpuRZ43
Ye7ZZ+0vdlqR501wUuoz9/gaK/K8CZfcNJ1mLbAiz5sQ1CctbbiLFXnehMjj
T+uTeFbkeTPsLl8LXW1sRZ43wzhlonJ/FSvyvBkpEzwnXxxgRZ43I+S/53zV
n5bkeTMy5WWlg5osyfNmHJKWD5EtsSTPm7H+8R4j71RL8rwZVZ4GIfEvLMnz
ZpxTfDN6cKgled4Mle3tZ6cFWZLnzZj9ZavG4QOW5Hkz6kcNSn3qb0meN+Pj
79kXC5dZkufNGG4hc6ltuuR9pmaczn+Z3z3RkjxvhnP2aI9f5pa0/tuMV0z8
uC8alvR5TzN8HjsvrBwsef+pGVFsl864Pxb0+U8z8h/O+B3UakGeNyMttHX3
sjIL8rwZ/E3BR8amW5DnzZD9WKVT8dKCPBd9P40192ioBXneDOszitYmQRbk
eTOKszpik/dbkOfNeORsJjtzowV5Lvr9l7iDi5dYkOfN4FVvFrpPsyDPm/Ey
dGLwuwkW5HkzgjS+muubWJDnLSjeW/tsr4oFed6Cl3XLrPLlLcjzFvBexUWr
/DAnz1sw5KL9xLkNkvf3WrBDit1wPN+cPG/B40GVD54nmJPnLdiauuVGYaQ5
ed6CQ0cmpbZel7zv14J+Xoctuo+bk+ctcL7mX/9ruzl53oKce07tnd7m5HkL
jgUys+tmS94PbMHrkaf10x3MyfMW3K7xW3PP0pw8bwE/Rdtsm6Y5ed6CupdF
2+wGS94nbMEl58sPZX+Ykect0JYOuLkhz4w8b8HJyUXVGY/MyPMW+I7R3Tfi
qBl53oIgxdYrk73MyPMWTHN8jdWMGXnegkXt6vt2qJiR5y24Eha9fds3U/Jc
dH5bVXheOabkeQs8KqRKJjwwJc9b4NA42qffIVPyvAU2Qg2pt0tMyXPR/i4K
ohbzTcnzFmTn2QZ9VjQlz1uQXCYVt+GzCXneim+y5nbVGSbkeSsMquOsx98z
Ic9bcYofd//wHhPyvBW3QlzeJswzIc9bkfXg9I4WaxPyvBV5DxL/Sg+RvD8r
+v9JNvPlm8aR563wezDp3t+EceR5Kw69WtYluDqOPG/Fivlyi55vHkeetyLK
7UPX1mnjyPNWCD8syjUyGkeet0JDZq18psw48rwVx32TIhdUGJPnrYj/4VxZ
/tyYPG+Fo8LPUJfTxuR5K75UfNR54GNMnrci7mXzyl92xuR5KyL09h3lqhqT
561wvl11y6fLiDxvhSBretLhD0bkeSvCx7rKXQo1Is9bsVZn4f6Le4zI81a4
ThjtdmiuEXneitmLtHevtDQiz1sxY7qDMXugEXneCu8r81Z110reF2+Fk9HU
GfffGpLnrTjbMvLP1AuG5HkrVsukB9SsNSTPW8E9dbnD6z/J++WtmCN8taJM
3ZA8b0NnrP+vid8NyPM2SOebJ1/+aECet0HQuqJMEGpAnreBt+PSLLU9BuR5
Gw6+nu/s5GFAnrehptQzf4W5AXnehhE2K+U2yxmQ522QT7D9t7lanzxvQ+zZ
B9k+L/XJ8zasan9z3vW0Pnnehsyo5cvGeuuT522Ylv54Zjv0yfM2PFZ9vSd8
tD553ga3L1H/ZnfokedteNYvv+nbez3yvA0zHnrOOXJdjzxvw72mh56DN+uR
5234vFpD/eBUPfK8DYvztMI+6eqR5204csZ4tOtvyd9TtCEm+N2+63ljyfM2
3PX07yeIGEuet2H5xPIXSnvHkudtUBh9JdJuruTvL9ow5NZCeU/zseR5G9R2
lZT69h9LnrfhUmzG+E2VuuS56H696p6y9pkued6GCwbmKnOP65LnovOLskth
L9Mlz0Xnx1XwVuDqkuft+PF5rWL+UF3yvB0Fk6a2nBLqkOftSJ954R9idcjz
dnycwl5Td16HPG9Hlcy4KbtW65Dn7Zg/3jtqgJ0Oed6O1Q+bYo4r6ZDn7VB8
EX1ApkObPG9H3dV07fXJ2uR5O76WWD76eEWbPG/HujddzFg/bfK8Hf1WaXeu
n6xNnrdjuuP76sfq2uR5O2b2b9eo79Qiz9vxZu399CEZWuR5OwJfjvxpdkuL
PG/Hqv/4KY5btMjzdgy6ZuXsPlWLPG9Hn2vDbkzX0SLP27FF2FHm1K1Jn/e2
w7FRoMz6qMnU9XreDrt9f/2V72qS5+1467xApnO7Jnkuun7BilWJ0zTJ83bk
qdhpHdXTJM/bIT1FmHzihwZ53o5hD49t7wyR/P1WOxxW3zk72U2DPG/HmKq5
zNGf6uR5O+4dK3z26q46ed4O/oBpY4umqZPnHUir/hYv+KVGnnfg3vsvr8vv
qZHnHVh/Zr1jsrsaed6BmTIhZ6/+ViXPO+CPt/lLQ1XJ8w6EMXXjlaarkucd
yOxykor5rUKed6DvBV1X91AV8ly0v4g7cwvcJX9vJ/r+je8znX4rk+cdcHeY
7vfwnjJ53oEqYUdtH3dl8rwD2uf7lf/3awx53gF728zjO++OIc87cKbfboMQ
tzHkeQdmTVha87pbiTzvwKc5z5sSQ5TI8w54rIzdGDtViTzvwOkR759EfB9N
nnfgtYNa4eFbo8nzDjx0HDlirvNo8rwDweZSV1S6JH8f2YGhGyfczL6uSJ53
QPan+aytkxXJ8w50TRvfOvzLKPK8A5U+Hy/evDKKPO/AtTfzjmo5jiLPO1Ca
7PHtQvtI8rwDt1SnDP57cSR5LrqeO57Jzps4kjzvwLoJRgoRzSPI809Q8pww
p/3cCOZ/caZfsg==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1: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
yfPPuH1BzXSF33Dmf5r/Zt0=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"MCP angles (degrees)\"", TraditionalForm], None}, {
        FormBox["\"Time (s)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       InterpretationBox[
       "\"Lagrangian and IBK solutions with RMSE: \\!\\(\\*FormBox[\\\"\\\\\\\
\"0.189\\\\\\\"\\\", TraditionalForm]\\) degrees\"", 
        StringForm["Lagrangian and IBK solutions with RMSE: `` degrees", 
         NumberForm[0.18942497712421963`, {
           DirectedInfinity[1], 3}]], Editable -> False], TraditionalForm], 
     PlotRange -> {{0, 1.}, {0, 28.66324310429518}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Lagrangian\"", "\"IBK\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.921913503654631*^9, {3.9219135516799784`*^9, 3.9219135670195475`*^9}, 
   3.9219136197360053`*^9, 3.921913680805874*^9, {3.921913774284373*^9, 
   3.921913798499532*^9}, 3.921913855183072*^9, {3.9219139338322954`*^9, 
   3.9219139435682945`*^9}, {3.9219140000255804`*^9, 3.9219140207946568`*^9}, 
   3.9219140741514845`*^9, 3.921914896164211*^9, 3.9219150432177606`*^9, 
   3.921915078552924*^9, 3.9219151100295506`*^9, 3.9219151810006495`*^9, 
   3.9219152228552465`*^9, 3.921915255358945*^9, 3.9219153062436666`*^9, 
   3.921915356883729*^9, 3.921915399141369*^9, 3.921915444655263*^9, 
   3.9219154766547766`*^9, {3.9219155190746756`*^9, 3.9219155260176134`*^9}, {
   3.9219155637618866`*^9, 3.9219155779440556`*^9}, 3.921915622296234*^9, 
   3.9219156998954883`*^9, 3.921915783626521*^9, 3.9219158476382313`*^9, {
   3.921915964703168*^9, 3.921915999321947*^9}, {3.921916066979995*^9, 
   3.9219161138746805`*^9}, 3.921916167395401*^9, {3.9219162298583555`*^9, 
   3.921916274674012*^9}, 3.921916429991445*^9, 3.9219164763651104`*^9, 
   3.9219166007867165`*^9, 3.921916712282387*^9, {3.921916780432417*^9, 
   3.9219167973462954`*^9}, 3.9219168619424353`*^9},
 CellLabel->
  "Out[4076]=",ExpressionUUID->"4d329c50-2cef-4c2d-8a03-cc5143cadf2d"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
YfiuyjvzwvUpP7MQpiYbO+KxPvWlLPQ0nJmgeF2f8jQLG54qSIme1Kf+lIWL
Mn3jhffoU77+xJzzllkSG/WpT/1E+o7GHC1Xfcrbn7j2o85p3Gx96lc/8XnM
9LlrxulT/v7ESEv3zKsj9Klv/cSYhzX16Zr6lMc/sTcv/oGStD71r5/wKJDv
38CnT/n8E9tUxCVif+tRH/uJTW18eWZVepTXP6FavGDjvWw96mc/URrpnqQS
p0f5/ROTvx8Z9vCDHvW1nzgr225q+1yP8vwnDGbnj0u/o0f9jTc+Bf0Ze87r
Ub5nY4HPZRezQ3rU57Kx4tHN7RxPPcr7bIjK7n4UtlqP+l02LJf3//JdpEf5
n42jV0M2rJ+mR30vG3elX0g6jdYjD7LxZd+FhmmmetT/svHL5JzwDHU98iEb
a0Pd1i+S1KM+mI19WxRktgzokhfZsJd3E7/4W5f6YTYyH9q7fanSJT9413vz
S6QjR5f6YjZ2Zv8nPS5BlzzJxqH3n/aei9Cl/pgN/7Njp9W91CVfcvBML957
3gNd6pM50J+2UCraT5e8yUGMkbUETuhSv8xB0wSx7QneuuRPDjo1b49ZsUmX
+mYOfIxF1/Uv1yWPclBkGt7ybJ4u9c8cfIySzXefpEs+5YDjLa+qZ69LfTQH
Iw58Dmkx0iWvcpD1YMrlBFVd6qc5cHy/OOKlhC75lQPvR08M7g3oUF/lje/7
+Pgbf3TIsxwwtsdu36vRof6aixLdFr+QfB3yLRemU72eJCbrUJ/NxUDEpJRf
X3XIu1xYPf7eqfdGh/ptLhxEazRWBemQf7l4tCTL8tktHeq7uUi/MUyn95wO
eZgLpW3XK5ce1qH+m4tlNSkbonfoMOzXk7kYPW/vQ3sPHerDuTC2az/4xlWH
vMxFkVNHk4OjDvXjXIS8TC5LZXTIz1xcn7J06hZ7HerLuQgTbhWVN9EhT3nz
yXql/kNdh/pzHvgnjNx8VFqHfM3DHOHkihmCOtSn8/A6c1iZdbM2eZuH86vt
+WpztKlf58EzV4HvdaQ2+ZuHezeXfDgXpE19Ow8Hu63+HrigTR7noSX1+svD
u7Wpf+fB/drCOzdWaJPPeciXarsfNU2b+ngeHJbwXem30Cav87Cipm22o5I2
9fM8CLYuevT6rxb5nYdt3ZFbDeq0qK/nYdGXvydepGuR5/lICteMmfpRizzP
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
qxzlawVcJMWWvFkpR32qAnIyHvMeOslR3lag+DffhVuT5ahfVWBJTofsXXs5
yt8KVCpcK35qJEd9qwIlqeuavqrIUR5XYFyQwqRyMTnqX7zP2+ldKN4vS/lc
AYuBYx8ntchSH6tAQOLUoqMVspTXFXgoUzo55acs9bMKCEkdadGJk6X8rkCS
95qKwx9lqa9VoM48SqU+WJbyvAJnEzOvu/nLUn+rwLvYxKWFl2Qp3yvBdMWv
XnNMlvpcJQ7fLg1t2yVLeV+JG4Wi0/02yFK/q0SYtKbumGWylP+VaE4tmlQ/
V5b6XiX0wguePoYseVAJZ/sDCzfbylL/q8TYPJFJDoay5EMlbCcf3aGgIkt9
sBIyPyNqusRkyYtKZC50vV3XL0P9sBI7Il+fK/8lQ35U4tTKkoiqKhnqi5W4
+jPW4HeuDDMU/96VuLmBGyeaJEPfB1Vi2tGX980iZeh5sRKL00SeLw6Voe+H
KtFjEVR5PlCGnh8r8dV6YEbqDRn6vqgS+VdMcpTPytDzZCUE3lT4bvWRob5Z
iZM9b1ySt8uQR5X4b9572K+Tof5ZCdUtXyc+XSJDPlXCcrGro8EcGeqjleA/
+2T9i4ky5FUl5qWeOTreVob6KW+95K7dyTOUIb948z3/6/lBVRnqq5UQ7L7x
zFxShjyrxIFInUvVfDLUX6twrTvgxbx6afKtCuau3vV1GdLUZ6vwZJN6/LWP
0uRdFbp/b7FzeShN/bYK7x/kapielib/eO+fIucls12a+m4VbFZ4aYovlSYP
q/BUOFNKlZGm/lsFd7UdNg4m0uRjFfr2zPbaJiNNfbgKrj05n951SZGXVTiU
pdIhXSFF/bgKK7SLZHwSpcjPKmy4vKOtL0yK+nIV1CWrzl66I0WeVmGb2d9I
++NS1J+r0PbXbk/TFinytQojtkQ+eO8sRX26CkWT3utcnSBF3lZBY1Zz5VEj
KerXVZj2RCb9mLQU+VuFdPvo1OtdktS3q6C0f2d8RIUkeVyFwwOnH/9OkqT+
XQXv1ZsdHd5Kks9VOLV8e/A1f0nq41WwndkRyHdKkryuwmf5jXqHtktSP+fd
3z+MlOQySfK7CmMHFJxCpkhSX6+CxEy/jJUWkuR5NZpzL+zVVZYkz6vhfkfO
pp1PkjyvxpuqmVUFDRLkeTXmjri3Nz1bgjyvxt/eyMKcrxLkeTWumZ9pbXom
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
3gRuqRGjFdgD1vMmPHf59v3pxR6wnjdhRQn/A2Z/D1jPm1BS9iSWs74HrOdN
qL2xz/jhgh6wnjdB8a9ThMeEHrCeN2Frlun28aY9YD1vQmuE4XhdxR6wnjfh
vw17ZBX5e8B63gTLW6uqlLndYD1vgsoVxyDTgm6wnjdh4kDq7Nk/usF63oRl
PUfi94V1g/W8CRo/laQ/+neD9bwJfZe3KQqf7QbreROGW59JW+XdDdbzJmzy
2mGZvKYbrOdNaP7oaDp1fjdYz5uQvm5rePK4brCeN0Fi9ITo1SbdYD1vwmJ1
hxkiit1gPefiQ1zn2E/83WA95+LI81EX9zd3gfWci12VGWNmF3WB9ZyL2k/B
liYJXWA958JSI36dwrsusJ5z8bh6foZUQBdYz7m47XPCQ/lSF1jPuQg/+UrD
8mAXWM+5aDcYzVm4qQus51xMfhz81XdxF1jPudAd8eR63JQusJ5z4bA7c42i
TRdYz7n4WduqvkOrC6znXExx+v2+WLwLrOdcvDzy2dSluxOs51wsnOq0uai2
E6znXOh9TNzmmd0J1nMufJVcLWRjOsF6zsXGHId7Ua87wXrOxVf5T2E+/p1g
PefCdvbIdTPPdYL1nItFi/WCdfZ1gvWcN77D/ftENnSC9ZwLqQqnpG7nTrCe
c3HD/pNfz+ROsJ5zsfldeZyoTSdYz7n4T2H/KgPtTrCeczH23lQXR8lOsJ7z
fhaQuHe8twOs57z1+B1kHl/fAdZzLszTf/Uo53eA9bwZnwZ+8nnHdYD1vBkT
rWFf8bYDrOfNSNhnet41sAOs580wXXhloNSvA6znzTi/7bCv15EOsJ43g9Pb
pSDr2QHW82YsLJUMilzRAdbzZhj75IzYM7cDrOfNsDXdGDhhXAdYz5uxNKN0
QMasA6znzRBsXjL2t0oHWM+b4VfVNb10WAdYz5vx9Wy1dn5HO3nejJFG4z+X
1rST582ov2sk8ye7nTxv5vXZDEW52HbyvBlzdrp/nxjeTp43wyO9Q3pvQDt5
3oy7r6L+RPq1k+fN+CLVsEbmaDvYv/c2I2PrjSWe29tRPeQ5b/wydfGF7u3k
eTO0ngq9WDi/nTxvhsMJ5a7cie3keTP0X054ssGynTxvxpG4qy+FtNrJ82aE
ZU8QeCXZTp7z7u9jt/tr+9vI82Y4Z4rsNeS2kefNYNoWnmwtbiPPeb8v5h6V
mtJGnrfgzbQpmm+/tJHnLbC/LHXtycs28rwFB55lqgfdayPPW9A2+fGL1+fb
yPMWyB264RB3sI08b0GEYdg3ztY28rwFy+7x2SqvaCPPWyAgcfP0Asc28rwF
R8IPRdyc0Eaet+DT8Miv9RZt5HkL1M+4nZ+h1Uaet0BNYKtamFQbed6CGU6t
7kYDreR5C25bdC162tJKnrfA8MBJrl15K3negnWjQ/RTMlrJ8xbozvbmeka3
kucteC3UNEn7TSt5zvv8l9oqhQGt5HkLTGoMNjy82kqet2BSqoTRjhOt5HkL
VoxunDN/dyt53oKSsUXpoz1ayfMWHJvX88x8SSt53gKvZR5pZjNbyfMWcEsm
jR45tpU8b8EHg/eFs81ayfMW3K1reb1FvZU8571/vs6rmxKt5HkL5gkeSknr
/0Oet6By4nQB2ZY/5PkvTNL4PH1l+R/8DxAbg3k=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1: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
z7NV9+w6OcrXCuhaiyXtWyBHfaoCEfs8xm+ZLEd5W4FrojKuW+zkqF9V4Hpi
16b9hnKUvxVgdE3EzinLUd/izl9n/drnonKUxxVQuyW0JKNflvpXBU5VKNQI
tshSPlegI1RCfHq5LPWxCjSELYz1+S1LeV2Be2bWf2q+yVI/q0CV1q6H0z7I
Un5z73/d8y9vAmWpr1VgSmjsXAN/WcrzCty5ddL5qbcs9bcKvPphcMnitCzl
eyVOTuM1jjsoS32uElu7J0m7bJOlvK9EUJzRRKFVstTvKjE/59jTqDmylP+V
6DXOx+FJstT3KuH45riwk40seVCJsYG8bRIGstT/KiHNWPTUKcmSD5W4Fn1K
Pl1UlvpgJfhKDjrFDsiQF5U4V+OzK6JVhvphJZ4uYHyjKmXIj0pYnb4W/j1H
hvpiJQKPp8cXJ8swo/F/hDvejS6Rgx9l6POgSjTzHfUyeSNDz4uVuCIT5LDu
iQx9PlSJfJ/gN/d9Zej5sRLPWsX+Vl2Uoc+LKuE37Nru4C5Dz5OVCH3R9+b6
fhnqm5VIWfNBq3uTDHlUCUnvlWO3LZeh/lmJR80Nf0tnyZBPlbgZ7jljo7MM
9dFKWBQ12TRby5BXlZDr7w/0NJChflqJN7pvX+qqyJBflbik1KCXKi5DfbWS
+7xub9IzJE2eVWK5b3TDvlpp6q9V0HnXeaInXZp8q0LhjXO5tyKkqc9W4cGd
d1VTH0iTd1VIKNzhK3hOmvptFUz4nIoL9kiTf1W4YrvyddxSaeq7VXD8MtAe
7SRNHlYh9NTH4O8G0tR/q3C85u/3Kglp8rEKXlaJVgqdUtSHqzDddmbh8hIp
8rIK6TI3IoO+S1E/rkLJmaoPcqFS5GcVAvLtsy77SVFfrkL7wS/9SielyNMq
/J3yWi98uxT15ypEFVmN27xQinytwtDKFAuD8VLUp6tww2FVW5euFHnLHU/y
mBNFYlLUr6vgY7v0a2a7JPlbhb6TN8ILiiWpb1fhsMbAP+3fJcnjKuTnyWzR
eiNJ/bsKfr0VfGvuSJLPVahY4KgQeFqS+jj394MsrorsliSvqzDB6timY0sl
qZ9XwYjH53y/syT5XYUOKx+Ot7Ek9fUquN5de9JOVpI8r8b72HDHhj4J8rwa
aa5zBN5WS5Dn1XDaFFVy4acEeV6NNzyTPrhGSZDn1Qg6rX5m1xMJ8rwa4cE3
bQ9fkSDPq6HZMBDpc0SCPOdef04m36cNEuR5NRyvhoj1zZYgz6shPDD/2wwH
CfK8Gnh4Vf+FtgR5Xg2P2itqimIS5Hk1jh34fu9Whzh5Xg1JN2k/gzJx8rwa
KzRDhr+liJPn1Xi9Ri79cLg4ec4dT3Reu2OAOHlejYOzPbaLeImT59zx2Bmo
cQ6Jk+fVUE32GixaL06eV6MmUEOgdLY4eV4N7Uvtun8cxMnzaqhbGM+T0xUn
z6sRWNvz3z8S4uR5NdqHXz883y1GnleDr2bP6/xKMfK8GoU/1vpM+ClGnlfj
9tpLU4OjxcjzahRENUVZPhcjz6sx+cTf2s8+YuR5NTLXuX1d7y5GnnPHy1ye
JLNDjDyvwR3pm/MyloiR5zWo3KZSGQAx8rwGT2eWtnqYi5HnNZjWfnnPXmUx
8rwG39S/zNvNL0ae16CzWeXiv62i5HkNssOjpH2LRMnzGnx9tSs/LkmUPK/B
q8m5Of3vRcnzGphfCu6f9kiUPOf+/J5c54ArouR5DRqkn/oIHxMlz2tQ4tVZ
77FVlDyvQdr70omCi0XJ8xr80kw4cW+SKHleA9X3tk8nmYuS5zWIut/96K+y
KHlegyK/vt3vBUTJ8xpoLTXuPfNXhDyvQfKPhc6bS0XI8xoc2G9gtShNhDyv
QXvVw8/zokTI8xo87N1btPK5CHleg+p//jvndkOEPK+B08M/r+6dFCHPayD7
8z0y94iQ59z1yQ2fqrRahDyvwSXtWv+dM0TI8xr43VJcmGYvQp7X4P388hkT
9UTI8xpsL6g4Fi0tQp7XomeiU+20QWHyvBbyH7f9V84RJs9rwcT1m1/KFybP
a6Ghs7wOicLkeS2mXJN+JRAuTJ7X4obix215j4XJ81pItGspR10TJs9rsevh
5pAXJ4TJ81psb4nWfLpbmDyvxeF/yleErBImz2uh1lTq8n2GMHnOHd+HD6qN
DsLkeS3W7TG7pGUgTJ7XIt9x/KP1csL0fFgLXocJ80J5hOnzoFosONJwU6xV
iDyvxQPvwtWHSoTI81rMtP33cWOaEHleixOh69e5xgiR57WAhNY5vkAh8rwW
pzjWYk9uC5HntZi+6UfN/PNC5HktilZVSooeFiLPa1ES9udYxmYh8rwWgopN
Cs8XC5HntWjeLJd1frIQeV4Ld1W3oMPWQuR5LTQV99w7oC1Entfi3qzvfv9J
CZHntfjZedfHZ1CQPK/F/DvFZ983CZLndXj59PqWqiJB8rwOWmbzTHXSBMnz
OmRNMkzbGSNIntdh5S638XGBguR5HSoUuAF8V5A8r0NZl5f3zYuC5HkdFjwo
nSzzryB5Xod92xffu7tdkDyvw8fLPtetVgiS53VIOa2k+3u6IHleh8+7t088
7ShIntfhTWBPlpORIHleh6dDLk0CSoLkeR3mvNTbVyAoSJ7XIfWA1OqYTgHy
vA69cZOevawRIM/rYLFS3PFxjgB5XoecRwVyL78LkOd1cHvyZGJ0hAB5zr2+
f+eDvOcC5HkdprVZWPL5CZDndShZWlk27rwAeV4HUZWoN8ePCJDndWjY8vVG
6jYB8rwOPU2G7oYrBMjzOkT4fN58ZYYAeV4H98LXM4bHCpDndRh/LlLJw0SA
PK9DR25QqoiqAHleh7Gvb6wJEBUgz+vQv/HCl8l9/OR5Pbp2r6lv5fCT5/Vw
MruTGVjET57X451mluv+H/zkeT28Vd7HMJ/4yfN6vNgYGKgZyk+e14P5xGsn
FMBPntdj1y3B+X3X+Mnzeozf3d7We4qfPK/HkgvGKoJu/OR5Pca6SkSob+Yn
z+sx2XNWvPNSfvK8HsdEsu12T+Mnz+vR7iUu8MyRnzyvR5rHHtN6Y37yvB7x
Ver3x6ryk+f18FzlufCGGD95Xo9uxmhyTz8feV6PZ4/stuxs5iPP61G41fRd
TSkfeV6PhfJ52nsz+MjzejzMv/ByOJ6PPK/HFt/5ePCejzyvB6fXp3Tacz7y
nHv/7vtP9Prxkef10ApMlo+6yEee14N/zZs7p//jI8/rsX2dNf/yPXzkeT0m
bjSZ4+DCR55z12uv7k7thXzkeT3mJEYuVZjCR57XI0ahUkDBno88r0cm0+uq
ZcRHnjfgq9jR63YqfOR5Ax49/uGyRIyPPG/Ay3NLMk4M8JLnDZCOMygJa+El
zxtQMUb9RFs5L3negNh4zUCnLF7yvAF/40+suv6dlzxvwK3Lwef+fOAlzxuw
dWm2werXvOR5A0QdD4/56c9LnjdgsTLP/bnXeMnzBrRvfLM55zQved6Am9W5
p3Yc4iXPG7BKprBBcDsved6AMW+rfUNW8ZLnDdif+9x9/Vxe8rwBBW8G/dTB
S543YJzKmtIKG17yvAHNO/nnhBnwkucNiNvgkn1FmZc8b8By/+gDB8R4yfMG
pK6XUN8wyEOeN8Bz752UlX94yPMG6LlkHFlTxUOeN+DBWI7ajlwe8rwBe6I2
hnik8JDnDUjTiDYMiOUhz7njrRzvnvKGhzxvwMdvB18PPuEhzxuQM5kTONGP
hzxvgMth2YNnLvGQ5xy4W74ZzHbnIc85mDRu6WRrVx7ynIPbb3McfDfzkOcc
rJqTmMW/goc85yB3S6GC+2we8pyDH1P62wadechzDs65NW+7ZMNDnnPgZeC/
Q8uQhzznwCjycWusCg95zkHExIz2LRI85Dln5P+f71Xi4SHPOdCfmm35tG4Y
rOcchBULp5v/GgbrOQfD7octkiKHwXrOQeC99ImHHw6D9ZyDGzoCfxzOD4P9
/JeDfxY9cRLdNwz27z0cBGRpq7QuGwb7eTAHHv6W++qch8H+/YeDVzuyHdoM
h8F6zh2vjtQGaalhsJ5zkNduXzSpawis5xwo75x//1TpEFjPOZgg/fdaduIQ
WM85mPPuY/CEN0NgPee+f797ZdjtIbCec5D118bA+dQQWM85WCp1cHPBjiGw
25mDmMyuGxcWDYH1nIPyFs9nMyYMgfWcg4kJ77xU9YfAet6IgYNhYwfFh8B6
3ggn34QHbR2DYD1vxOsS7ze9JYNgPW+EbYTBermkQbCeN0Lj8sIAp7eDYD1v
REH2lk3/3h0E63kjZgv8vffdcxCs541YNnuSk8GeQbCeN0KqLXrcrWWDYD1v
RGb+Uk9FDIL1vBEJGvPFX5kMgvW8EW+XDyXOkRsE63kjvNW3BfIMDID1vBFy
mUrPE2sGwHreiFu7E4Ie/BoA63kjPBWuvDkXPQDW80ZEFDk+83g6ANbzRrhE
Lfe4eHUArOeNWBj6wfrp0QGwnjdi/inlkJ8bB8B63ojVQU9qxOYOgPW8ETui
V/5c4TgA1vNGzHqrsTZCZwCs542o/nfwtL74AFjPGzF2U6vNk85+sJ43Ijd9
hotNeT9Yz7nvJ2XQn5HaD9bzRrhvjB08FdEP1vNGCCZlrpr8qB+s540IbKvh
lbvcD9bzRogXqta3He4H63kTeM9LDFdt6AfreROCOdETaub0g/W8Cer7En26
HPvBet6EZYuEupT1+sF63oSvMp7rZkn2g/W8CUJ+O6K9evrAet6EzIuKA0VV
fWA9b0JogLKq868+sJ5z319WQCg0pg+s500w+hwRNeZFH1jPm1D5R8zwy/U+
sJ5zv+73dV5/og+s59zxnQ/tkNrZB9bzJrzM9XT+ubQPrOdNeH5KV/IB0wfW
8yYMT+lbddyiD6znTdjYWauyU6UPrOdNGJOn7LxNoA+s501QctSMdvvTC9bz
Jqz3bD/pXdwL1vMmzJwhfT46uRes501Y5Fsa3x7eC9bzJtT17jB1ftwL1nPu
fE0aeOt7tRes502oXpA+Z/BYL1jPmyDx6V3TwW29YD1vwtSJBed7F/eC9Zw7
XqMLUt7oBet5E3yaE47ZWPSC9bwJ58Y8/lKl0gvW8yZkqPvmPBPsBet5EySd
D7451NYD1vNm+C5wYpaU9YD1vBlzJrX+x/zoAet5M7aqrl7iFN0D1vNmNPdw
Pk9/0QPW82aszR4IX3+zB6znzVhYvsDiwqkesJ434/mxQNVPe3vAet6M3lPe
rrxresB63ozoblWDpTN7wHreDNkHWcYRDj1gPW9Gtdd5VwP9HrCeN0Mun7/z
sUwPWM+bYWM4EGw51A3W82YM7l7mndTYDdbzZngErLy6v6AbrOfNWBDg+cAw
qRus581odFsW1hDeDdZz7vjOmsZ9fNIN1vNmDHsPxd736QbreTOmmAU+uuTR
DdbzZmSZTNx0bk83WM+bESzB6fJe3Q3Wc+589n5f/GJmN1jPm3E01XNnmmM3
WM+boWY+2WrIoBus582QD15xd5J8N1jPm8EzSzDgCm83WM+5v39w8rj61i6w
nnPv78f8NYtKu8B63ozx9zsHkn50gfW8GV1bp8vO/dgF1vMWzAxde6UksAus
5y3QDdHd7H6nC6znLZj2SuqKyYUusJ63wDF/7nDF4S6wnrfgeN2k8FdbusB6
3oKk3RcfuS/pAut5CzpbYqPWTekC63kLwvZq/Z1j0wXW8xYo5a6ZNEOnC6zn
LVh+foHfAukusJ63wCLr+Z8tQ51gPW+BRMvnaReaO8nzFoy743UlsriTPG/B
yaFnMW1pneR5C+53FX2b+LGTPG/BllnhAddfd5LnLdAcbEHH3U7yvAXBAVL3
N1/qJM9bUO5T/LLs307yvAWq4zNcduzoBPv33hYU5N+PGlzRiepRz1vwS8cp
OGBGJ3neglWu06zmj+0kz7njKXB3FDXuJM9bcM/wQGSGUid5zv35fPlnz4Q6
yfMW1Ngv7jzb1UGet2CrbejjA7Ud5HkL+mV3PtmV20Get+BdOf7sT+wgz7nz
o67ueTqygzxvRdfsG/MCXnSQ563Qars4I8WvgzxvRfHRtC3D5zvI81bsUwi+
N/loB3neipmfAsqube8gz1sxbnGBOWdFB3neipb63n8Xzuwgz1sxa/uML1/H
dZDnrWhco9rJmHaQ562QFnovnabaQZ5z39/cUGCjWAd53orwP1bJfP3t5Hkr
nr0wWPK2sZ08bwVHlXm4s7idPOde77HgkzHp7eR5K+6OFVo2/KmdPG/FYsnG
4KLQdvK8Ff9suxOQENBOnrdCzGqBwQefdvK8FVuLcu0iT7eT563YsUY2Mc6t
nTznzl9qcGbu5nbyvBUrftXM7VnaTp63YuDMjDGG09vJ81bEbtuxd93YdvK8
Fd9+hfE9Nmknz1tR+X51TatqO3neij0HG8Rni7eT56249Kd075uBNvK8FXLF
s/h1WtrI81b8TZyecL+sjTz/A91xmc/0Mtvwf9qSqXU=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"PIP angles (degrees)\"", TraditionalForm], None}, {
        FormBox["\"Time (s)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       InterpretationBox[
       "\"Lagrangian and IBK solutions with RMSE: \\!\\(\\*FormBox[\\\"\\\\\\\
\"0.118\\\\\\\"\\\", TraditionalForm]\\) degrees\"", 
        StringForm["Lagrangian and IBK solutions with RMSE: `` degrees", 
         NumberForm[0.11775947222016567`, {
           DirectedInfinity[1], 3}]], Editable -> False], TraditionalForm], 
     PlotRange -> {{0, 1.}, {0, 21.38328073512326}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Lagrangian\"", "\"IBK\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.921913503654631*^9, {3.9219135516799784`*^9, 3.9219135670195475`*^9}, 
   3.9219136197360053`*^9, 3.921913680805874*^9, {3.921913774284373*^9, 
   3.921913798499532*^9}, 3.921913855183072*^9, {3.9219139338322954`*^9, 
   3.9219139435682945`*^9}, {3.9219140000255804`*^9, 3.9219140207946568`*^9}, 
   3.9219140741514845`*^9, 3.921914896164211*^9, 3.9219150432177606`*^9, 
   3.921915078552924*^9, 3.9219151100295506`*^9, 3.9219151810006495`*^9, 
   3.9219152228552465`*^9, 3.921915255358945*^9, 3.9219153062436666`*^9, 
   3.921915356883729*^9, 3.921915399141369*^9, 3.921915444655263*^9, 
   3.9219154766547766`*^9, {3.9219155190746756`*^9, 3.9219155260176134`*^9}, {
   3.9219155637618866`*^9, 3.9219155779440556`*^9}, 3.921915622296234*^9, 
   3.9219156998954883`*^9, 3.921915783626521*^9, 3.9219158476382313`*^9, {
   3.921915964703168*^9, 3.921915999321947*^9}, {3.921916066979995*^9, 
   3.9219161138746805`*^9}, 3.921916167395401*^9, {3.9219162298583555`*^9, 
   3.921916274674012*^9}, 3.921916429991445*^9, 3.9219164763651104`*^9, 
   3.9219166007867165`*^9, 3.921916712282387*^9, {3.921916780432417*^9, 
   3.9219167973462954`*^9}, 3.9219168621134963`*^9},
 CellLabel->
  "Out[4080]=",ExpressionUUID->"6947b86a-f748-430a-9772-7677adb0494b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
DfW8BpY5i6Wbqec12JqgbrCZel4Dmw6Pum2intfgTHr6IGvqeQ3e3Dk/dCP1
vAatmw3ov4F6XoOk14Xt11PPub9nf31dSz2vge2C7Mw11PMasBufMqup5zV4
9OnTzlXU8xqM9qs2Xkk9r4H5Ea1yOfW8BhHjbX2XUc9rcOX3Q/Ol1PMaSNYO
1SymntfgfcXM84uo59zr7Vg9YCH1nLtff0rDF1DPa9H71qTZ86nntQj7lJkq
pp7XouxW14WW1PNaTFt5MMOcel6LTcvWzzejnteik+ekJFPqeS1atNiNOdTz
Wuzduy9sFvW8FgVnHw8yoZ7XwirQ86aIel6Lk4MOtgD1vBZdJ+c6T6eec+8/
trVyKvW8FqpXJ1ZPoZ7XInvfzdRJ1PNa3BE9njGRJd//1mL+/cFP+O8DhXlP
LSJ7rh7EzyuE74Nrsf+6n+8Ylsx/atH/zgJDY+p5LabWf351FPW8Fg1fGncc
ST2vRZ9n9a4Pp57XIiJtV89h1PNatHr/5u4Q6nktlneeM2Ew9bwWjQ4MSR5I
Pef+v/vDDUbU81pM39nsT3/qeS2+zHbw7Uc9r0VMSpM5fannSmzb1bCuN/Vc
CcUs94Be1HMlDjuGr+xJPVeiZ+OHnXtQz5VYd9m1oBv1XIlD4csDulLPlWD3
jNltSD1XYoXUyLQL9VyJJalT+namniuRt86pQSfquRL3FEU1HajnSlwavDXP
gHquBDO7y9v21HMlDJ+WxLejnisRUhAS35Z6rkRs+aGUNtRzJRaWjchtTT1X
wsw+RNGKeq6E10fZ35bUcyXm9HnUvSX1XInPq+qmt6CeK+GdeMqmOfVciawQ
k8vNqOdKnPtQP74p9VwJkxU3fjahnivx3TFvfBPquRLLn3jsa0w9VyKo15nI
RtRzJSamXKvfiHrOHV93l3kNqedKrNrRyqcB9VwF2ciGH+pTz1XoGTzUtD71
XIXH5aZ36lHPVWgV2u3XP4Z4roJbh60r+VrwXIVv3T5H8t/fC56roC473IOv
Bc9VeG4U7/KHzt9VWB11toqftwmeq/BxxKV5v+k8XgWDbjee/mKI5yqULdzQ
6xedz6sQVBLk9pMhnquwzWxy3Q86r1dhfoN3q37QeZ4KyZ2Hx3+n83sVwrWd
R3yn8z0VlOsXe32j83wVxhbd/f2VzvtUaH6tyPorne+rsGpBeOIXOv/jfj+6
wbAvdN6vgrvbufOf6TxQhfylvVWf6PxfhZhz58w/0fmgCgXr/SUf6fMAKrTZ
Mu5PHZ0XqvAq23BxHX0+QIXGawewH+j8UIUvXqO/aunzAiocOdR1lpbOE1XY
5/78vIY+P6CGocOXTDWdL6rh3yqok5o+T6DGsQuvlqjovFGNSccNLyrp8wVq
fFvtl1hL549qSMtMftXQ5w3UWBmnGVpD55FqnBp6ZVk1ff5ADddX/Y4q6HxS
jbW46l9Fn0dQw76JNFpO55VqePz7WySjzyeo8aue5mMlnV+qsfXGw8Z8LXiu
Rs/T6FhB55lqRK1ge5UzxHM1OjytHiCl8001zm5vN4h/PkLwXI1dRoONSum8
Uw13v6m9+XmX4LkabhdXdSqm80816kyuNy1iiOdqzHZp9LWAzkPVmOgSLs1n
iOdqONZPSMyj81E17sWY/5fLEM/VGBSz7lwOnZeq0eBObzv+eQ7BczUOqoNm
ZtH5qRqX7vcxzGSI52oM0Pop0+k8VYM3J+a9eM8QzzU4tcXi7Ds6X9XAzPXF
0jSGeK6Bf3FSr1Q6b9XAosxLnsIQz7nfn7MMSqbzVw0ylhhs558/ETzX4PNL
g5GJdB6rwdGNTmp+3ih4roF32Jb/4ul8VoMFlu3t4hjiuQZsok//WDqv1aD3
ikml/PxS8FyD83atbrym81sNl1/nLHzFEM+581vbpsVLOs/lXi/lciw/Lxc8
1yDh8h/nKDrf1aDoyMGxkQzxXANNJ2NVBJ33amBlPJ/h5+synecaSNr+XPeU
zn81KA1a2zWMIZ5ztb1/9hM6D9bA5oDqIj+vFTzXIHSozfxHdD6swSRP49b8
8z2C5xosfuKU9pDOizXopF3uyc9/Bc81iAr7tug/Oj/WIGjQAUP+eVHBcy1a
1fwou0fnyVrM9711/y5DPNfifYND+1g6X9aicu/TWQxDPNciYaFtRwmdN2tx
sIhV8M8jCZ5r4XzU86U/nT9r0bbvpGv8PFvwXIsJJuG779B5tBavzHpa+TLE
cy2WVx8z9qHzaS1CDT50us0Qz7WwaHXkjzedV2vh2mdcNT9PFzzXYqpBv9wb
dH6thcf1RYn8/F3wXIslt989v0bn2dzxm/uE8s9XCZ5rscM2IfgqnW9rUb1W
/PAKQzzXQiIdF3KZzru18OvrEnaJIZ5rEd5q1MuLdP6txR+lKJl/fkDwXItb
rk/yL9B5uBbee44p+ecNBM+1+KoO0D2PIHiuxeiVnbvzzysInnPHPz9j4jk6
L9ei64OU5fzzzYLnWrzo8N35DJ2ff8CojHn+/PNk/wfrYjBw
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxV2XdcE4f/x3FrXbWO1jppKepXHHW17v2O1gmxTpQp4AVr1dZV26q4VxV3
rXuice+tOBBBAUH2TJgZhCQQtY7aqv3d3ecSPz//6eP1oIbc5e7z/FxsMXnm
2LCqVapUKf+wShXpv///TzfVmxNP00dOHo30pE7Trm5ydghaPVr28/7k7qp/
Fk+79fMfUxE83+2kflxP5eezsCyrKHvA016qhQ3PDitZ8DOOjg1+OHZjH+X/
/w2/aSpn9m7eTzW/vPU3tU6H49aA8oKukf2Vv78Udy7d6rqwAVT9ikZt2PHT
cpy2/XPFv5dKeb2VaBf0sdvuQpXq5og6VduvWQ3/k7sCvMMHKq//O5peHmdN
/nSQqs/l+F/uHFiHAaqR1VYfGKT8vvWocqjqvBzPb1XXv1xlG3N9I16kDGr7
P+23yu/fjB9vnHF/4D5YtTe2+fk5U7fAbUVZjWabByvvZyuCV0f1nPVmsEr3
Wv6FmLp59a3PhSHK+9uG+Q3/WfZ97BDV550LWtVY9ifabJm3Yk/zocr73Y6b
sz9+9++vQ1X+mr7SKyKnf8buhMShyvvfierjEg8ObDZMtXuX/AeNnv7nuV8Y
phzPbkRN9Ona+OQwVd7jV+MM2j1o0Er3pMA+TDm+veho/uZx6w7DVc2qTajX
8eI+lCytfsRj6nDlePfDq+NXWc8PDlf59pZfEOFrps9JzR6uHP9B9N603S//
oxEqdc+1A0NMB6HKNI7p1WeEcj4OYfTHDdrWmzpCZR8jveIhhHRql7DojxHK
+YnEtHWnAo7dGqGKmFH274mnkVjkM3TiCcMI5XwdxsvPruw5WMtL1X5NY/EQ
DuNS5oVVx9t7KefvCNx61P5Qp/ZSPTo05Opfb48g/UiTo6NneCnnU4uHe15e
a77OSzVdPFtNqx1FYNydEaFHvZTzexR7j5kHt7nnpaqdc3hW/9rHUKvGxQWr
872U830My0LiL2555qU6KR3uJ8dx64THDf+PvJXzfxyd9309/dmX3iov6eUa
n8CFyJ9jp3b1Vj6PE2hqhzVpqLfKKp3uL04id8vfPTr6eSufz0m033Zh8I5p
3irp7KW2PIWPB3V51WSht/J5nUKh5/JVUeu8Ve0CN8W8aHsa62JeLd+wy1v5
/E4jLju5bOcxb1WC+Gpunc8g2HdwM8tlb+XzPIMutrFPV97zVv2wpSIc3c+i
zv6KuN+SvZXP9yzG77TMTMr1VolvTjzkc6i3Zs2Y3w3eyud9DqbpVwIvV3ir
xosXj/iRYpq3panvK2/l8z+P6V9fOb6gilp1RDx7OYfPo9boJiktP1Ir18N5
1FRPfz7hU7Xq+dvM38pbX8Cz/A7t3ZuplevjArxf/9ptYXO1arB8AVzA024j
V/7SRq1cLxfQGXuHNOykVm1rKh8QNsU3meTXTa1cPxexr0bGbK8+ahW9vYso
vHTGbINauZ4uYtn17WUDh6hVXeU/l1B33eHvR3uplevrEq5cfNvq81Fq1Yro
RPEKuoS2ccdPaceplevtEr7zben710S1KkP89MVzgsMeer+agWrl+ruM3y9u
v2IMVqv+J7/gZexI3j9so6BWrsfLKPK3x9X4Xq2aO1X6AK6gZXyrmNHT1Mr1
eQXu3yw/9dOPatX9F23FT/gKDiUfSJ08S61cr1dxo0PH0M5z1arP6A1iUNn6
mdnz1Mr1exXh9SY98/tNrZLfXfxVvEt6Ehe1QK1cz9eQ6nfszNtwteriPsex
B97XEOM52KfFErVyfV9D9b6eY9suU6uqygd8DZ/smtmq4Qq1cr1fxwrPDr3M
K9WqsXTBwLTOx3xgtVq5/q/j6a+Z8wb9rlZFSoebeR3hxoVfpKxVK/fDDTTd
bvlvaIRa9Ux6Od8bWNNldI9T69XK/XED/zvo//DNBrVqkHT5627AsNpyut8m
tXK/3ERGrfsZ0zerVVuly3fSTdyo4/VFxBa1cv/chDXOI2DPVrWqZIH0gdxE
7rZEv31/qJX7KQo/Fg/K2bJNrfpGvsCj8MH3i36f/6daub+i8Kzxq6Y+29Wq
ZX9+K14yUTCk9mjvuUOt3G+3sMOo8rOKndZS/oDxtmqN7tqdauX+u4UahtTh
E3apVS2k6V9xCxl/3mjyTmy6H2+j/ZoX7vt2q1Wzpdtj1m1EeXdN67pHrdyf
t9HnSM1DMWLfkz7dv26jbl6rVyP2qpX79Q40Ky/2TBT7U7ohcffCkXvf7lMr
9+8d9HjmqLwqtnz6Xt/Byg6pDVvtVyv3810Edm60MkJs+e2F38XtUSPXVohN
L3cXU7pX/dHrgFpFjkfjSszfcyPFpvs9GnELfYteiH38gbd4R0fj0H/59sEH
1cr9H419mno5m8QeLd6NDVZEY6NHQFb2Qec8iEaY14Qv3A6pVX9L+sRGw/xR
QoHfIed8iEa7T0qGbxf7oJt0Q9zDpk1B61IOOefFPYyqvjOpeqRaNVz+gO+h
qPndnr0jnfPjHtZeLX76g9hPjklv8B725tf22BnpnCf3sCVgdsl9sXdK7y7x
HjwSZ/tVRDrnyz08mndP2/CwWqUSL64RdWKgaTnP0Puwc97EYGC4e6cgsS3/
Sgccg2tW3YHFh53zJwbzF/00Zr/Y0tUiXjKYGTPK/9Zh5zyKweU6V1JzxZYP
NzUGdz2vJvx12DmfYnDSNMiv7hG1Sn65Bvfx/NHIrZ5HnPPqPpr+fHt1P7Hl
cTTuPlr6bx829ohzft3HySpW4xSxaX24j88fV/tpwRHnPLsPj75jnq4XWx4H
OffRP3xT+P4jzvl2H+2WnP/inNhLpNu5aSzGta9beOeIc97FommdoUnJYreR
b6BY9A6f+Ux3xDn/YnF23xv/crFT5PUiFtGnC+u/POKch7FodWO+W1WtWvWr
dDsUxCLyo5sr6mqd8zEW276vP76p2B7S5fxlHF5lLfijpdY5L+PQ7/H2ER3E
fihdfiFx+GfvukXdtc75GYc1H3fpMUDsmdLHeygOF3q9nD9U65yncVha8913
34ndRL7h42Af/mmUj9Y5Xx9gepOz9wPFviu9vVYPsKxd3Z8ErXPePkDPz5rc
/UHs76dIfx7g9aslUTO1zvn7ABsqzn4/T2xpeRInLG7/qX+4QOucxw9QNeK/
oiViS9Pxt/IH+CVFf2ml1jmfH2LXkLrD1oo9SX7Bhzjz0Lp3g9Y5rx/C5Lhw
fYvYNeQB9RBT187Y96fWOb8f4pTnq5G7xJY+jYZnH8Kc3DB5r9Y5zx/C8djH
/aDY8nbneCjOj84DD2ud8z0e+8f83eeo2O+k2+2beEQ2LqxzQuuc9/GY3uvN
9VNiH5Uu5znx+DbJa+BZrXP+x2Nu6PFj58X+jg4YnRKKKi5qnR7E48GM3Y2u
iP1S+jhexGPAkLnNr2mdPiQguuHT+jfE3i8dbs8EVEYsNN3UOr1IQOPI2ZG3
xB4qn8AE0bsWw+9onX4koM70mzl3xa6UeUiALW3q2HtapycJKJk1/EaM2Nul
8f5vAvr9EFg3Vuv0JRGTvj48Kk7sAfIHkojEjvWWPdA6vUlEvN+CyIdim6Xx
ujgRjr7Rl+O1Tn8S4WE7fT1BbBp/iYjb/uZsotbpUSL+jf5+5yOx5fFS9RHe
5e6dl6R1+vQIaV36DksWW759v32EC+eK6j7WOr16hODPWyRKLd8eqx7hr8Fr
wlO0Tr8e4ef8PzxTxabL7xFSkuPjpCbPHqFm6L6gNLGzpI+3VhLG5YdXSE2+
JUF3NmNeutiLpNM3IgnNx9R+JTV5lwTLkEWzM8T2lC/AJHhrV5mkJv+S0HNY
+LhMsZOT5D/YEX0xSmryMAmNx8/9MkvseX9IAzUZi8bUCpeafEzG6MfXM6V2
ly/oZHw7J7ZtttbpZTI2nZ/6m9Rx8uNVMtrvKL0vNfmZjGLjDx/niP2jNE7T
k1E77+tRUpOnyZi4atomqRvJN8hjZNUakSQ1+foYOaNeV88V+7Y0DiY8xuKf
IvtJTd4+xuhRP86SOkx+/HqMludXHJKa/H2MiG21U6WuQzccjsxv/kZq8vgx
Ag+aPPPEli8XtxR0+TR8pNTkcwp++77qXKnljyMwBdewZbvU5HUKav4z8LrU
9HiWgoEnO+dKTX6nwHP03JdSyy9XlAKPUS0+y9c6PU9FcezITvmu+z0Vk9vU
Gy41+Z6Kjtd+Ccl33f+paDZ+569Sk/ep2O9YviHfNQ9Ssf7qsEipyf9UNO/w
6kq+az6kYqHHgXipaR9IxdB47/x817xIRefdtW1S036QCu9p5f/ku+ZHKkY/
f/6RTuvcF1LxeGbPpjrXPEnFE80NT6lpf0jFsP9WdtG55ksqOmi0A6SmfSIN
l8taeelc8yYNmvEf+0hN+0UaXp2dFKxzzZ80nFrc+gepad9Iw6wh0+foXPMo
DX/X775Qato/0nC2/roVOtd8SkMvx08RUtM+koZNw8u36lzzKg1RE/7bJTXt
J2lY0uzaQZ1rfqWh9ZJGx6SmfSUNz8Z9eUbnmmdp+Dop66LUtL+kYek61XWd
a76lYetnwm2paeCkw2PwwBida96lI6xB4QOpab9Jx4Dt/R7pXPMvHTVCQ1Kk
pn0nHSFVR2boXPMwHTVXVc+RmvafdNz5aH2+1PLlvjgdIyNKC6SmfSgdNyI/
LpGavj5IR9d+tY1S036UjitdS8w61/xMx/KnW8ulpo9X/Hn1Fnada56mY6nn
+kqpaX9Kx6LIrCc613zNwIYb/z2TmvapDEz8oO4LnWveZqBR5n8vpab9KgOj
buT9rXPN3wxcfb77H6lp38rAv8e+faNzzeMMHK+T9VZq2r8ykFhvzH8613zO
QFrUjSp6rXMfy8AvFz6pqnfN6wws2DjhQ6lpP8vA7WYR1fSu+Z2BGbfOVpea
9rUMpGyIqaF3zfMMLH76sKbUtL9loG7v6Fp613zPROyQ0x9JTftcJrL6r6+t
d837THT/OuRjqWm/y8SbY23r6F3zPxOz55rlpn0vE8vn7K6rd3kgdtiQelLT
/peJV1FlcpMPmegbsay+1LQPZsJU57NP9C4vMlH35l65aT/MRF47j0/1Lj8y
0ezpbrlpXxRff9knDfQuTzIxp85SuWl/zMTaiHK5yZcs+H458jOpaZ/MQpdG
p+Qmb7LQs/jDhlLTfpmFY28nyk3+ZKGP5ZjctG9mYWr153KTR1mI/6NfI6lp
/8yC965lcpNPWfhEFyM37aNZeNG5SmO9y6ss1LvZW27aT7OwOn2m3ORXFnKf
RMpN+2oWqm/NkJs8y0KmR9UmUtP+mo2PcjvJTb5lY/8lP7lpn81G2qTlcpN3
2Ti857jctN9mI/LHJLnJv2x0rV4pN+272fjgbN2mepeH2Zh5u73ctP9mo+ay
4XLT15PZKOugkZv24Wz0TlwsN3mZjflf7ZSb1sVsjPc8Lzf5mY3adx7ITfty
NnrU0stNnmYjvMUTuWl/zkGVDh8207t8zUH88EZy0z6dg7ZbW8tN3uagW+Oe
ctN+nYMJaUPlJn/Fv3/DR27at3NwI0uQmzzOwcjOs+Wm/Vt8/fRFcpPPOVic
uFZu2sdzMLTVn3KT1+Lvsx6Qm9aFHPzueVJu8jsHxbpLctO+ngPferflJs9z
xXkVJzd5novkomS5yfNczIvIkps8z0Vpgl5u8jwXz08Y5CbPc+He2yo3eZ6L
i0ufyE2e5+LbFS/lJs9zYe/1Rm7yPBfL1n7gpnd5nouXITXkJs9zUXS9ttzk
eS6+3F5PbvI8Fz/VaCA3eZ6Lf9wbyU2e56LseRO5yfM8GI+4yU2e5+HKUHe5
yfM8JDs85CbP85B+rqXc5Hkevt7oKTd5nocza9rKTZ7nwR7RXm7yPA/VF3aS
mzzPQ79238hNnufhzbyucpPn4uuP6y43eZ6HETE95CbP8/Aytafc5HkePtze
S27yPA/1OvWWmzzPQ+B1agIuH9pxfeQmz/OR6dZXbvJc7Bb95CbP8xE8p7/c
5Hk+omtBbvI8H4dTVXKT5/noHzlIbnreyUfo+MFyb5Y9z0dA1hC56fknH3fc
h8lNnudjQcfhcpPn+ZhWe4Tc5Hk+Eu9Qk+f5eDDRS27yPB+vDdTkuQ5PZnvL
TZ7rcKGeWm7yXIe+sdTkuQ6f7BwpN3muw/m138lNnuvQZssouclzHfbsGy03
ea5DnwNj5CbPdei2Y6zbe891SFozzu295zrUmjPe7b3nOth9fNzee67DpS4T
3N57rkO9mhPd3nuugyaNmjzXocZmX7f3nuvx60A/t/ee63HQSE2e61Fvvr/b
e8/16PofNXmux/7fAtzee65HXws1ea5H0NhAt/ee6/FVFDV5rkdTzyC3957r
UX8LNXmux4131OS5HokzJrm991yPoXnU5LkeqQOD3d57rsfTw9TkuR7Bb6nJ
8wKMUYe4vfe8AFGbqMnzAkQ+pCbPCxD6gpo8L8Drz0Pd3ntegDMDqMnzAlz0
pybPC/B8BjV5XoDpP1OT5wW4M5uaPC9AwRRq8rwA2gnU5HkBFg2mJs8L8E9X
avK8AAvaUpPnhXjYipo8L8SVr6jJ80Lc7UNNnhfi3Dhq8rwQ3eZQk+eF6LOZ
mjwvRMphavK8EHqlo2TPC/HZOmp63i3EmbHU9eULuhDN39D5Jc8LYVpNTZ4X
ossL+vxoPBfiqhc1eV6IsevpeiDPC1F6l64f8rwINhtdf+R5ETRNqMnzIswY
QdcveV6EumvpeifPi+DQ0/1BnhehpTc1eV6Ex7l0f5HnRXi7lpo8L4JXKDV5
XoRTwdTkeRFar6Qmz4uw5RE1eV6E776m30dvrwg1TlKT5+L770jvlzwvRtxp
f3a/F2OPOx0f+V4Mt/kB7P4vhvYmNXlfjF1FAWweFMOjjJr8L8artAA2H4rR
PZKa9oFiuAcEsHlRjNIq1LQfFGPuTn82P4oxpA017Qvi77vkx+aJ+PeVeUX7
QzF883zZfCnG88XUtE8U40RPXzZvinG2JjXtF8UY/Gwimz/FWPuamvaNYvT9
0pfNo2JEKJ8X7R/F0N/0ZfOpGH+2p/dH+0gxypXPh+ZVMY50puOj/aQYdc77
s/lVjFNf0fmhfaUYuw8GsHlWjKsN6Hql/aUYe5cFsvkm/ryCmvaZEvSdGMTm
XQlwh5r2mxIcbzmJzb8SDF1JTftOCVJLJ7F5WAJLf7rfaP8pwVd/BrP5WILW
Fmrah0owuweflyU4uoSa9qMS/HA/hM3PEsz5gOYB7Usl2Nabz9MS3JlOTftT
Cart5PO1BIfvUNM+VYI6xXzelsDwhpr2qxJ83Hgym7/i+ehATftWCfYOmszm
cQlCAqhp/yqBcf5kNp9L0PkgNe1jJZiRMpnN6xLUrCXITfuZeDwjBDa/S3Dv
D2ra10oQZRTYPC/Bv300ctP+VoJF2zRsvpeiioOaFpxSdBoexuZ9KQ7uo6b9
rhTv7GFs/peicbcpctO+Vwr7rCnMg1KUHqKm/a8UN+OmMB9KcU1HTftgKW4Z
pjAvSjG6kJr2w1LEJU1hfpRi5AVq2hdLUXMTtTz+fylFy2nU9H1QKaYMpabn
xVK8/h81fT9UioCq1PT8WIoeJXS89H2R+Puiqel5shQrD1DTvlmK5MVhzKNS
9J1ETftnKcz9w5hP4vl0p6Z9VDw/7zTMq1L4FlPT7VGK5vc1zK9SjD9GTfuq
+Ps2aJhnpWg6j5r2VwM8gjXMNwOWelPTPmtAoHK9kHcG3GlPTfutAZEeGuaf
AZWNqGnfNSCsnoZ5aMClWtS0/xogVNMwHw3IqUJN+7ABsW8E5qUBuhfUtB8b
MMAqMD8NuJhLTfuyARHRAvPUgD2HqGl/NqBtuMB8NSBjNDXt0wZsbS4wbw3Y
Z6f7kfZrA/yvTmb+GuCzhJr2bQM6jpjMPDZgeSNq2r8NqDCFMp8NMEVR0z5u
wE1lPpHXBixZRE37uQEfKPOM/DbgbCg17esGbFKaPDei27RQ5rkRBxeEMs+N
GLollHluhPVUKPPcKO6zocxzI4SSUOa5EU1ehTLPjahaczLz3IiT9Sczz43I
UZo8N2JNjcnMcyNePQtlnhuxLTOUeW5EdeX9kedGfPFLKPPcCF33UOa5EbOs
IcxzIzpsC2GeG7Guawjz3IiWCcHMcyPO+QQzz42okT+JeS4e/8RJzHMjzMlB
zHMjIhDEPDeiy5lA5rkR9ZsGMs+N0CzjnhuxyOrPPDfi6Hh/5rn4evf8mOdG
zPzGj3luwomjvsxzE9q19GWem9BGO5F5bkL21xOZ5yb4PJjAPDfh0pQJzHMT
yhtMYJ6boHvkwzw3YeRWH+a5CbYpPsxzE/p6+TDPTTjSz4d5boIwwId5bsLm
UT7McxM+m+XDPDfh2AEf5rkJmQU+zHMTKtpNYJ6b8MmKCcxzEzwsE5jnJtya
OJF5boJX6kTmuQn2Ub7McxMWZPoyz01YE+DHPDdhYqkf89yE0jB/5rkJrQ3+
zHMT7vkGMM9N+OBBAPPchFFfBTLPzei9KpB5bsbU7EDmuRla9yDmuRkZ/kHM
czMqNgQxz82ofS2IeW7GhOwg5rkZDe1BzHMzdvwdxDw3w+tNEPNc/P2vgpjn
ZnxtC2Kem7E0J4h5bkav29T0fGhGrX3U9H2QGUd+DWKem/FoZBDz3IxBzYOY
52akOwKZ52YMvx3IPDdjztpA5rkZHj6BzHMz3FsEMs/N6FkZwDwXj+d2APPc
jOSNAcxzM2KEAOa5GbH9ApjnZsxzC2Cei+/nrT/z3IwhZn/meRl+yvJnnpfB
95E/87wMIfH+zPMyJCb5M8/LkJLrzzwvw0q7P/O8DM9q8ufbMlRrH8A8L8Pv
PgHM8zJ8syaAeV6GbXcDmOdlaPMugHleBgwKZJ6XoV5EIPO8DAdzApnnZShs
HcQ8F3+/8vmT52XoER/EPC+DX5NJzPMyDBImMc/LMPbUJOa5+PqOSczzMvT7
Jph5XoZbM4OZ52U4dCqYeV6GjqZg5nkZ9nwRwjwvg/vYEOZ5GYpWhTDPy1D7
egjzvAzRlhDmuQXuTbnnFvQZyj23oN1c7rkFf+/nnltwJYF7bkHYX9xzC+p+
MZl5bsGZb7nnFgyaxj23IHET99yC/pe55xZszpnMPLfg5uvJzHMLzrkJzHML
QvsIzHML7vsKzHMLHs4TmOcWBG0RmOcW/HxKYJ5bUC1WYJ6L5yNfYJ5bMOSJ
wDy3oORDDfPcglhlvyXPxZ97apjnFnTrpmGeW3BNpWGeWzBd2a/JcwtGj9cw
z8WfB2iY5xbEhWiY5+LPNRrmeTmmTtEwz8uRqzR5Xo7kMA3zvBzTBA3zvByp
yv5PnpejnfL7yfNyaH00zPNyzBulYZ6Lv2+4hnlejnqDNMzzcoT01TDPy+He
XcM8L8e6zhrmeTkMX2mY5+UIbqNhnpejjXK+yXPx5600zPNyNFd+Tp6XY4ny
98nzcqxWnl/I83L0/0bDPC/HoV4a5nk5zgzUMM/LMVatYZ6Lr++rYZ6Xw0M5
/+R5ORopz1vkeTmGrNIwz8Xj365hnpfj3nH+fF6OmCj+fG5FSAp/PrditkHD
PLci/pWGeW5Fjzr8+dyKtc3DmOdWbO0Wxjy3wlN53ifPragfEMY8t6L5j2HM
cyu6KM+35LkVDTaGMc+tOLA3jHluxYkTYcxzKxpfCWOeWxF9J4x5bkXEA2r6
/lc8/iRq+vceKzqkUtP3wVYUpVHTv/9YMSuNP59bkfeYP59b0SKRP59bMeo+
fz63Ys5N/nxuReQ5/nxuxQeHw5jnVlzYFsY8t6J8ZRjz3IrCuWHMcyvSQsOY
51Z8OiqMeW7D875hzHMb9G3DmOc2dG0cxjy3YXK1MOa5DbP+4s/nNgwy8Odz
G6Iy+PO5DQmx/PnchrFX+fO5DcOO8+dzG3bt1jDPbeihfN9AntvgtlTDPBff
71wN89yGpcr9Qp7b8Lefhnluw46RGua5DYHK/Uie2zBUmSfkuQ0+7TTMcxvW
uWuY5zaYP9Uwz22YXUPDPLeh478C89wGd8UD8tyGkSaBeW7DXcUP8tyGRakC
89yGjQ8E5rkNr28JzHMb4i4JzHM73p4UmOd2aCMF5rkd8bsF5rkdM5Tv+8hz
O3avF5jndkxYLTDP7Ti2VGCe27F1ocA8t+PzXwXmuR3D5wrMczuazhKY53Zs
+lFgnttxarrAPLdj2jTuuR2PfuCei8fzA/fcjqBp3HM7lk7nntvR+kfuuR1D
Z3LP7UiZzT2349LP3HM7CpTjI8/t6KUcP3lux5nFAvPcjhbLBea5HfNXCcxz
O/b+LjDP7VgdITDP7ei0UWCei+drs8A8Fz/frQLzvAKztgnM8wrY/hSY5xVo
tkNgnlfgjdLkeQW27RSY5xUwK02eV+CF0uR5BRKUJs8rIChNnlcgSXl98rwC
tZUmzyvQarvAPK+Ap/J+yfMK1FeOhzwXj0c5XvK8AnHKvkaeVyBSOT/keQUi
NgnM8wqsVs4neV6BvRsE5nkFMpXrnzyvQFelyfMK3FM+H/K8AsuVJs8rsFBp
8rwC5yP49+3i8a3n37dXoGA9/75d/P0b+Pft4vEr7588F49HOT7yvBJDlPNB
A78SvZTzRZ5XIlg5v+R5JS4rnw95XolOewTmeSWi9wnM80qEHhSY55V4p8wT
8rwSG7QC87wSL44JzPNKeCrziDyvRLXTAvO8EgvOCMzzSsw+KzDPK1HnnMA8
r0S40uR5JV4qTZ5X4vB5gXleiWMXBOZ5JZor85L+vbcSra9QG2XPK5FyTWCe
i+8/SmCeV6LHXYF5Xul6HiDPK7E5QWCeVyIvRWCeVyInW2CeV2J5ocA8r8Qj
s8A8r8RRh8A8d+Dd3wLz3IHoqvz7dgdy6/Dv2x3o0IR/3+7AsRbccwc6duCe
O3C0B/fcgZcq7rkD1by55w5cG889d+BZEPfcgQNTuOcOaH/injtgm8c9d0AI
55478Ncy7rkDW1Zzzx1ov457Lr6f9dxz8fg2cs8dWLeRe+5A0gbuuQMvIrjn
DnyyVsM8d6C1sn+T5w4MU/YT8tyBDQs0zHMH6v+sYZ6Lrz9Dwzx3IFh5viLP
HViqnD/y/Al+V56f/g+oSvar
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"DIP angles (degrees)\"", TraditionalForm], None}, {
        FormBox["\"Time (s)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       InterpretationBox[
       "\"Lagrangian and IBK solutions with RMSE: \\!\\(\\*FormBox[\\\"\\\\\\\
\"0.027\\\\\\\"\\\", TraditionalForm]\\) degrees\"", 
        StringForm["Lagrangian and IBK solutions with RMSE: `` degrees", 
         NumberForm[0.02674235652635182, {
           DirectedInfinity[1], 3}]], Editable -> False], TraditionalForm], 
     PlotRange -> {{0, 1.}, {0, 57.302718481769055`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Lagrangian\"", "\"IBK\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.921913503654631*^9, {3.9219135516799784`*^9, 3.9219135670195475`*^9}, 
   3.9219136197360053`*^9, 3.921913680805874*^9, {3.921913774284373*^9, 
   3.921913798499532*^9}, 3.921913855183072*^9, {3.9219139338322954`*^9, 
   3.9219139435682945`*^9}, {3.9219140000255804`*^9, 3.9219140207946568`*^9}, 
   3.9219140741514845`*^9, 3.921914896164211*^9, 3.9219150432177606`*^9, 
   3.921915078552924*^9, 3.9219151100295506`*^9, 3.9219151810006495`*^9, 
   3.9219152228552465`*^9, 3.921915255358945*^9, 3.9219153062436666`*^9, 
   3.921915356883729*^9, 3.921915399141369*^9, 3.921915444655263*^9, 
   3.9219154766547766`*^9, {3.9219155190746756`*^9, 3.9219155260176134`*^9}, {
   3.9219155637618866`*^9, 3.9219155779440556`*^9}, 3.921915622296234*^9, 
   3.9219156998954883`*^9, 3.921915783626521*^9, 3.9219158476382313`*^9, {
   3.921915964703168*^9, 3.921915999321947*^9}, {3.921916066979995*^9, 
   3.9219161138746805`*^9}, 3.921916167395401*^9, {3.9219162298583555`*^9, 
   3.921916274674012*^9}, 3.921916429991445*^9, 3.9219164763651104`*^9, 
   3.9219166007867165`*^9, 3.921916712282387*^9, {3.921916780432417*^9, 
   3.9219167973462954`*^9}, 3.9219168622730937`*^9},
 CellLabel->
  "Out[4084]=",ExpressionUUID->"83c5722c-2955-4376-870f-faff8700851e"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.921915451325316*^9, 3.9219154618750525`*^9}, {
  3.921915498134137*^9, 
  3.9219155013369694`*^9}},ExpressionUUID->"af652a69-bdf8-4cb5-948e-\
88dbd432219f"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9219152680717106`*^9, 
  3.9219152762289906`*^9}},ExpressionUUID->"f9851344-49d6-46df-a2d8-\
0ca640cb37ab"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.921915493400421*^9, 
  3.9219154935755973`*^9}},ExpressionUUID->"5bdc9c05-0807-470b-a2eb-\
61cb523eec8b"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9219151233500943`*^9, 
  3.9219151604343996`*^9}},ExpressionUUID->"3a833dfa-e7c9-4a27-a06c-\
8a1869c71bf6"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.921912559035702*^9, 
  3.921912559036702*^9}},ExpressionUUID->"08acb4d5-2f12-4f10-88ca-\
15fb9aa452f8"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.921912264208992*^9, {3.9219122967326756`*^9, 
   3.921912302425215*^9}},ExpressionUUID->"daebb22b-185e-4a78-b80f-\
951edd266ae7"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9219123042880297`*^9, 
  3.921912304296009*^9}},ExpressionUUID->"03f65ffe-dd22-4275-ad84-\
2991cf6c12e5"]
},
WindowSize->{1429.5, 735.},
WindowMargins->{{1152, Automatic}, {Automatic, 0}},
Magnification:>1.2 Inherited,
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"10d50a76-82a8-45f2-b5c1-5bfff16cb281"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 31764, 1001, 3055, "Code",ExpressionUUID->"44046faf-0f51-4645-a32e-0810e3d9919b"],
Cell[32347, 1025, 1306, 19, 38, "Output",ExpressionUUID->"7f84293c-91e3-40b8-a915-2ae2454771c5"],
Cell[33656, 1046, 43734, 776, 324, "Output",ExpressionUUID->"4d329c50-2cef-4c2d-8a03-cc5143cadf2d"],
Cell[77393, 1824, 43900, 778, 319, "Output",ExpressionUUID->"6947b86a-f748-430a-9772-7677adb0494b"],
Cell[121296, 2604, 38499, 692, 324, "Output",ExpressionUUID->"83c5722c-2955-4376-870f-faff8700851e"]
}, Open  ]],
Cell[159810, 3299, 205, 4, 33, "Input",ExpressionUUID->"af652a69-bdf8-4cb5-948e-88dbd432219f"],
Cell[160018, 3305, 156, 3, 33, "Input",ExpressionUUID->"f9851344-49d6-46df-a2d8-0ca640cb37ab"],
Cell[160177, 3310, 154, 3, 33, InheritFromParent,ExpressionUUID->"5bdc9c05-0807-470b-a2eb-61cb523eec8b"],
Cell[160334, 3315, 156, 3, 33, "Input",ExpressionUUID->"3a833dfa-e7c9-4a27-a06c-8a1869c71bf6"],
Cell[160493, 3320, 152, 3, 33, "Input",ExpressionUUID->"08acb4d5-2f12-4f10-88ca-15fb9aa452f8"],
Cell[160648, 3325, 180, 4, 33, "Input",ExpressionUUID->"daebb22b-185e-4a78-b80f-951edd266ae7"],
Cell[160831, 3331, 154, 3, 33, "Input",ExpressionUUID->"03f65ffe-dd22-4275-ad84-2991cf6c12e5"]
}
]
*)

